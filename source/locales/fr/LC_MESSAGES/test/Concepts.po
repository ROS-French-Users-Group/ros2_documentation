# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2023, Open Robotics
# This file is distributed under the same license as the ROS 2 documentation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: ROS 2 documentation\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-01-28 10:12+0100\n"
"PO-Revision-Date: 2023-02-09 17:02:11.697455\n"
"Last-Translator: potranslator 1.1.5\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: fr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Translated-By: potranslator 1.1.5\n"

#: ../../source/Concepts.rst:4
msgid "Concepts"
msgstr "Notions"

#: ../../source/Concepts.rst:6
msgid ""
"Conceptual overviews provide relatively high-level, general background "
"information about key aspects of ROS 2."
msgstr ""
"Les aperçus conceptuels fournissent des informations générales de niveau "
"relativement élevé sur les principaux aspects du ROS 2."

#: ../../source/Concepts.rst:29
msgid ""
"The Core Stack Developer Concepts are much more detailed conceptual articles"
" intended for developers who plan modify or contribute to the ROS 2 core:"
msgstr ""
"Les Core Stack Developer Concepts sont des articles conceptuels beaucoup "
"plus détaillés destinés aux développeurs qui envisagent de modifier ou de "
"contribuer au noyau ROS 2 :"

#: ../../source/Concepts.rst:40
msgid "Quick overview of ROS 2 Concepts"
msgstr "Aperçu rapide des concepts de ROS 2"

#: ../../source/Concepts.rst:45
msgid ""
"ROS 2 is a middleware based on an anonymous publish/subscribe mechanism that"
" allows for message passing between different ROS processes."
msgstr ""
"ROS 2 est un middleware basé sur un mécanisme de publication/abonnement "
"anonyme qui permet la transmission de messages entre différents processus "
"ROS."

#: ../../source/Concepts.rst:47
msgid ""
"At the heart of any ROS 2 system is the ROS graph. The ROS graph refers to "
"the network of nodes in a ROS system and the connections between them by "
"which they communicate."
msgstr ""
"Au cœur de tout système ROS 2 se trouve le graphe ROS. Le graphe ROS fait "
"référence au réseau de nœuds dans un système ROS et aux connexions entre eux"
" par lesquelles ils communiquent."

#: ../../source/Concepts.rst:51
msgid "Graph Concepts"
msgstr "Concepts graphiques"

#: ../../source/Concepts.rst:54
msgid ""
"Nodes: A node is an entity that uses ROS to communicate with other nodes."
msgstr ""
"Nœuds : un nœud est une entité qui utilise ROS pour communiquer avec "
"d'autres nœuds."

#: ../../source/Concepts.rst:55
msgid ""
"Messages: ROS data type used when subscribing or publishing to a topic."
msgstr ""
"Messages : type de données ROS utilisé lors de l'abonnement ou de la "
"publication d'un sujet."

#: ../../source/Concepts.rst:56
msgid ""
"Topics: Nodes can publish messages to a topic as well as subscribe to a "
"topic to receive messages."
msgstr ""
"Sujets : les nœuds peuvent publier des messages dans un sujet et s'abonner à"
" un sujet pour recevoir des messages."

#: ../../source/Concepts.rst:57
msgid ""
"Discovery: The automatic process through which nodes determine how to talk "
"to each other."
msgstr ""
"Découverte : Le processus automatique par lequel les nœuds déterminent "
"comment se parler."

#: ../../source/Concepts.rst:60
msgid "Nodes"
msgstr "Nœuds"

#: ../../source/Concepts.rst:62
msgid ""
"A node is a participant in the ROS graph. ROS nodes use a ROS client library"
" to communicate with other nodes. Nodes can publish or subscribe to Topics. "
"Nodes can also provide or use Services and Actions. There are configurable "
"Parameters associated with a node. Connections between nodes are established"
" through a distributed discovery process. Nodes may be located in the same "
"process, in different processes, or on different machines. These concepts "
"will be described in more detail in the sections that follow."
msgstr ""
"Un nœud est un participant au graphe ROS. Les nœuds ROS utilisent une "
"bibliothèque cliente ROS pour communiquer avec d'autres nœuds. Les nœuds "
"peuvent publier ou s'abonner à des sujets. Les nœuds peuvent également "
"fournir ou utiliser des services et des actions. Il existe des paramètres "
"configurables associés à un nœud. Les connexions entre les nœuds sont "
"établies via un processus de découverte distribué. Les nœuds peuvent être "
"situés dans le même processus, dans différents processus ou sur différentes "
"machines. Ces concepts seront décrits plus en détail dans les sections qui "
"suivent."

#: ../../source/Concepts.rst:72
msgid "Client Libraries"
msgstr "Bibliothèques clientes"

#: ../../source/Concepts.rst:74
msgid ""
"ROS client libraries allow nodes written in different programming languages "
"to communicate. There is a core ROS client library (RCL) that implements "
"common functionality needed for the ROS APIs of different languages. This "
"makes it so that language-specific client libraries are easier to write and "
"that they have more consistent behavior."
msgstr ""
"Les bibliothèques clientes ROS permettent aux nœuds écrits dans différents "
"langages de programmation de communiquer. Il existe une bibliothèque cliente"
" ROS principale (RCL) qui implémente les fonctionnalités communes "
"nécessaires pour les API ROS de différentes langues. Cela rend les "
"bibliothèques clientes spécifiques à un langage plus faciles à écrire et "
"leur comportement est plus cohérent."

#: ../../source/Concepts.rst:78
msgid "The following client libraries are maintained by the ROS 2 team:"
msgstr "Les bibliothèques clientes suivantes sont gérées par l'équipe ROS 2 :"

#: ../../source/Concepts.rst:81
msgid "rclcpp = C++ client library"
msgstr "rclcpp = bibliothèque cliente C++"

#: ../../source/Concepts.rst:82
msgid "rclpy = Python client library"
msgstr "rclpy = bibliothèque cliente Python"

#: ../../source/Concepts.rst:84
msgid ""
"Additionally, other client libraries have been developed by the ROS "
"community. See the :doc:`ROS 2 Client Libraries <Concepts/About-"
"ROS-2-Client-Libraries>` article for more details."
msgstr ""
"De plus, d'autres bibliothèques clientes ont été développées par la "
"communauté ROS. Voir l'article :doc:`ROS 2 Client Libraries <Concepts/About-"
"ROS-2-Client-Libraries>` pour plus de détails."

#: ../../source/Concepts.rst:88
msgid "Discovery"
msgstr "Découverte"

#: ../../source/Concepts.rst:90
msgid ""
"Discovery of nodes happens automatically through the underlying middleware "
"of ROS 2. It can be summarized as follows:"
msgstr ""
"La découverte des nœuds se produit automatiquement via le middleware sous-"
"jacent de ROS 2. Elle peut être résumée comme suit :"

#: ../../source/Concepts.rst:93
msgid ""
"When a node is started, it advertises its presence to other nodes on the "
"network with the same ROS domain (set with the ROS_DOMAIN_ID environment "
"variable). Nodes respond to this advertisement with information about "
"themselves so that the appropriate connections can be made and the nodes can"
" communicate."
msgstr ""
"Lorsqu'un nœud est démarré, il annonce sa présence aux autres nœuds du "
"réseau avec le même domaine ROS (défini avec la variable d'environnement "
"ROS_DOMAIN_ID). Les nœuds répondent à cette annonce avec des informations "
"sur eux-mêmes afin que les connexions appropriées puissent être établies et "
"que les nœuds puissent communiquer."

#: ../../source/Concepts.rst:95
msgid ""
"Nodes periodically advertise their presence so that connections can be made "
"with new-found entities, even after the initial discovery period."
msgstr ""
"Les nœuds annoncent périodiquement leur présence afin que des connexions "
"puissent être établies avec de nouvelles entités, même après la période de "
"découverte initiale."

#: ../../source/Concepts.rst:96
msgid "Nodes advertise to other nodes when they go offline."
msgstr ""
"Les nœuds s'annoncent auprès d'autres nœuds lorsqu'ils se déconnectent."

#: ../../source/Concepts.rst:98
msgid ""
"Nodes will only establish connections with other nodes if they have "
"compatible :doc:`Quality of Service <../Tutorials/Demos/Quality-of-Service>`"
" settings."
msgstr ""
"Les nœuds n'établiront des connexions avec d'autres nœuds que s'ils ont des "
"paramètres compatibles :doc:`Quality of Service <../Tutorials/Demos/Quality-"
"of-Service>`."

#: ../../source/Concepts.rst:100
msgid ""
"Take the :ref:`talker-listener demo <talker-listener>` for example. Running "
"the C++ talker node in one terminal will publish messages on a topic, and "
"the Python listener node running in another terminal  will subscribe to "
"messages on the same topic."
msgstr ""
"Prenez la démo :ref:`talker-listener <talker-listener>` par exemple. "
"L'exécution du nœud locuteur C++ dans un terminal publiera des messages sur "
"un sujet, et le nœud d'écoute Python s'exécutant dans un autre terminal "
"s'abonnera aux messages sur le même sujet."

#: ../../source/Concepts.rst:104
msgid ""
"You should see that these nodes discover each other automatically, and begin"
" to exchange messages."
msgstr ""
"Vous devriez voir que ces nœuds se découvrent automatiquement et commencent "
"à échanger des messages."

#: ../../source/Concepts.rst:107
msgid "Security"
msgstr "Sécurité"

#: ../../source/Concepts.rst:109
msgid ""
"ROS 2 includes the ability to secure communications among nodes within the "
"ROS 2 computational graph. Similar to discovery, security happens through "
"the underlying ROS 2 middleware (provided it has support for the "
"corresponding security plugins). No additional software installation is "
"needed to enable security; however, the middleware requires configuration "
"files for each ROS graph participant. These files enable encryption and "
"authentication, and define policies both for individual nodes and for the "
"overall ROS graph. ROS 2 also adds a master \"on/off\" switch to control "
"security behavior."
msgstr ""
"ROS 2 inclut la capacité de sécuriser les communications entre les nœuds "
"dans le graphe de calcul ROS 2. Semblable à la découverte, la sécurité passe"
" par le middleware ROS 2 sous-jacent (à condition qu'il prenne en charge les"
" plugins de sécurité correspondants). Aucune installation de logiciel "
"supplémentaire n'est nécessaire pour activer la sécurité ; cependant, le "
"middleware nécessite des fichiers de configuration pour chaque participant "
"du graphe ROS. Ces fichiers permettent le chiffrement et l'authentification,"
" et définissent des politiques à la fois pour les nœuds individuels et pour "
"le graphe ROS global. ROS 2 ajoute également un interrupteur principal "
"\"marche/arrêt\" pour contrôler le comportement de sécurité."

#: ../../source/Concepts.rst:115
msgid ""
"ROS utilities can create the authoritative `trust anchor "
"<https://en.wikipedia.org/wiki/Trust_anchor>`_ for a ROS application, or an "
"external certificate authority can be used."
msgstr ""
"Les utilitaires ROS peuvent créer une `ancre de confiance "
"<https://en.wikipedia.org/wiki/Trust_anchor>`_ faisant autorité pour une "
"application ROS, ou une autorité de certification externe peut être "
"utilisée."

#: ../../source/Concepts.rst:117
msgid ""
"See the :doc:`ROS 2 Security <Concepts/About-Security>` article for "
"additional details or ROS security features."
msgstr ""
"Consultez l'article :doc:`ROS 2 Security <Concepts/About-Security>` pour "
"plus de détails ou les fonctionnalités de sécurité ROS."

#: ../../source/Concepts.rst:121
msgid "Related Content"
msgstr "Contenu connexe"

#: ../../source/Concepts.rst:123
msgid ""
":doc:`See the ROS 2 citations <Citations>` for more explanation of concepts "
"and citable resources."
msgstr ""
":doc:`Voir les citations ROS 2 <Citations>` pour plus d'explications sur les"
" concepts et les ressources citables."

#: ../../source/Concepts.rst:125
msgid ""
"For a brief video introduction to ROS 2, see this community contributed "
"content:"
msgstr ""
"Pour une brève présentation vidéo de ROS 2, consultez le contenu de cette "
"communauté :"

#: ../../source/Concepts.rst:127
msgid ""
"`Getting started with ROS Part 1: Nodes, Parameters and Topics "
"<https://youtu.be/46TPAKXBOF8>`_"
msgstr ""
"`Démarrer avec ROS Partie 1 : nœuds, paramètres et sujets "
"<https://youtu.be/46TPAKXBOF8>`_"

#: ../../source/Concepts.rst:128
msgid ""
"`Getting started with ROS Part 2: Services and Actions "
"<https://youtu.be/keZAJ83eEoM>`_"
msgstr ""
"`Démarrer avec ROS Partie 2 : Services et actions "
"<https://youtu.be/keZAJ83eEoM>`_"

#: ../../source/Concepts/About-Build-System.rst:2
msgid "About the build system"
msgstr "À propos du système de construction"

#: ../../source/Concepts/About-Build-System.rst:6
msgid ""
"Under everything is the build system. Iterating on ``catkin`` from ROS 1 we "
"have created a set of |packages| under the moniker ``ament``. Some of the "
"reasons for changing the name to ``ament`` are that we wanted it to not "
"collide with ``catkin`` (in case we want mix them at some point) and to "
"prevent confusion with existing ``catkin`` documentation. ``ament``'s "
"primary responsibility is to make it easier to develop and maintain ROS 2 "
"core |packages|. However, this responsibility extends to any user who is "
"willing to make use of our build system conventions and tools. Additionally "
"it should make |packages| conventional, such that developers should be able "
"to pick up any ``ament`` based |package| and make some assumptions about how"
" it works, how to introspect it, and how to build or use it."
msgstr ""
"Sous tout se trouve le système de construction. En itérant sur ``catkin`` à "
"partir de ROS 1, nous avons créé un ensemble de |packages| sous le surnom "
"``ament``. Certaines des raisons pour changer le nom en ``ament`` sont que "
"nous voulions qu'il n'entre pas en collision avec ``catkin`` (au cas où nous"
" voudrions les mélanger à un moment donné) et pour éviter toute confusion "
"avec ``catkin`` existant Documentation. La principale responsabilité de "
"``ament`` est de faciliter le développement et la maintenance des noyaux "
"|packages| de ROS 2. Cependant, cette responsabilité s'étend à tout "
"utilisateur qui souhaite utiliser nos conventions et outils de système de "
"construction. De plus, il devrait faire des |packages| conventionnel, de "
"sorte que les développeurs devraient être capables de choisir n'importe quel"
" |package| basé sur ``ament`` et faites des hypothèses sur son "
"fonctionnement, comment l'introspecter et comment le construire ou "
"l'utiliser."

#: ../../source/Concepts/About-Build-System.rst:13
msgid ""
"``ament`` consists of a few important repositories which are all in the "
"``ament`` |GitHub|_ organization:"
msgstr ""
"``ament`` se compose de quelques dépôts importants qui sont tous dans "
"l'organisation ``ament`` |GitHub|_ :"

#: ../../source/Concepts/About-Build-System.rst:20
msgid "The ``ament_package`` Package"
msgstr "Le paquet ``ament_package``"

#: ../../source/Concepts/About-Build-System.rst:22
msgid ""
"Located on |GitHub|_ at `ament/ament_package "
"<https://github.com/ament/ament_package>`_, this repository contains a "
"single :term:`ament Python package` that provides various utilities for "
"|ament packages|, e.g. templates for environment hooks."
msgstr ""
"Situé sur |GitHub|_ à `ament/ament_package "
"<https://github.com/ament/ament_package>`_, ce référentiel contient un seul "
":term:`ament Python package` qui fournit divers utilitaires pour |ament "
"packages|, par exemple. modèles pour les crochets d'environnement."

#: ../../source/Concepts/About-Build-System.rst:24
msgid ""
"All |ament packages| must contain a single :term:`package.xml` file at the "
"root of the package regardless of their underlying build system. The "
":term:`package.xml` \"manifest\" file contains information that is required "
"in order to process and operate on a |package|. This |package| information "
"includes things like the |package|'s name, which is globally unique, and the"
" package's dependencies. The :term:`package.xml` file also serves as the "
"marker file which indicates the location of the |package| on the file "
"system."
msgstr ""
"Tous les forfaits |ament| doit contenir un seul fichier :term:`package.xml` "
"à la racine du paquet, quel que soit son système de construction sous-"
"jacent. Le fichier \"manifest\" :term:`package.xml` contient les "
"informations requises pour traiter et opérer sur un |package|. Ce |forfait| "
"Les informations incluent des éléments tels que le nom du |package|, qui est"
" unique au monde, et les dépendances du package. Le fichier "
":term:`package.xml` sert également de fichier marqueur qui indique "
"l'emplacement du |package| sur le système de fichiers."

#: ../../source/Concepts/About-Build-System.rst:29
msgid ""
"Parsing of the :term:`package.xml` files is provided by ``catkin_pkg`` (as "
"in ROS 1), while functionality to locate |packages| by searching the file "
"system for these :term:`package.xml` files is provided by build tools such "
"as ``colcon``."
msgstr ""
"L'analyse des fichiers :term:`package.xml` est fournie par ``catkin_pkg`` "
"(comme dans ROS 1), tandis que la fonctionnalité permettant de localiser "
"|packages| en recherchant dans le système de fichiers ces fichiers "
":term:`package.xml` est fourni par des outils de construction tels que "
"``colcon``."

#: ../../source/Concepts/About-Build-System.rst:32
msgid "package.xml"
msgstr "package.xml"

#: ../../source/Concepts/About-Build-System.rst:34
msgid ""
"Package manifest file which marks the root of a :term:`package` and contains"
" meta information about the :term:`package` including its name, version, "
"description, maintainer, license, dependencies, and more. The contents of "
"the manifest are in machine readable XML format and the contents are "
"described in the |REPs| `127 <http://www.ros.org/reps/rep-0127.html>`_ and "
"`140 <http://www.ros.org/reps/rep-0140.html>`_, with the possibility of "
"further modifications in future |REPs|."
msgstr ""
"Fichier manifeste de package qui marque la racine d'un :term:`package` et "
"contient des méta-informations sur le :term:`package`, notamment son nom, sa"
" version, sa description, son responsable, sa licence, ses dépendances, etc."
" Le contenu du manifeste est au format XML lisible par machine et le contenu"
" est décrit dans les |REPs| `127 <http://www.ros.org/reps/rep-0127.html>`_ "
"et `140 <http://www.ros.org/reps/rep-0140.html>`_, avec le possibilité de "
"modifications ultérieures dans les futurs |REPs|."

#: ../../source/Concepts/About-Build-System.rst:37
msgid ""
"So anytime some |package| is referred to as an :term:`ament package`, it "
"means that it is a single unit of software (source code, build files, tests,"
" documentation, and other resources) which is described using a "
":term:`package.xml` manifest file."
msgstr ""
"Donc, à tout moment, un |package| est appelé :term:`ament package`, cela "
"signifie qu'il s'agit d'une seule unité de logiciel (code source, fichiers "
"de construction, tests, documentation et autres ressources) qui est décrite "
"à l'aide d'un :term:`package.xml ` fichier manifeste."

#: ../../source/Concepts/About-Build-System.rst:40
msgid "ament package"
msgstr "forfait actuel"

#: ../../source/Concepts/About-Build-System.rst:42
msgid ""
"Any |package| which contains a :term:`package.xml` and follows the packaging"
" guidelines of ``ament``, regardless of the underlying build system."
msgstr ""
"Tout |forfait| qui contient un :term:`package.xml` et suit les directives "
"d'empaquetage de ``ament``, quel que soit le système de construction sous-"
"jacent."

#: ../../source/Concepts/About-Build-System.rst:44
msgid ""
"Since the term :term:`ament package` is build system agnostic, there can be "
"different kinds of |ament packages|, e.g. :term:`ament CMake package`, "
":term:`ament Python package`, etc."
msgstr ""
"Étant donné que le terme :term:`paquet d'ament` est indépendant du système "
"de construction, il peut y avoir différents types de |paquets d'ament|, par "
"ex. :term:`ament CMake package`, :term:`ament Python package`, etc."

#: ../../source/Concepts/About-Build-System.rst:46
msgid ""
"Here is a list of common package types that you might run into in this "
"software stack:"
msgstr ""
"Voici une liste des types de packages courants que vous pourriez rencontrer "
"dans cette pile logicielle :"

#: ../../source/Concepts/About-Build-System.rst:49
msgid "CMake package"
msgstr "Paquet CMake"

#: ../../source/Concepts/About-Build-System.rst:51
msgid ""
"Any |package| containing a plain CMake project and a :term:`package.xml` "
"manifest file."
msgstr ""
"Tout |forfait| contenant un projet CMake simple et un fichier manifeste "
":term:`package.xml`."

#: ../../source/Concepts/About-Build-System.rst:52
msgid "ament CMake package"
msgstr "ament CMake package"

#: ../../source/Concepts/About-Build-System.rst:54
msgid ""
"A :term:`CMake package` that also follows the ``ament`` packaging "
"guidelines."
msgstr ""
"Un :term:`paquet CMake` qui suit également les directives de conditionnement"
" de ``ament``."

#: ../../source/Concepts/About-Build-System.rst:55
msgid "Python package"
msgstr "Paquet Python"

#: ../../source/Concepts/About-Build-System.rst:57
msgid ""
"Any |package| containing a `setuptools "
"<https://pypi.org/project/setuptools/>`_ based Python project and a "
":term:`package.xml` manifest file."
msgstr ""
"Tout |forfait| contenant un projet Python basé sur `setuptools "
"<https://pypi.org/project/setuptools/>`_ et un fichier manifeste "
":term:`package.xml`."

#: ../../source/Concepts/About-Build-System.rst:58
msgid "ament Python package"
msgstr "actuellement package Python"

#: ../../source/Concepts/About-Build-System.rst:60
msgid ""
"A :term:`Python package` that also follows the ``ament`` packaging "
"guidelines."
msgstr ""
"Un :term:`paquet Python` qui suit également les directives de "
"conditionnement de ``ament``."

#: ../../source/Concepts/About-Build-System.rst:63
msgid "The ``ament_cmake`` Repository"
msgstr "Le référentiel ``ament_cmake``"

#: ../../source/Concepts/About-Build-System.rst:65
msgid ""
"Located on |GitHub|_ at `ament/ament_cmake "
"<https://github.com/ament/ament_cmake>`_, this repository contains many "
"\"ament CMake\" and pure CMake packages which provide the infrastructure in "
"CMake that is required to create \"ament CMake\" packages. In this context "
"\"ament CMake\" packages means: ``ament`` packages that are built using "
"CMake. So the |packages| in this repository provide the necessary CMake "
"functions/macros and CMake Modules to facilitate creating more \"ament "
"CMake\" (or ``ament_cmake``) packages. Packages of this type are identified "
"with the ``<build_type>ament_cmake</build_type>`` tag in the ``<export>`` "
"tag of the :term:`package.xml` file."
msgstr ""
"Situé sur |GitHub|_ à `ament/ament_cmake "
"<https://github.com/ament/ament_cmake>`_, ce référentiel contient de "
"nombreux packages \"ament CMake\" et CMake purs qui fournissent "
"l'infrastructure dans CMake nécessaire pour créer packages \"ament CMake\". "
"Dans ce contexte, les packages \"ament CMake\" signifient : les packages "
"``ament`` construits à l'aide de CMake. Alors les |paquets| dans ce "
"référentiel, fournissez les fonctions/macros CMake nécessaires et les "
"modules CMake pour faciliter la création de plusieurs packages \"ament "
"CMake\" (ou ``ament_cmake``). Les packages de ce type sont identifiés par la"
" balise ``<build_type>ament_cmake</build_type>`` dans la balise ``<export>``"
" du fichier :term:`package.xml`."

#: ../../source/Concepts/About-Build-System.rst:70
msgid ""
"The |packages| in this repository are extremely modular, but there is a "
"single \"bottleneck\" |package| called ``ament_cmake``. Anyone can depend on"
" the ``ament_cmake`` |package| to get all of the aggregate functionality of "
"the |packages| in this repository. Here a list of the |packages| in the "
"repository along with a short description:"
msgstr ""
"Les |forfaits| dans ce référentiel sont extrêmement modulaires, mais il "
"existe un seul \"goulot d'étranglement\" |package| appelé ``ament_cmake``. "
"N'importe qui peut dépendre du |package| ``ament_cmake`` pour obtenir toutes"
" les fonctionnalités agrégées des |packages| dans ce référentiel. Voici une "
"liste des |packages| dans le référentiel avec une courte description :"

#: ../../source/Concepts/About-Build-System.rst:74
msgid "``ament_cmake``"
msgstr "``ament_cmake''"

#: ../../source/Concepts/About-Build-System.rst:76
msgid ""
"aggregates all other |packages| in this repository, users need only to "
"depend on this"
msgstr ""
"agrège tous les autres |packages| dans ce référentiel, les utilisateurs "
"n'ont qu'à dépendre de ce"

#: ../../source/Concepts/About-Build-System.rst:78
msgid "``ament_cmake_auto``"
msgstr "``ament_cmake_auto``"

#: ../../source/Concepts/About-Build-System.rst:80
msgid ""
"provides convenience CMake functions which automatically handle a lot of the"
" tedious parts of writing a |package|'s ``CMakeLists.txt`` file"
msgstr ""
"fournit des fonctions CMake pratiques qui gèrent automatiquement une grande "
"partie des parties fastidieuses de l'écriture du fichier ``CMakeLists.txt`` "
"d'un |package|"

#: ../../source/Concepts/About-Build-System.rst:82
msgid "``ament_cmake_core``"
msgstr "``ament_cmake_core``"

#: ../../source/Concepts/About-Build-System.rst:84
msgid ""
"provides all built-in core concepts for ``ament``, e.g. environment hooks, "
"resource indexing, symbolic linking install and others"
msgstr ""
"fournit tous les concepts de base intégrés pour ``ament``, par ex. crochets "
"d'environnement, indexation des ressources, installation de liens "
"symboliques et autres"

#: ../../source/Concepts/About-Build-System.rst:86
msgid "``ament_cmake_gmock``"
msgstr "``ament_cmake_gmock``"

#: ../../source/Concepts/About-Build-System.rst:88
msgid "adds convenience functions for making gmock based unit tests"
msgstr ""
"ajoute des fonctions pratiques pour effectuer des tests unitaires basés sur "
"gmock"

#: ../../source/Concepts/About-Build-System.rst:90
msgid "``ament_cmake_gtest``"
msgstr "``ament_cmake_gtest''"

#: ../../source/Concepts/About-Build-System.rst:92
msgid "adds convenience functions for making gtest based automated tests"
msgstr ""
"ajoute des fonctions pratiques pour effectuer des tests automatisés basés "
"sur gtest"

#: ../../source/Concepts/About-Build-System.rst:94
msgid "``ament_cmake_nose``"
msgstr "``ament_cmake_nose``"

#: ../../source/Concepts/About-Build-System.rst:96
msgid ""
"adds convenience functions for making nosetests based python automated tests"
msgstr ""
"ajoute des fonctions pratiques pour effectuer des tests automatisés en "
"python basés sur nosestests"

#: ../../source/Concepts/About-Build-System.rst:98
msgid "``ament_cmake_python``"
msgstr "``ament_cmake_python''"

#: ../../source/Concepts/About-Build-System.rst:100
msgid "provides CMake functions for |packages| that contain Python code"
msgstr "fournit des fonctions CMake pour |packages| contenant du code Python"

#: ../../source/Concepts/About-Build-System.rst:101
msgid ""
"see the :doc:`ament_cmake_python user documentation <../How-To-Guides/Ament-"
"CMake-Python-Documentation>`"
msgstr ""
"voir la :doc:`ament_cmake_python documentation utilisateur <../How-To-"
"Guides/Ament-CMake-Python-Documentation>`"

#: ../../source/Concepts/About-Build-System.rst:103
msgid "``ament_cmake_test``"
msgstr "``ament_cmake_test``"

#: ../../source/Concepts/About-Build-System.rst:105
msgid ""
"aggregates different kinds of tests, e.g. gtest and nosetests, under a "
"single target using `CTest "
"<https://cmake.org/Wiki/CMake/Testing_With_CTest>`_"
msgstr ""
"regroupe différents types de tests, par ex. gtest et nosetests, sous une "
"seule cible en utilisant `CTest "
"<https://cmake.org/Wiki/CMake/Testing_With_CTest>`_"

#: ../../source/Concepts/About-Build-System.rst:107
msgid ""
"The ``ament_cmake_core`` |package| contains a lot of the CMake "
"infrastructure that makes it possible to cleanly pass information between "
"|packages| using conventional interfaces. This makes the |packages| have "
"more decoupled build interfaces with other |packages|, promoting their reuse"
" and encouraging conventions in the build systems of different |packages|. "
"For instance it provides a standard way to pass include directories, "
"libraries, definitions, and dependencies between |packages| so that "
"consumers of this information can access this information in a conventional "
"way."
msgstr ""
"Le |paquet| ``ament_cmake_core`` contient une grande partie de "
"l'infrastructure CMake qui permet de transmettre proprement des informations"
" entre |packages| à l'aide d'interfaces classiques. Cela rend les |paquets| "
"ont des interfaces de construction plus découplées avec d'autres |packages|,"
" favorisant leur réutilisation et encourageant les conventions dans les "
"systèmes de construction de différents |packages|. Par exemple, il fournit "
"un moyen standard de transmettre des répertoires d'inclusion, des "
"bibliothèques, des définitions et des dépendances entre |packages| afin que "
"les consommateurs de ces informations puissent accéder à ces informations de"
" manière conventionnelle."

#: ../../source/Concepts/About-Build-System.rst:111
msgid ""
"The ``ament_cmake_core`` |package| also provides features of the ``ament`` "
"build system like symbolic link installation, which allows you to "
"symbolically link files from either the source space or the build space into"
" the install space rather than copying them. This allows you to install once"
" and then edit non-generated resources like Python code and configuration "
"files without having to rerun the install step for them to take effect. This"
" feature essentially replaces the \"devel space\" from ``catkin`` because it"
" has most of the advantages with few of the complications or drawbacks."
msgstr ""
"Le |paquet| ``ament_cmake_core`` fournit également des fonctionnalités du "
"système de construction ``ament`` comme l'installation de liens symboliques,"
" qui vous permet de lier symboliquement des fichiers depuis l'espace source "
"ou l'espace de construction dans l'espace d'installation plutôt que de les "
"copier. Cela vous permet d'installer une fois, puis de modifier les "
"ressources non générées telles que le code Python et les fichiers de "
"configuration sans avoir à réexécuter l'étape d'installation pour qu'elles "
"prennent effet. Cette fonctionnalité remplace essentiellement \"l'espace de "
"développement\" de ``catkin`` car elle présente la plupart des avantages "
"avec peu de complications ou d'inconvénients."

#: ../../source/Concepts/About-Build-System.rst:115
msgid ""
"Another feature provided by ``ament_cmake_core`` is the |package| resource "
"indexing which is a way for |packages| to indicate that they contain a "
"resource of some type. The design of this feature makes it much more "
"efficient to answer simple questions like what |packages| are in this prefix"
" (e.g. ``/usr/local``) because it only requires that you list the files in a"
" single possible location under that prefix. You can read more about this "
"feature in the `design docs "
"<https://github.com/ament/ament_cmake/blob/rolling/ament_cmake_core/doc/resource_index.md>`_"
" for the resource index."
msgstr ""
"Une autre fonctionnalité fournie par ``ament_cmake_core`` est le |package| "
"l'indexation des ressources qui est un moyen pour les |packages| pour "
"indiquer qu'ils contiennent une ressource d'un certain type. La conception "
"de cette fonctionnalité la rend beaucoup plus efficace pour répondre à des "
"questions simples comme quels |packages| sont dans ce préfixe (par exemple "
"``/usr/local``) car il vous suffit de répertorier les fichiers dans un seul "
"emplacement possible sous ce préfixe. Vous pouvez en savoir plus sur cette "
"fonctionnalité dans les `documents de conception "
"<https://github.com/ament/ament_cmake/blob/rolling/ament_cmake_core/doc/resource_index.md>`_"
" pour l'index des ressources."

#: ../../source/Concepts/About-Build-System.rst:119
msgid ""
"Like ``catkin``, ``ament_cmake_core`` also provides environment setup files "
"and |package| specific environment hooks. The environment setup files, often"
" named something like ``setup.bash``, are a place for |package| developers "
"to define changes to the environment that are needed to utilize their "
"|package|. The developers are able to do this using an \"environment hook\" "
"which is basically an arbitrary bit of shell code that can set or modify "
"environment variables, define shell functions, setup auto-completion rules, "
"etc... This feature is how, for example, ROS 1 set the ``ROS_DISTRO`` "
"environment variable without ``catkin`` knowing anything about the ROS "
"distribution."
msgstr ""
"Comme ``catkin``, ``ament_cmake_core`` fournit également des fichiers de "
"configuration d'environnement et |package| crochets d'environnement "
"spécifiques. Les fichiers de configuration de l'environnement, souvent "
"nommés quelque chose comme ``setup.bash``, sont un emplacement pour "
"|package| aux développeurs de définir les changements d'environnement "
"nécessaires pour utiliser leur |package|. Les développeurs peuvent le faire "
"en utilisant un \"hook d'environnement\" qui est essentiellement un morceau "
"arbitraire de code shell qui peut définir ou modifier des variables "
"d'environnement, définir des fonctions shell, configurer des règles d'auto-"
"complétion, etc. Cette fonctionnalité est comment, pour Par exemple, ROS 1 "
"définit la variable d'environnement ``ROS_DISTRO`` sans que ``catkin`` sache"
" quoi que ce soit sur la distribution ROS."

#: ../../source/Concepts/About-Build-System.rst:125
msgid "The ``ament_lint`` Repository"
msgstr "Le dépôt ``ament_lint''"

#: ../../source/Concepts/About-Build-System.rst:127
msgid ""
"Located on |GitHub|_ at `ament/ament_lint "
"<https://github.com/ament/ament_lint>`_, this repository provides several "
"|packages| which provide linting and testing services in a convenient and "
"consistent manner. Currently there are |packages| to support C++ style "
"linting using ``uncrustify``, static C++ code checks using ``cppcheck``, "
"checking for copyright in source code, Python style linting using ``pep8``, "
"and other things. The list of helper packages will likely grow in the "
"future."
msgstr ""
"Situé sur |GitHub|_ à `ament/ament_lint "
"<https://github.com/ament/ament_lint>`_, ce référentiel fournit plusieurs "
"|packages| qui fournissent des services de peluchage et de test de manière "
"pratique et cohérente. Actuellement, il y a des |packages| pour prendre en "
"charge le linting de style C++ en utilisant ``uncrustify``, les "
"vérifications de code C++ statiques en utilisant ``cppcheck``, la "
"vérification des droits d'auteur dans le code source, le linting de style "
"Python en utilisant ``pep8``, et d'autres choses. La liste des packages "
"d'assistance s'allongera probablement à l'avenir."

#: ../../source/Concepts/About-Build-System.rst:132
msgid "Build tools"
msgstr "Construire des outils"

#: ../../source/Concepts/About-Build-System.rst:134
msgid ""
"A build tool performs the task of building a workspace of packages together "
"at once with a single invocation. For ROS 2 releases up to Ardent, the build"
" tool providing this functionality is called ``ament_tools``. As of ROS 2 "
"Bouncy, ``ament_tools`` has been superseded by ``colcon``, as described in "
"`the universal build tool article "
"<http://design.ros2.org/articles/build_tool.html>`_."
msgstr ""
"Un outil de génération effectue la tâche de créer un espace de travail de "
"packages en même temps avec une seule invocation. Pour les versions ROS 2 "
"jusqu'à Ardent, l'outil de construction fournissant cette fonctionnalité "
"s'appelle ``ament_tools``. Depuis ROS 2 Bouncy, ``ament_tools`` a été "
"remplacé par ``colcon``, comme décrit dans `the universal build tool article"
" <http://design.ros2.org/articles/build_tool.html>`_."

#: ../../source/Concepts/About-Catment.rst:6
msgid "On the mixing of ament and catkin (catment)"
msgstr "Sur le mélange d'ament et de chaton (catment)"

#: ../../source/Concepts/About-Catment.rst:8
msgid "**All that follows is experimental and speculative.**"
msgstr "**Tout ce qui suit est expérimental et spéculatif.**"

#: ../../source/Concepts/About-Catment.rst:12
#: ../../source/Concepts/About-Command-Line-Tools.rst:11
#: ../../source/Concepts/About-Composition.rst:6
#: ../../source/Concepts/About-Executors.rst:7
#: ../../source/Concepts/About-Logging.rst:11
#: ../../source/Concepts/About-ROS-2-Client-Libraries.rst:13
#: ../../source/Concepts/About-ROS-2-Parameters.rst:11
#: ../../source/Concepts/About-ROS-Interfaces.rst:11
#: ../../source/Concepts/About-RQt.rst:13
#: ../../source/Concepts/About-Security.rst:8
#: ../../source/Concepts/About-Tf2.rst:8
#: ../../source/Concepts/About-Topic-Statistics.rst:11
msgid "Table of Contents"
msgstr "Table des matières"

#: ../../source/Concepts/About-Catment.rst:15
msgid "Background"
msgstr "Arrière-plan"

#: ../../source/Concepts/About-Catment.rst:17
msgid ""
"There once was a thing called ``rosbuild``. Then came a thing called "
"``catkin``, which largely replaced ``rosbuild``. Recently introduced is a "
"thing called ``ament``, which may one day replace ``catkin``."
msgstr ""
"Il était une fois une chose appelée ``rosbuild``. Puis vint une chose "
"appelée ``catkin``, qui remplaça largement ``rosbuild``. Récemment introduit"
" est une chose appelée ``ament``, qui pourrait un jour remplacer ``catkin``."

#: ../../source/Concepts/About-Catment.rst:21
msgid ""
"All three tools can be considered \"meta-build systems.\" They sit atop "
"other build systems (e.g., CMake, Python setuptools) and provide extra "
"functionality that's intended to make those build systems easier to use, "
"especially when managing dependencies across multiple packages and when "
"building multiple packages in a single workspace."
msgstr ""
"Les trois outils peuvent être considérés comme des \"systèmes de méta-"
"construction\". Ils reposent sur d'autres systèmes de construction (par "
"exemple, CMake, Python setuptools) et fournissent des fonctionnalités "
"supplémentaires destinées à faciliter l'utilisation de ces systèmes de "
"construction, en particulier lors de la gestion des dépendances entre "
"plusieurs packages et lors de la création de plusieurs packages dans un seul"
" espace de travail."

#: ../../source/Concepts/About-Catment.rst:24
msgid "Each of these meta-build systems does two things:"
msgstr "Chacun de ces systèmes de méta-construction fait deux choses :"

#: ../../source/Concepts/About-Catment.rst:28
msgid ""
"Add API to the underlying build system (e.g,. CMake) that can be used to "
"simplify common tasks (e.g., supplying all the flags exported by depended-"
"upon packages when building an executable). There are usually hooks to allow"
" injection of extra API by packages outside of the core meta-build system."
msgstr ""
"Ajoutez une API au système de construction sous-jacent (par exemple, CMake) "
"qui peut être utilisée pour simplifier les tâches courantes (par exemple, "
"fournir tous les indicateurs exportés par les packages dépendants lors de la"
" construction d'un exécutable). Il existe généralement des crochets pour "
"permettre l'injection d'API supplémentaires par des packages en dehors du "
"système de méta-construction principal."

#: ../../source/Concepts/About-Catment.rst:32
msgid ""
"``rosbuild``: ``mk/cmake.mk``, ``rosbuild_init()``, "
"``rosbuild_add_executable()``, etc."
msgstr ""
"``rosbuild`` : ``mk/cmake.mk``, ``rosbuild_init()``, "
"``rosbuild_add_executable()``, etc."

#: ../../source/Concepts/About-Catment.rst:33
msgid "``catkin``: ``catkin_package()``, ``catkin_install_python()``, etc."
msgstr "``catkin`` : ``catkin_package()``, ``catkin_install_python()``, etc."

#: ../../source/Concepts/About-Catment.rst:34
msgid ""
"``ament``: ``ament_target_dependencies()``, ``ament_export_dependencies()``,"
" ``ament_package()``, etc."
msgstr ""
"``ament'' : ``ament_target_dependencies()'', "
"``ament_export_dependencies()'', ``ament_package()'', etc."

#: ../../source/Concepts/About-Catment.rst:37
msgid ""
"Provide a tool that can be used to iterate in dependency order over a "
"workspace full of packages, building and perhaps installing each one."
msgstr ""
"Fournir un outil qui peut être utilisé pour itérer dans l'ordre des "
"dépendances sur un espace de travail rempli de packages, en créant et peut-"
"être en installant chacun d'eux."

#: ../../source/Concepts/About-Catment.rst:40
msgid "``rosbuild``: ``rosmake``"
msgstr "``rosbuild`` : ``rosmake``"

#: ../../source/Concepts/About-Catment.rst:41
msgid ""
"``catkin``: ``catkin build``, ``catkin_make``, ``catkin_make_isolated``, "
"etc."
msgstr ""
"``catkin`` : ``catkin build``, ``catkin_make``, ``catkin_make_isolated``, "
"etc."

#: ../../source/Concepts/About-Catment.rst:42
msgid "``ament``: ``ament build``"
msgstr "``ament'' : ``ament build''"

#: ../../source/Concepts/About-Catment.rst:44
msgid ""
"The common thread that ties all of these systems together is the division of"
" the code into **packages**\\ , with each package containing a manifest file"
" (``manifest.xml`` or ``package.xml``). This manifest is required (with some"
" exceptions) for both parts of the meta-build system (API and building tool)"
" to function."
msgstr ""
"Le fil conducteur qui relie tous ces systèmes est la division du code en "
"**packages**\\ , chaque paquet contenant un fichier manifeste "
"(``manifest.xml`` ou ``package.xml``). Ce manifeste est requis (à quelques "
"exceptions près) pour que les deux parties du système de méta-construction "
"(API et outil de construction) fonctionnent."

#: ../../source/Concepts/About-Catment.rst:48
msgid "Postulates"
msgstr "Postulats"

#: ../../source/Concepts/About-Catment.rst:51
msgid ""
"**While we usually consider the two aspects of a meta-build system to be "
"coupled, they needn't be.** The API used inside a package and the tool that "
"iterates over the packages can be considered largely independent, with the "
"package manifest forming the interface between them. There's no reason in "
"principle why, for example, ``rosmake`` couldn't be modified to iterate over"
" a workspace filled with ``catkin`` packages, stepping into them in "
"dependency order and doing the usual ``mkdir build; cd build; cmake ..; make"
" install`` routine for each one (with appropriate flags passed to ``cmake`` "
"and ``make``)."
msgstr ""
"**Alors que nous considérons généralement que les deux aspects d'un système "
"de méta-construction sont couplés, ils ne doivent pas l'être.** L'API "
"utilisée à l'intérieur d'un package et l'outil qui itère sur les packages "
"peuvent être considérés comme largement indépendants, avec le package "
"manifeste formant l'interface entre eux. Il n'y a aucune raison en principe "
"pour laquelle, par exemple, ``rosmake`` ne pourrait pas être modifié pour "
"itérer sur un espace de travail rempli de packages ``catkin``, en y entrant "
"dans l'ordre des dépendances et en faisant l'habituel ``mkdir build ; "
"construction de cd ; cmake ..; make install`` routine pour chacun (avec les "
"drapeaux appropriés passés à ``cmake`` et ``make``)."

#: ../../source/Concepts/About-Catment.rst:55
msgid ""
"**The effort required to migrate from one meta-build system to another "
"should be minimized.** The mass migration from ``rosbuild`` to ``catkin`` "
"was difficult and remains a sore point for many in the community. While it's"
" reasonable to ask developers to make changes in exchange for getting access"
" to new functionality, the changes that are required should be as small as "
"possible without sacrificing the effectiveness of the new system. This is "
"especially true when the old system is in widespread use."
msgstr ""
"**L'effort requis pour migrer d'un système de méta-construction à un autre "
"doit être minimisé.** La migration massive de ``rosbuild`` à ``catkin`` a "
"été difficile et reste un point sensible pour de nombreux membres de la "
"communauté. Bien qu'il soit raisonnable de demander aux développeurs "
"d'apporter des modifications en échange de l'accès à de nouvelles "
"fonctionnalités, les modifications requises doivent être aussi minimes que "
"possible sans sacrifier l'efficacité du nouveau système. Cela est "
"particulièrement vrai lorsque l'ancien système est largement utilisé."

#: ../../source/Concepts/About-Catment.rst:61
msgid ""
"Corollary: **Migration to a new meta-build system should not be required "
"without a very good reason.** If a developer doesn't want the functionality "
"offered by the new system, then she shouldn't be coerced into migrating from"
" the old system unless there's something irrevocably broken about the old "
"system (e.g., ``rosbuild``\\ 's in-source build pattern and lack of an "
"\"install\" step)."
msgstr ""
"Corollaire : **La migration vers un nouveau système de méta-construction ne "
"devrait pas être requise sans une très bonne raison.** Si un développeur ne "
"souhaite pas les fonctionnalités offertes par le nouveau système, il ne doit"
" pas être contraint de migrer depuis le ancien système à moins qu'il y ait "
"quelque chose de irrévocablement cassé sur l'ancien système (par exemple, le"
" modèle de construction dans la source de ``rosbuild``\\ et l'absence d'une "
"étape \"d'installation\")."

#: ../../source/Concepts/About-Catment.rst:65
msgid ""
"**Interoperability is a good thing.** Whenever possible (not all "
"combinations will be practical), developers should be able to mix and match "
"meta-build systems, including mixing their different aspects (i.e., use the "
"building tool from one system and the API from another). Such mixing and "
"matching is especially important when developers want to combine a large "
"existing code base using one meta-build system (e.g., ROS with ``catkin``) "
"with new libraries and tools offered by a code base using another meta-build"
" system (e.g., ROS 2 with ``ament``). Ideally that kind of combination can "
"be done without requiring changes to the API used by either code base and "
"without telling the developer which builder tool to use."
msgstr ""
"**L'interopérabilité est une bonne chose.** Dans la mesure du possible "
"(toutes les combinaisons ne seront pas pratiques), les développeurs doivent "
"pouvoir mélanger et assortir les systèmes de méta-construction, y compris en"
" mélangeant leurs différents aspects (c'est-à-dire utiliser l'outil de "
"construction d'un système et l'API d'un autre). Un tel mélange et "
"correspondance est particulièrement important lorsque les développeurs "
"veulent combiner une grande base de code existante en utilisant un système "
"de méta-construction (par exemple, ROS avec ``catkin``) avec de nouvelles "
"bibliothèques et outils offerts par une base de code en utilisant un autre "
"système de méta-construction (par exemple, ROS 2 avec ``ament``). "
"Idéalement, ce type de combinaison peut être effectué sans nécessiter de "
"modifications de l'API utilisée par l'une ou l'autre des bases de code et "
"sans dire au développeur quel outil de création utiliser."

#: ../../source/Concepts/About-Catment.rst:71
msgid ""
"Corollary: **Workspaces needn't be homogeneous.** There's no reason that we "
"shouldn't be able to freely mix, say, ``catkin`` and ``ament`` packages in "
"one workspace, with dependencies going in both directions, so long as the "
"builder tool in use knows how to build them both. The primary interface "
"between packages (at least, CMake-controlled packages) is their CMake "
"configuration file. So long as that configuration file follows the standard "
"protocol (setting ``foo_LIBRARIES``, etc.), then it shouldn't matter who "
"wrote the file. It could be auto-generated by ``catkin`` or ``ament``, or "
"even manually crafted by a developer who wants to use plain CMake in her "
"package, but still have that package depended-upon by ``catkin`` or "
"``ament`` packages."
msgstr ""
"Corollaire : **Les espaces de travail n'ont pas besoin d'être homogènes.** "
"Il n'y a aucune raison pour que nous ne soyons pas en mesure de mélanger "
"librement, disons, les packages ``catkin`` et ``ament`` dans un espace de "
"travail, avec des dépendances dans les deux directions, tant que l'outil de "
"construction utilisé sait comment les construire tous les deux. L'interface "
"principale entre les packages (au moins, les packages contrôlés par CMake) "
"est leur fichier de configuration CMake. Tant que ce fichier de "
"configuration suit le protocole standard (configuration ``foo_LIBRARIES``, "
"etc.), alors peu importe qui a écrit le fichier. Il peut être généré "
"automatiquement par ``catkin`` ou ``ament``, ou même créé manuellement par "
"un développeur qui souhaite utiliser CMake dans son package, mais dont le "
"package dépend toujours de ``catkin`` ou ``ament`` packages."

#: ../../source/Concepts/About-Catment.rst:78
msgid "Use cases, with experimental implementations"
msgstr "Cas d'utilisation, avec implémentations expérimentales"

#: ../../source/Concepts/About-Catment.rst:81
msgid ""
"Adding ROS packages to a ROS 2 workspace and building with ``ament build``"
msgstr ""
"Ajout de packages ROS à un espace de travail ROS 2 et construction avec "
"``ament build``"

#: ../../source/Concepts/About-Catment.rst:83
msgid ""
"Let's say that you want to add some existing ROS packages to your ROS 2 "
"workspace and don't want to migrate the ROS packages from ``catkin`` to "
"``ament`` (or vice versa). Here are two patches that let you do that:"
msgstr ""
"Supposons que vous souhaitiez ajouter des packages ROS existants à votre "
"espace de travail ROS 2 et que vous ne souhaitiez pas migrer les packages "
"ROS de ``catkin`` vers ``ament`` (ou vice versa). Voici deux patchs qui vous"
" permettent de faire cela :"

#: ../../source/Concepts/About-Catment.rst:86
msgid ""
"`ament_package "
"<https://github.com/ament/ament_package/compare/catkin?expand=1>`__: Add "
"support for format 1 package manifests, instead of requiring format 2. This "
"change isn't strictly related to ``catkin`` vs. ``ament``, because format 2 "
"has been around for a while and ``catkin`` supports it, so developers could "
"already update their manifests to format 2. But there's a ton of ROS code "
"out there that uses format 1, so we should support it. This implementation "
"could be improved, e.g., by reasoning over the various flavors of depend "
"tags and how they differ between formats 1 and 2."
msgstr ""
"`ament_package "
"<https://github.com/ament/ament_package/compare/catkin?expand=1>`__ : ajout "
"de la prise en charge des manifestes de package de format 1, au lieu "
"d'exiger le format 2. Cette modification n'est pas strictement liée à `` "
"catkin`` contre ``ament``, parce que le format 2 existe depuis un certain "
"temps et ``catkin`` le supporte, donc les développeurs pourraient déjà "
"mettre à jour leurs manifestes au format 2. Mais il y a une tonne de code "
"ROS là-bas qui utilise le format 1, nous devons donc le prendre en charge. "
"Cette implémentation pourrait être améliorée, par exemple, en raisonnant sur"
" les différentes saveurs des balises depend et comment elles diffèrent entre"
" les formats 1 et 2."

#: ../../source/Concepts/About-Catment.rst:91
msgid ""
"`ament_tools "
"<https://github.com/ament/ament_tools/compare/catkin?expand=1>`__: Add a new"
" ``catkin`` build type to ``ament``. This implementation just treats "
"``catkin`` packages the same as plain ``cmake`` packages, which seems to "
"work fine. It could be made more sophisticated."
msgstr ""
"`ament_tools "
"<https://github.com/ament/ament_tools/compare/catkin?expand=1>`__ : ajoutez "
"un nouveau type de construction ``catkin`` à ``ament``. Cette implémentation"
" traite simplement les packages ``catkin`` de la même manière que les "
"packages ``cmake`` simples, ce qui semble fonctionner correctement. Il "
"pourrait être rendu plus sophistiqué."

#: ../../source/Concepts/About-Catment.rst:96
msgid "Example usage:"
msgstr "Example usage:"

#: ../../source/Concepts/About-Catment.rst:99
msgid "Get the ROS 2 code as usual, using the branches mentioned above."
msgstr ""
"Obtenez le code ROS 2 comme d'habitude, en utilisant les branches "
"mentionnées ci-dessus."

#: ../../source/Concepts/About-Catment.rst:100
msgid ""
"Add to your workspace some ``catkin`` ROS packages, ensuring that all of "
"their dependencies are satisfied (either also present in the workspace or "
"installed elsewhere with appropriate setup shell files sourced)."
msgstr ""
"Ajoutez à votre espace de travail des packages ``catkin`` ROS, en vous "
"assurant que toutes leurs dépendances sont satisfaites (soit également "
"présentes dans l'espace de travail, soit installées ailleurs avec les "
"fichiers shell de configuration appropriés)."

#: ../../source/Concepts/About-Catment.rst:101
msgid ""
"Build as usual (e.g., ``./src/ament/ament_tools/scripts/ament.by build``)."
msgstr ""
"Construisez comme d'habitude (par exemple, "
"``./src/ament/ament_tools/scripts/ament.by build``)."

#: ../../source/Concepts/About-Catment.rst:103
msgid ""
"Voila: your existing code isn't suddenly broken just because there's a new "
"builder tool in use."
msgstr ""
"Voila : votre code existant n'est pas soudainement cassé simplement parce "
"qu'un nouvel outil de création est utilisé."

#: ../../source/Concepts/About-Catment.rst:106
msgid "Variation: Building ROS packages with ``ament build``"
msgstr "Variante : Construire des packages ROS avec ``ament build``"

#: ../../source/Concepts/About-Catment.rst:108
msgid ""
"Let's say that you love the new ``ament`` tool and want to use it to build "
"your existing ROS packages that use ``catkin`` internally. Here's an example"
" of how to do that, by doing a minimal installation of ``ament`` and then "
"using it to build a workspace full of ROS ``catkin`` packages:"
msgstr ""
"Disons que vous aimez le nouvel outil ``ament`` et que vous souhaitez "
"l'utiliser pour construire vos packages ROS existants qui utilisent "
"``catkin`` en interne. Voici un exemple de la façon de procéder, en "
"effectuant une installation minimale de ``ament``, puis en l'utilisant pour "
"créer un espace de travail rempli de packages ROS ``catkin`` :"

#: ../../source/Concepts/About-Catment.rst:126
msgid "Now build the ROS packages:"
msgstr "Construisez maintenant les packages ROS :"

#: ../../source/Concepts/About-Catment.rst:134
msgid ""
"Voila: you used the ``ament`` build tool to build your ``catkin`` packages, "
"without having to migrate them."
msgstr ""
"Voilà : vous avez utilisé l'outil de compilation ``ament`` pour créer vos "
"packages ``catkin``, sans avoir à les migrer."

#: ../../source/Concepts/About-Catment.rst:137
msgid "Variation: Using the ``catkin`` API in a ROS 2 package"
msgstr "Variante : Utilisation de l'API ``catkin`` dans un package ROS 2"

#: ../../source/Concepts/About-Catment.rst:139
msgid ""
"Let's say that you're building on top of ROS 2, which internally uses the "
"``ament`` API, and you want to add a new package using the ``catkin`` API."
msgstr ""
"Supposons que vous construisiez au-dessus de ROS 2, qui utilise en interne "
"l'API ``ament``, et que vous souhaitiez ajouter un nouveau package à l'aide "
"de l'API ``catkin``."

#: ../../source/Concepts/About-Catment.rst:141
msgid ""
"To make this work, we need a Python3 installation of ``catkin`` (the binary "
"debians use Python2.7). Here's an example of doing that, installing to "
"``$HOME/catkin``:"
msgstr ""
"Pour que cela fonctionne, nous avons besoin d'une installation Python3 de "
"``catkin`` (les binaires debian utilisent Python2.7). Voici un exemple "
"d'installation dans ``$HOME/catkin`` :"

#: ../../source/Concepts/About-Catment.rst:160
msgid ""
"To use that version of catkin, you just need to source the "
"``$HOME/catkin/setup.bash`` file."
msgstr ""
"Pour utiliser cette version de catkin, il vous suffit de sourcer le fichier "
"``$HOME/catkin/setup.bash``."

#: ../../source/Concepts/About-Catment.rst:162
msgid ""
"Let's assume that you have the usual ROS 2 workspace in ``~/ros2_ws``, and "
"that you're on the ``catkin`` branches in ``ament_package`` and "
"``ament_tools``. Add to that workspace the ``image_tools_catkin`` package "
"from https://github.com/gerkey/catment. It's a simple port of the ROS 2 "
"``image_tools`` package, taking it from the ``ament`` API to the ``catkin`` "
"API. To build it:"
msgstr ""
"Supposons que vous ayez l'espace de travail habituel de ROS 2 dans "
"``~/ros2_ws``, et que vous soyez sur les branches ``catkin`` dans "
"``ament_package`` et ``ament_tools``. Ajoutez à cet espace de travail le "
"package ``image_tools_catkin`` de https://github.com/gerkey/catment. C'est "
"un simple portage du package ``image_tools`` de ROS 2, le prenant de l'API "
"``ament`` à l'API ``catkin``. Pour le construire :"

#: ../../source/Concepts/About-Catment.rst:173
msgid ""
"Voila: when adding new packages atop ROS 2, you're free to choose which "
"CMake API you prefer inside your package."
msgstr ""
"Voilà : lors de l'ajout de nouveaux packages sur ROS 2, vous êtes libre de "
"choisir l'API CMake que vous préférez dans votre package."

#: ../../source/Concepts/About-Catment.rst:176
msgid ""
"**Caveat**: Requires commenting out the use of ``CATKIN_DEPENDS`` inside "
"``catkin_package()``, because somewhere somebody was getting upset that "
"things like ``rclcpp`` aren't ``catkin`` packages. That constraint needs to "
"be relaxed somehow."
msgstr ""
"**Mise en garde** : Nécessite de commenter l'utilisation de "
"``CATKIN_DEPENDS`` dans ``catkin_package()``, car quelque part quelqu'un "
"s'énervait que des choses comme ``rclcpp`` ne soient pas des packages "
"``catkin``. Cette contrainte doit être assouplie d'une manière ou d'une "
"autre."

#: ../../source/Concepts/About-Catment.rst:178
msgid ""
"**TODO**: The same demo but with a ``ament`` package that depends on a "
"``catkin`` package (this is easy)."
msgstr ""
"**TODO** : La même démo mais avec un package ``ament`` qui dépend d'un "
"package ``catkin`` (c'est facile)."

#: ../../source/Concepts/About-Catment.rst:179
msgid ""
"**TODO**: The same demo but with a package that has a vanilla "
"``CMakeLists.txt`` that uses neither ``ament`` nor ``catkin``, and provides "
"a manually generated ``fooConfig.cmake`` file that exports the right stuff "
"to make it look the same to outsiders."
msgstr ""
"**TODO** : La même démo mais avec un paquet qui a un ``CMakeLists.txt`` "
"vanille qui n'utilise ni ``ament`` ni ``catkin``, et fournit un "
"``fooConfig.cmake` généré manuellement ` qui exporte les bons éléments pour "
"les rendre identiques aux étrangers."

#: ../../source/Concepts/About-Catment.rst:182
msgid "Building ROS 2 packages with ``catkin_make_isolated``"
msgstr "Construire des packages ROS 2 avec ``catkin_make_isolated``"

#: ../../source/Concepts/About-Catment.rst:184
msgid ""
"Let's say that you're already familiar with ROS and ``catkin`` and that "
"you're excited to try ROS 2, but that you're not in the mood to learn about "
"``ament``. You'd rather stick to what you know, such as using "
"``catkin_make_isolated`` to build everything. Here is a patch that allows "
"you to do that:"
msgstr ""
"Disons que vous connaissez déjà ROS et ``catkin`` et que vous êtes impatient"
" d'essayer ROS 2, mais que vous n'êtes pas d'humeur à en savoir plus sur "
"``ament``. Vous préférez vous en tenir à ce que vous savez, comme utiliser "
"``catkin_make_isolated`` pour tout construire. Voici un patch qui vous "
"permet de faire cela :"

#: ../../source/Concepts/About-Catment.rst:189
msgid ""
"`catkin <https://github.com/ros/catkin/compare/ament?expand=1>`__: Add "
"support for packages that declare themselves to have a build type of "
"``ament_*``. This implementation calls out to ``ament`` to build each such "
"package. While ``ament_cmake`` packages can be treated as plain ``cmake`` "
"packages (as we did when adding ``catkin`` support to ``ament``), "
"``ament_python`` packages require some gnarly invocations of Python. Instead"
" of trying to replicate that logic in ``catkin``, it's easier to just let "
"``ament`` handle it. Also in this patch, we add the "
"``buildtool_export_depend`` packages to the set that are considered when "
"building."
msgstr ""
"`catkin <https://github.com/ros/catkin/compare/ament?expand=1>`__ : ajout de"
" la prise en charge des packages qui se déclarent avoir un type de "
"construction ``ament_*``. Cette implémentation appelle ``ament`` pour "
"construire chacun de ces packages. Alors que les packages ``ament_cmake`` "
"peuvent être traités comme des packages ``cmake`` simples (comme nous "
"l'avons fait lors de l'ajout de la prise en charge de ``catkin`` à "
"``ament``), les packages ``ament_python`` nécessitent des invocations gnarly"
" de Python . Au lieu d'essayer de reproduire cette logique dans ``catkin``, "
"il est plus simple de laisser ``ament`` s'en occuper. Toujours dans ce "
"patch, nous ajoutons les packages ``buildtool_export_depend`` à l'ensemble "
"qui sont pris en compte lors de la construction."

#: ../../source/Concepts/About-Catment.rst:195
msgid ""
"`catkin_pkg <https://github.com/ros-"
"infrastructure/catkin_pkg/compare/ament?expand=1>`__: Also in this patch, we"
" add the ``buildtool_export_depend`` packages to the set that are considered"
" when computing the topological order."
msgstr ""
"`catkin_pkg <https://github.com/ros-"
"infrastructure/catkin_pkg/compare/ament?expand=1>`__ : également dans ce "
"correctif, nous ajoutons les packages ``buildtool_export_depend`` à "
"l'ensemble qui sont pris en compte lors du calcul l'ordre topologique."

#: ../../source/Concepts/About-Catment.rst:198
msgid ""
"Because we're going to call out to ``ament build``, we will also need a "
"minimal installation of ``ament``, as done in a previous example:"
msgstr ""
"Comme nous allons appeler ``ament build``, nous aurons également besoin "
"d'une installation minimale de ``ament``, comme dans un exemple précédent :"

#: ../../source/Concepts/About-Catment.rst:215
msgid "Then we need to install the modified version of catkin somewhere:"
msgstr ""
"Ensuite, nous devons installer la version modifiée de catkin quelque part :"

#: ../../source/Concepts/About-Catment.rst:233
msgid "Now build the ROS 2 packages:"
msgstr "Compilez maintenant les packages ROS 2 :"

#: ../../source/Concepts/About-Catment.rst:243
msgid "Voila: you've built ROS 2 using the tools that you're familiar with."
msgstr ""
"Voilà : vous avez créé ROS 2 à l'aide des outils que vous connaissez bien."

#: ../../source/Concepts/About-Catment.rst:246
msgid ""
"**Caveat**: we're ignoring the ``eProsima`` packages in the workspace "
"because they lack ``package.xml`` files, which means that ``catkin`` can't "
"see them. ``ament`` has some heuristics for handling such packages. Options:"
" backport those heuristics to ``catkin``; switch to installing "
"non-``package.xml``-containing packages outside of the workspace; or just "
"add a ``package.xml`` to each of those packages (e.g., in our own fork)."
msgstr ""
"**Mise en garde** : nous ignorons les packages ``eProsima`` dans l'espace de"
" travail car ils manquent de fichiers ``package.xml``, ce qui signifie que "
"``catkin`` ne peut pas les voir. ``ament`` a quelques heuristiques pour "
"gérer de tels paquets. Options : rétroportez ces heuristiques vers "
"``catkin`` ; passer à l'installation de packages ne contenant pas "
"``package.xml`` en dehors de l'espace de travail ; ou ajoutez simplement un "
"``package.xml`` à chacun de ces packages (par exemple, dans notre propre "
"fork)."

#: ../../source/Concepts/About-Catment.rst:251
msgid "Combining all of ROS and ROS 2 in one workspace and building it (TODO)"
msgstr ""
"Combiner tout ROS et ROS 2 dans un seul espace de travail et le construire "
"(TODO)"

#: ../../source/Concepts/About-Catment.rst:253
msgid "This step will require sorting out some things, including at least:"
msgstr ""
"Cette étape nécessitera de trier certaines choses, y compris au moins :"

#: ../../source/Concepts/About-Catment.rst:255
msgid ""
"Package name conflicts. We currently have ROS 2 versions of ROS message "
"packages, as well as some stuff in ``geometry2``. Either the functionality "
"needs to be merged into one package that can support both systems, or the "
"new versions need different names."
msgstr ""
"Conflits de nom de package. Nous avons actuellement des versions ROS 2 des "
"packages de messages ROS, ainsi que des éléments dans ``geometry2``. Soit la"
" fonctionnalité doit être fusionnée dans un package qui peut prendre en "
"charge les deux systèmes, soit les nouvelles versions nécessitent des noms "
"différents."

#: ../../source/Concepts/About-Catment.rst:258
msgid ""
"Message generation. ROS and ROS 2 have different message generation steps, "
"the output of which might or not might conflict. Something sort of "
"sophisticated needs to be done to allow generation of all the right "
"artifacts from a single message package (or, as indicated above, the new "
"message packages need different name)."
msgstr ""
"Génération de messages. ROS et ROS 2 ont des étapes de génération de message"
" différentes, dont la sortie peut ou non entrer en conflit. Quelque chose de"
" sophistiqué doit être fait pour permettre la génération de tous les bons "
"artefacts à partir d'un seul paquet de messages (ou, comme indiqué ci-"
"dessus, les nouveaux paquets de messages ont besoin d'un nom différent)."

#: ../../source/Concepts/About-Catment.rst:263
msgid "Using ``bloom`` to release ``ament`` packages (TODO)"
msgstr "Utiliser ``bloom`` pour publier les packages ``ament`` (TODO)"

#: ../../source/Concepts/About-Catment.rst:265
msgid ""
"It seems like ``bloom`` ought be able to release packages that use the "
"``ament`` CMake API, and that the resulting releases should be able to be "
"built on the farm. We can make changes to ``bloom`` and ``ros_buildfarm`` as"
" needed to enable this use case."
msgstr ""
"Il semble que ``bloom`` devrait pouvoir publier des packages qui utilisent "
"l'API CMake ``ament``, et que les versions résultantes devraient pouvoir "
"être construites sur la ferme. Nous pouvons apporter des modifications à "
"``bloom`` et ``ros_buildfarm`` selon les besoins pour activer ce cas "
"d'utilisation."

#: ../../source/Concepts/About-Command-Line-Tools.rst:7
msgid "Introspection with command line tools"
msgstr "Introspection avec des outils en ligne de commande"

#: ../../source/Concepts/About-Command-Line-Tools.rst:13
msgid ""
"ROS 2 includes a suite of command-line tools for introspecting a ROS 2 "
"system."
msgstr ""
"ROS 2 comprend une suite d'outils de ligne de commande pour l'introspection "
"d'un système ROS 2."

#: ../../source/Concepts/About-Command-Line-Tools.rst:16
msgid "Usage"
msgstr "Usage"

#: ../../source/Concepts/About-Command-Line-Tools.rst:18
msgid ""
"The main entry point for the tools is the command ``ros2``, which itself has"
" various sub-commands for introspecting and working with nodes, topics, "
"services, and more."
msgstr ""
"Le point d'entrée principal des outils est la commande ``ros2``, qui elle-"
"même comporte diverses sous-commandes pour l'introspection et le travail "
"avec des nœuds, des sujets, des services, etc."

#: ../../source/Concepts/About-Command-Line-Tools.rst:20
msgid "To see all available sub-commands run:"
msgstr "Pour voir toutes les sous-commandes disponibles, exécutez :"

#: ../../source/Concepts/About-Command-Line-Tools.rst:26
msgid "Examples of sub-commands that are available include:"
msgstr "Voici des exemples de sous-commandes disponibles :"

#: ../../source/Concepts/About-Command-Line-Tools.rst:29
msgid "action: Introspect/interact with ROS actions"
msgstr "action : Introspecter/interagir avec les actions ROS"

#: ../../source/Concepts/About-Command-Line-Tools.rst:30
msgid "bag: Record/play a rosbag"
msgstr "bag : Enregistrer/jouer un rosbag"

#: ../../source/Concepts/About-Command-Line-Tools.rst:31
msgid "component: Manage component containers"
msgstr "composant : gérer les conteneurs de composants"

#: ../../source/Concepts/About-Command-Line-Tools.rst:32
msgid "daemon: Introspect/configure the ROS 2 daemon"
msgstr "démon : introspecter/configurer le démon ROS 2"

#: ../../source/Concepts/About-Command-Line-Tools.rst:33
msgid "doctor: Check ROS setup for potential issues"
msgstr ""
"médecin : Vérifiez la configuration du ROS pour les problèmes potentiels"

#: ../../source/Concepts/About-Command-Line-Tools.rst:34
msgid "interface: Show information about ROS interfaces"
msgstr "interface : affiche des informations sur les interfaces ROS"

#: ../../source/Concepts/About-Command-Line-Tools.rst:35
msgid "launch: Run/introspect a launch file"
msgstr "launch : exécuter/introspecter un fichier de lancement"

#: ../../source/Concepts/About-Command-Line-Tools.rst:36
msgid "lifecycle: Introspect/manage nodes with managed lifecycles"
msgstr ""
"cycle de vie : Introspecter/gérer les nœuds avec des cycles de vie gérés"

#: ../../source/Concepts/About-Command-Line-Tools.rst:37
msgid "node: Introspect ROS nodes"
msgstr "nœud : Introspecter les nœuds ROS"

#: ../../source/Concepts/About-Command-Line-Tools.rst:38
msgid "param: Introspect/configure parameters on a node"
msgstr "param : introspecter/configurer les paramètres sur un nœud"

#: ../../source/Concepts/About-Command-Line-Tools.rst:39
msgid "pkg: Introspect ROS packages"
msgstr "pkg : packages Introspect ROS"

#: ../../source/Concepts/About-Command-Line-Tools.rst:40
msgid "run: Run ROS nodes"
msgstr "run : exécuter les nœuds ROS"

#: ../../source/Concepts/About-Command-Line-Tools.rst:41
msgid "security: Configure security settings"
msgstr "sécurité : configurer les paramètres de sécurité"

#: ../../source/Concepts/About-Command-Line-Tools.rst:42
msgid "service: Introspect/call ROS services"
msgstr "service : introspection/appel des services ROS"

#: ../../source/Concepts/About-Command-Line-Tools.rst:43
msgid "srv: Introspect ``srv`` types"
msgstr "srv : Introspecter les types ``srv``"

#: ../../source/Concepts/About-Command-Line-Tools.rst:44
msgid "test: Run a ROS launch test"
msgstr "test : exécuter un test de lancement ROS"

#: ../../source/Concepts/About-Command-Line-Tools.rst:45
msgid "topic: Introspect/publish ROS topics"
msgstr "sujet : Introspecter/publier les sujets ROS"

#: ../../source/Concepts/About-Command-Line-Tools.rst:46
msgid ""
"trace: Tracing tools to get information on ROS nodes execution (only "
"available on Linux)"
msgstr ""
"trace : outils de traçage pour obtenir des informations sur l'exécution des "
"nœuds ROS (uniquement disponible sur Linux)"

#: ../../source/Concepts/About-Command-Line-Tools.rst:49
msgid "Example"
msgstr "Exemple"

#: ../../source/Concepts/About-Command-Line-Tools.rst:51
msgid ""
"To produce the typical talker-listener example using command-line tools, the"
" ``topic`` sub-command can be used to publish and echo messages on a topic."
msgstr ""
"Pour produire l'exemple typique de locuteur-auditeur à l'aide d'outils de "
"ligne de commande, la sous-commande ``topic`` peut être utilisée pour "
"publier et faire écho à des messages sur un sujet."

#: ../../source/Concepts/About-Command-Line-Tools.rst:53
msgid "Publish messages in one terminal with:"
msgstr "Publiez des messages dans un seul terminal avec :"

#: ../../source/Concepts/About-Command-Line-Tools.rst:63
msgid "Echo messages received in another terminal with:"
msgstr "Echo des messages reçus dans un autre terminal avec :"

#: ../../source/Concepts/About-Command-Line-Tools.rst:73
msgid "Behind the scenes"
msgstr "Dans les coulisses"

#: ../../source/Concepts/About-Command-Line-Tools.rst:75
msgid ""
"ROS 2 uses a distributed discovery process for nodes to connect to each "
"other. As this process purposefully does not use a centralized discovery "
"mechanism (like the ROS Master in ROS 1), it can take time for ROS nodes to "
"discover all other participants in the ROS graph. Because of this, there is "
"a long-running daemon in the background that stores information about the "
"ROS graph to provide faster responses to queries, e.g. the list of node "
"names."
msgstr ""
"ROS 2 utilise un processus de découverte distribué pour que les nœuds se "
"connectent les uns aux autres. Comme ce processus n'utilise délibérément pas"
" de mécanisme de découverte centralisé (comme le maître ROS dans ROS 1), les"
" nœuds ROS peuvent mettre du temps à découvrir tous les autres participants "
"du graphe ROS. Pour cette raison, il existe un démon de longue durée en "
"arrière-plan qui stocke des informations sur le graphique ROS pour fournir "
"des réponses plus rapides aux requêtes, par ex. la liste des noms de nœuds."

#: ../../source/Concepts/About-Command-Line-Tools.rst:79
msgid ""
"The daemon is automatically started when the relevant command-line tools are"
" used for the first time. You can run ``ros2 daemon --help`` for more "
"options for interacting with the daemon."
msgstr ""
"Le démon est automatiquement lancé lorsque les outils de ligne de commande "
"appropriés sont utilisés pour la première fois. Vous pouvez exécuter ``ros2 "
"daemon --help`` pour plus d'options d'interaction avec le démon."

#: ../../source/Concepts/About-Command-Line-Tools.rst:83
msgid "Implementation"
msgstr "Mise en œuvre"

#: ../../source/Concepts/About-Command-Line-Tools.rst:85
msgid ""
"The source code for the ``ros2`` command is available at "
"https://github.com/ros2/ros2cli"
msgstr ""
"Le code source de la commande ``ros2`` est disponible sur "
"https://github.com/ros2/ros2cli"

#: ../../source/Concepts/About-Command-Line-Tools.rst:87
msgid ""
"The ``ros2`` tool has been implemented as a framework that can be extended "
"via plugins. For example, the `sros2 <https://github.com/ros2/sros2>`__ "
"package provides a ``security`` sub-command that is automatically detected "
"by the ``ros2`` tool if the ``sros2`` package is installed."
msgstr ""
"L'outil ``ros2`` a été implémenté comme un framework qui peut être étendu "
"via des plugins. Par exemple, le package `sros2 "
"<https://github.com/ros2/sros2>`__ fournit une sous-commande ``security`` "
"qui est automatiquement détectée par l'outil ``ros2`` si le ``sros2` ` le "
"paquet est installé."

#: ../../source/Concepts/About-Composition.rst:2
msgid "About Composition"
msgstr "À propos de la composition"

#: ../../source/Concepts/About-Composition.rst:9
msgid "ROS 1 - Nodes vs. Nodelets"
msgstr "ROS 1 - Nœuds vs. Nodelets"

#: ../../source/Concepts/About-Composition.rst:11
msgid ""
"In ROS 1 you can write your code either as a `ROS node "
"<https://wiki.ros.org/Nodes>`__ or as a `ROS nodelet "
"<https://wiki.ros.org/nodelet>`__. ROS 1 nodes are compiled into "
"executables. ROS 1 nodelets on the other hand are compiled into a shared "
"library which is then loaded at runtime by a container process."
msgstr ""
"Dans ROS 1, vous pouvez écrire votre code soit en tant que `nœud ROS "
"<https://wiki.ros.org/Nodes>`__ soit en tant que `nodelet ROS "
"<https://wiki.ros.org/nodelet>`__ . Les nœuds ROS 1 sont compilés en "
"exécutables. Les nodelets ROS 1, quant à eux, sont compilés dans une "
"bibliothèque partagée qui est ensuite chargée au moment de l'exécution par "
"un processus de conteneur."

#: ../../source/Concepts/About-Composition.rst:16
msgid "ROS 2 - Unified API"
msgstr "ROS 2 - API unifiée"

#: ../../source/Concepts/About-Composition.rst:18
msgid ""
"In ROS 2 the recommended way of writing your code is similar to a nodelet - "
"we call it a ``Component``. This makes it easy to add common concepts to "
"existing code, like a `life cycle "
"<https://design.ros2.org/articles/node_lifecycle.html>`__. The biggest "
"drawback of different APIs is avoided in ROS 2 since both approaches use the"
" same API in ROS 2."
msgstr ""
"Dans ROS 2, la manière recommandée d'écrire votre code est similaire à un "
"nodelet - nous l'appelons un ``Component``. Cela facilite l'ajout de "
"concepts communs au code existant, comme un `cycle de vie "
"<https://design.ros2.org/articles/node_lifecycle.html>`__. Le plus gros "
"inconvénient des différentes API est évité dans ROS 2 puisque les deux "
"approches utilisent la même API dans ROS 2."

#: ../../source/Concepts/About-Composition.rst:24
msgid ""
"It is still possible to use the node-like style of \"writing your own main\""
" but for the common case it is not recommended."
msgstr ""
"Il est toujours possible d'utiliser le style de type nœud de \"écrire votre "
"propre main\", mais pour le cas courant, il n'est pas recommandé."

#: ../../source/Concepts/About-Composition.rst:27
msgid ""
"By making the process layout a deploy-time decision the user can choose "
"between:"
msgstr ""
"En faisant de la disposition du processus une décision au moment du "
"déploiement, l'utilisateur peut choisir entre :"

#: ../../source/Concepts/About-Composition.rst:30
msgid ""
"running multiple nodes in separate processes with the benefits of "
"process/fault isolation as well as easier debugging of individual nodes and"
msgstr ""
"exécuter plusieurs nœuds dans des processus séparés avec les avantages de "
"l'isolation des processus/défauts ainsi qu'un débogage plus facile des nœuds"
" individuels et"

#: ../../source/Concepts/About-Composition.rst:31
msgid ""
"running multiple nodes in a single process with the lower overhead and "
"optionally more efficient communication (see :doc:`Intra Process "
"Communication <../Tutorials/Demos/Intra-Process-Communication>`)."
msgstr ""
"exécutant plusieurs nœuds dans un seul processus avec une surcharge moindre "
"et éventuellement une communication plus efficace (voir :doc:`Intra Process "
"Communication <../Tutorials/Demos/Intra-Process-Communication>`)."

#: ../../source/Concepts/About-Composition.rst:33
msgid ""
"Additionally ``ros2 launch`` can be used to automate these actions through "
"specialized launch actions."
msgstr ""
"De plus, ``ros2 launch`` peut être utilisé pour automatiser ces actions "
"grâce à des actions de lancement spécialisées."

#: ../../source/Concepts/About-Composition.rst:37
msgid "Writing a Component"
msgstr "Ecrire un composant"

#: ../../source/Concepts/About-Composition.rst:39
msgid ""
"Since a component is only built into a shared library it doesn't have a "
"``main`` function (see `Talker source code "
"<https://github.com/ros2/demos/blob/rolling/composition/src/talker_component.cpp>`__)."
" A component is commonly a subclass of ``rclcpp::Node``. Since it is not in "
"control of the thread it shouldn't perform any long running or blocking "
"tasks in its constructor. Instead it can use timers to get periodic "
"notification. Additionally it can create publishers, subscribers, servers, "
"and clients."
msgstr ""
"Puisqu'un composant n'est intégré qu'à une bibliothèque partagée, il n'a pas"
" de fonction ``main`` (voir `Talker source code "
"<https://github.com/ros2/demos/blob/rolling/composition/src/talker_component"
" .cpp>`__). Un composant est généralement une sous-classe de "
"``rclcpp::Node``. Puisqu'il ne contrôle pas le thread, il ne devrait pas "
"effectuer de tâches longues ou bloquantes dans son constructeur. Au lieu de "
"cela, il peut utiliser des minuteries pour obtenir une notification "
"périodique. De plus, il peut créer des éditeurs, des abonnés, des serveurs "
"et des clients."

#: ../../source/Concepts/About-Composition.rst:45
msgid ""
"An important aspect of making such a class a component is that the class "
"registers itself using macros from the package ``rclcpp_components`` (see "
"the last line in the source code). This makes the component discoverable "
"when its library is being loaded into a running process - it acts as kind of"
" an entry point."
msgstr ""
"Un aspect important de la transformation d'une telle classe en composant est"
" que la classe s'enregistre elle-même à l'aide des macros du package "
"``rclcpp_components`` (voir la dernière ligne du code source). Cela rend le "
"composant détectable lorsque sa bibliothèque est chargée dans un processus "
"en cours d'exécution - il agit comme une sorte de point d'entrée."

#: ../../source/Concepts/About-Composition.rst:48
msgid ""
"Additionally, once a component is created, it must be registered with the "
"index to be discoverable by the tooling."
msgstr ""
"De plus, une fois qu'un composant est créé, il doit être enregistré auprès "
"de l'index pour pouvoir être découvert par les outils."

#: ../../source/Concepts/About-Composition.rst:60
msgid ""
"In order for the component_container to be able to find desired components, "
"it must be executed or launched from a shell that has sourced the "
"corresponding workspace."
msgstr ""
"Pour que le component_container puisse trouver les composants souhaités, il "
"doit être exécuté ou lancé à partir d'un shell qui a sourcé l'espace de "
"travail correspondant."

#: ../../source/Concepts/About-Composition.rst:65
msgid "Using Components"
msgstr "Utilisation de composants"

#: ../../source/Concepts/About-Composition.rst:67
msgid ""
"The `composition <https://github.com/ros2/demos/tree/rolling/composition>`__"
" package contains a couple of different approaches on how to use components."
" The three most common ones are:"
msgstr ""
"Le package `composition "
"<https://github.com/ros2/demos/tree/rolling/composition>`__ contient "
"plusieurs approches différentes sur la façon d'utiliser les composants. Les "
"trois plus courants sont :"

#: ../../source/Concepts/About-Composition.rst:71
msgid ""
"Start a (`generic container process "
"<https://github.com/ros2/rclcpp/blob/rolling/rclcpp_components/src/component_container.cpp>`__)"
" and call the ROS service `load_node "
"<https://github.com/ros2/rcl_interfaces/blob/rolling/composition_interfaces/srv/LoadNode.srv>`__"
" offered by the container. The ROS service will then load the component "
"specified by the passed package name and library name and start executing it"
" within the running process. Instead of calling the ROS service "
"programmatically you can also use a `command line tool "
"<https://github.com/ros2/ros2cli/tree/rolling/ros2component>`__ to invoke "
"the ROS service with the passed command line arguments"
msgstr ""
"Démarrez un (`processus de conteneur générique "
"<https://github.com/ros2/rclcpp/blob/rolling/rclcpp_components/src/component_container.cpp>`__)"
" et appelez le service ROS `load_node <https://github.com "
"/ros2/rcl_interfaces/blob/rolling/composition_interfaces/srv/LoadNode.srv>`__"
" offert par le conteneur. Le service ROS chargera alors le composant "
"spécifié par le nom de package et le nom de bibliothèque passés et "
"commencera à l'exécuter dans le processus en cours d'exécution. Au lieu "
"d'appeler le service ROS par programmation, vous pouvez également utiliser "
"un `outil de ligne de commande "
"<https://github.com/ros2/ros2cli/tree/rolling/ros2component>`__ pour appeler"
" le service ROS avec les arguments de ligne de commande passés"

#: ../../source/Concepts/About-Composition.rst:74
msgid ""
"Create a `custom executable "
"<https://github.com/ros2/demos/blob/rolling/composition/src/manual_composition.cpp>`__"
" containing multiple nodes which are known at compile time. This approach "
"requires that each component has a header file (which is not strictly needed"
" for the first case)."
msgstr ""
"Créez un `exécutable personnalisé "
"<https://github.com/ros2/demos/blob/rolling/composition/src/manual_composition.cpp>`__"
" contenant plusieurs nœuds connus au moment de la compilation. Cette "
"approche nécessite que chaque composant ait un fichier d'en-tête (ce qui "
"n'est pas strictement nécessaire pour le premier cas)."

#: ../../source/Concepts/About-Composition.rst:76
msgid ""
"Create a launch file and use ``ros2 launch`` to create a container process "
"with multiple components loaded."
msgstr ""
"Créez un fichier de lancement et utilisez ``ros2 launch`` pour créer un "
"processus de conteneur avec plusieurs composants chargés."

#: ../../source/Concepts/About-Composition.rst:79
msgid "Practical application"
msgstr "Application pratique"

#: ../../source/Concepts/About-Composition.rst:81
msgid ""
"Try the :doc:`Composition demos <../Tutorials/Intermediate/Composition>`."
msgstr ""
"Essayez les :doc:`démos de composition "
"<../Tutorials/Intermediate/Composition>`."

#: ../../source/Concepts/About-Cross-Compilation.rst:2
msgid "About Cross-compilation"
msgstr "À propos de la compilation croisée"

#: ../../source/Concepts/About-Cross-Compilation.rst:5
#: ../../source/Concepts/About-Domain-ID.rst:6
#: ../../source/Concepts/About-Executors.rst:10
#: ../../source/Concepts/About-Logging.rst:14
#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:10
#: ../../source/Concepts/About-ROS-2-Client-Libraries.rst:16
#: ../../source/Concepts/About-ROS-2-Parameters.rst:14
#: ../../source/Concepts/About-RQt.rst:16
#: ../../source/Concepts/About-Security.rst:11
#: ../../source/Concepts/About-Tf2.rst:11
#: ../../source/Concepts/About-Topic-Statistics.rst:14
msgid "Overview"
msgstr "Aperçu"

#: ../../source/Concepts/About-Cross-Compilation.rst:10
msgid ""
"Open Robotics provides pre-built ROS 2 packages for multiple platforms, but "
"a number of developers still rely on `cross-compilation "
"<https://en.wikipedia.org/wiki/Cross_compiler>`__ for different reasons such"
" as:"
msgstr ""
"Open Robotics fournit des packages ROS 2 pré-construits pour plusieurs "
"plates-formes, mais un certain nombre de développeurs s'appuient toujours "
"sur la `compilation croisée "
"<https://en.wikipedia.org/wiki/Cross_compiler>`__ pour différentes raisons "
"telles que :"

#: ../../source/Concepts/About-Cross-Compilation.rst:8
msgid "The development machine does not match the target system."
msgstr "La machine de développement ne correspond pas au système cible."

#: ../../source/Concepts/About-Cross-Compilation.rst:9
msgid ""
"Tuning the build for specific core architecture (e.g. setting "
"-mcpu=cortex-a53 -mfpu=neon-fp-armv8 when building for Raspberry Pi3)."
msgstr ""
"Réglage de la construction pour une architecture de base spécifique (par "
"exemple, réglage -mcpu=cortex-a53 -mfpu=neon-fp-armv8 lors de la "
"construction pour Raspberry Pi3)."

#: ../../source/Concepts/About-Cross-Compilation.rst:10
msgid ""
"Targeting a different file systems other than the ones supported by the pre-"
"built images released by Open Robotics."
msgstr ""
"Cibler des systèmes de fichiers différents de ceux pris en charge par les "
"images pré-construites publiées par Open Robotics."

#: ../../source/Concepts/About-Cross-Compilation.rst:13
msgid "How does it work ?"
msgstr "Comment ça marche ?"

#: ../../source/Concepts/About-Cross-Compilation.rst:15
msgid ""
"Cross-compiling simple software (e.g. no dependencies on external libraries)"
" is relatively simple and only requiring a cross-compiler toolchain to be "
"used instead of the native toolchain."
msgstr ""
"La compilation croisée de logiciels simples (par exemple, sans dépendances à"
" des bibliothèques externes) est relativement simple et ne nécessite qu'une "
"chaîne d'outils de compilateur croisé à utiliser à la place de la chaîne "
"d'outils native."

#: ../../source/Concepts/About-Cross-Compilation.rst:17
msgid ""
"There are a number of factors which make this process more complex: - The "
"software being built must support the target architecture. Architecture "
"specific code must be properly isolated and enabled during the build "
"according to the target architecture. Examples include assembly code. - All "
"dependencies (e.g. libraries) must be present, either as pre-built packages "
"or also cross-compiled before the target software using them is cross-"
"compiled. - When building software stacks (as opposed to standalone "
"software) using build tools (e.g. colcon), it is expected that the build "
"tool provides a mechanism to allow the developer to enable cross-compilation"
" on the underlying build system used by each piece of software in the stack."
msgstr ""
"Plusieurs facteurs rendent ce processus plus complexe : - Le logiciel en "
"cours de construction doit prendre en charge l'architecture cible. Le code "
"spécifique à l'architecture doit être correctement isolé et activé lors de "
"la génération en fonction de l'architecture cible. Les exemples incluent le "
"code assembleur. - Toutes les dépendances (par exemple, les bibliothèques) "
"doivent être présentes, soit sous forme de packages pré-construits, soit "
"également compilées de manière croisée avant que le logiciel cible qui les "
"utilise ne soit compilé de manière croisée. - Lors de la construction de "
"piles de logiciels (par opposition à des logiciels autonomes) à l'aide "
"d'outils de construction (par exemple, colcon), on s'attend à ce que l'outil"
" de construction fournisse un mécanisme permettant au développeur d'activer "
"la compilation croisée sur le système de construction sous-jacent utilisé "
"par chaque morceau de logiciel dans la pile."

#: ../../source/Concepts/About-Cross-Compilation.rst:23
msgid "Cross-compiling ROS 2"
msgstr "Cross-compilation ROS 2"

#: ../../source/Concepts/About-Cross-Compilation.rst:25
msgid ""
"The ROS 2 cross-compile tool is under shared ownership of Open Robotics and "
"ROS Tooling Working Group. It is a Python script that compiles ROS 2 source "
"files for supported target architectures using an emulator in a docker "
"container. Detailed design of the tool can be found on `ROS 2 design "
"<https://design.ros2.org/articles/cc_build_tools.html>`__. Instructions to "
"use the tool are in the `cross_compile package <https://github.com/ros-"
"tooling/cross_compile>`__."
msgstr ""
"L'outil de compilation croisée ROS 2 est sous la propriété partagée d'Open "
"Robotics et du groupe de travail ROS Tooling. Il s'agit d'un script Python "
"qui compile les fichiers source ROS 2 pour les architectures cibles prises "
"en charge à l'aide d'un émulateur dans un conteneur docker. La conception "
"détaillée de l'outil peut être trouvée sur `ROS 2 design "
"<https://design.ros2.org/articles/cc_build_tools.html>`__. Les instructions "
"d'utilisation de l'outil se trouvent dans le `package cross_compile "
"<https://github.com/ros-tooling/cross_compile>`__."

#: ../../source/Concepts/About-Cross-Compilation.rst:30
msgid ""
"If you are using an older version, please follow the :doc:`cross-compilation"
" guide <../How-To-Guides/Cross-compilation>`."
msgstr ""
"Si vous utilisez une version plus ancienne, veuillez suivre le :doc:`guide "
"de compilation croisée <../How-To-Guides/Cross-compilation>`."

#: ../../source/Concepts/About-Different-Middleware-Vendors.rst:6
msgid "About different ROS 2 DDS/RTPS vendors"
msgstr "À propos des différents fournisseurs ROS 2 DDS/RTPS"

#: ../../source/Concepts/About-Different-Middleware-Vendors.rst:8
msgid ""
"ROS 2 is built on top of DDS/RTPS as its middleware, which provides "
"discovery, serialization and transportation. `This article "
"<https://design.ros2.org/articles/ros_on_dds.html>`__ explains the "
"motivation behind using DDS implementations, and/or the RTPS wire protocol "
"of DDS, in detail. In summary, DDS is an end-to-end middleware that provides"
" features which are relevant to ROS systems, such as distributed discovery "
"(not centralized like in ROS 1) and control over different \"Quality of "
"Service\" options for the transportation."
msgstr ""
"ROS 2 est construit sur DDS/RTPS en tant que middleware, qui fournit la "
"découverte, la sérialisation et le transport. `Cet article "
"<https://design.ros2.org/articles/ros_on_dds.html>`__ explique en détail la "
"motivation derrière l'utilisation des implémentations DDS et/ou du protocole"
" filaire RTPS de DDS. En résumé, DDS est un middleware de bout en bout qui "
"fournit des fonctionnalités pertinentes pour les systèmes ROS, telles que la"
" découverte distribuée (non centralisée comme dans ROS 1) et le contrôle de "
"différentes options de « qualité de service » pour le transport."

#: ../../source/Concepts/About-Different-Middleware-Vendors.rst:12
msgid ""
"`DDS <https://www.omg.org/omg-dds-portal>`__ is an industry standard which "
"is implemented by a range of vendors, such as RTI's `Connext DDS "
"<https://www.rti.com/products/>`__, eProsima's `Fast DDS <https://fast-"
"dds.docs.eprosima.com/>`__, Eclipse's `Cyclone DDS "
"<https://projects.eclipse.org/projects/iot.cyclonedds>`__, or "
"GurumNetworks's `GurumDDS <https://gurum.cc/index_eng>`__. RTPS (a.k.a. "
"`DDSI-RTPS <https://www.omg.org/spec/DDSI-RTPS/About-DDSI-RTPS/>`__\\ ) is "
"the wire protocol used by DDS to communicate over the network."
msgstr ""
"`DDS <https://www.omg.org/omg-dds-portal>`__ est une norme de l'industrie "
"qui est mise en œuvre par une gamme de fournisseurs, tels que `Connext DDS "
"<https://www.rti.com de RTI /products/>`__, `Fast DDS d'eProsima "
"<https://fast-dds.docs.eprosima.com/>`__, `Cyclone DDS d'Eclipse "
"<https://projects.eclipse.org/projects/iot.cyclonedds >`__, ou `GurumDDS "
"<https://gurum.cc/index_eng>`__ de GurumNetworks. RTPS (alias `DDSI-RTPS "
"<https://www.omg.org/spec/DDSI-RTPS/About-DDSI-RTPS/>`__\\ ) est le "
"protocole filaire utilisé par DDS pour communiquer sur le réseau."

#: ../../source/Concepts/About-Different-Middleware-Vendors.rst:15
msgid ""
"ROS 2 supports multiple DDS/RTPS implementations because it is not "
"necessarily \"one size fits all\" when it comes to choosing a "
"vendor/implementation. There are many factors you might consider while "
"choosing a middleware implementation: logistical considerations like the "
"license, or technical considerations like platform availability, or "
"computation footprint. Vendors may provide more than one DDS or RTPS "
"implementation targeted at meeting different needs. For example, RTI has a "
"few variations of their Connext implementation that vary in purpose, like "
"one that specifically targets microcontrollers and another which targets "
"applications requiring special safety certifications (we only support their "
"standard desktop version at this time)."
msgstr ""
"ROS 2 prend en charge plusieurs implémentations DDS/RTPS car il n'est pas "
"nécessairement \"taille unique\" lorsqu'il s'agit de choisir un "
"fournisseur/une implémentation. De nombreux facteurs peuvent être pris en "
"compte lors du choix d'une implémentation de middleware : des considérations"
" logistiques telles que la licence ou des considérations techniques telles "
"que la disponibilité de la plate-forme ou l'empreinte de calcul. Les "
"fournisseurs peuvent proposer plusieurs implémentations DDS ou RTPS visant à"
" répondre à différents besoins. Par exemple, RTI a quelques variantes de "
"leur implémentation Connext qui varient dans leur objectif, comme une qui "
"cible spécifiquement les microcontrôleurs et une autre qui cible les "
"applications nécessitant des certifications de sécurité spéciales (nous ne "
"prenons en charge que leur version de bureau standard pour le moment)."

#: ../../source/Concepts/About-Different-Middleware-Vendors.rst:20
msgid ""
"In order to use a DDS/RTPS implementation with ROS 2, a \"\\ **R**\\ OS "
"**M**\\ iddle\\ **w**\\ are interface\" (a.k.a. ``rmw`` interface or just "
"``rmw``\\ ) package needs to be created that implements the abstract ROS "
"middleware interface using the DDS or RTPS implementation's API and tools. "
"It's a lot of work to implement and maintain RMW packages for supporting DDS"
" implementations, but supporting at least a few implementations is important"
" for ensuring that the ROS 2 codebase is not tied to any one particular "
"implementation, as users may wish to switch out implementations depending on"
" their project's needs."
msgstr ""
"Afin d'utiliser une implémentation DDS/RTPS avec ROS 2, une interface \"\\ "
"**R**\\ OS **M**\\ iddle\\ **w**\\ are\" (a.k.a. ``rmw`` interface ou juste "
"``rmw``\\ ) doit être créé pour implémenter l'interface abstraite du "
"middleware ROS à l'aide de l'API et des outils de l'implémentation DDS ou "
"RTPS. L'implémentation et la maintenance des packages RMW pour la prise en "
"charge des implémentations DDS demandent beaucoup de travail, mais la prise "
"en charge d'au moins quelques implémentations est importante pour garantir "
"que la base de code ROS 2 n'est pas liée à une implémentation particulière, "
"car les utilisateurs peuvent souhaiter changer d'implémentation. sur les "
"besoins de leur projet."

#: ../../source/Concepts/About-Different-Middleware-Vendors.rst:24
msgid "Supported RMW implementations"
msgstr "Implémentations RMW prises en charge"

#: ../../source/Concepts/About-Different-Middleware-Vendors.rst:29
msgid "Product name"
msgstr "Nom du produit"

#: ../../source/Concepts/About-Different-Middleware-Vendors.rst:30
msgid "License"
msgstr "Licence"

#: ../../source/Concepts/About-Different-Middleware-Vendors.rst:31
msgid "RMW implementation"
msgstr "Mise en œuvre de la RMW"

#: ../../source/Concepts/About-Different-Middleware-Vendors.rst:32
msgid "Status"
msgstr "Statut"

#: ../../source/Concepts/About-Different-Middleware-Vendors.rst:33
msgid "eProsima *Fast DDS*"
msgstr "eProsima *Fast DDS*"

#: ../../source/Concepts/About-Different-Middleware-Vendors.rst:34
msgid "Apache 2"
msgstr "Apache 2"

#: ../../source/Concepts/About-Different-Middleware-Vendors.rst:35
msgid "``rmw_fastrtps_cpp``"
msgstr "``rmw_fastrtps_cpp``"

#: ../../source/Concepts/About-Different-Middleware-Vendors.rst:36
msgid "Full support. Default RMW. Packaged with binary releases."
msgstr "Plein soutien. RMW par défaut. Emballé avec des versions binaires."

#: ../../source/Concepts/About-Different-Middleware-Vendors.rst:37
msgid "Eclipse *Cyclone DDS*"
msgstr "Éclipse *Cyclone DDS*"

#: ../../source/Concepts/About-Different-Middleware-Vendors.rst:38
msgid "Eclipse Public License v2.0"
msgstr "Licence publique Eclipse v2.0"

#: ../../source/Concepts/About-Different-Middleware-Vendors.rst:39
msgid "``rmw_cyclonedds_cpp``"
msgstr "``rmw_cyclonedds_cpp``"

#: ../../source/Concepts/About-Different-Middleware-Vendors.rst:40
msgid "Full support. Packaged with binary releases."
msgstr "Plein soutien. Emballé avec des versions binaires."

#: ../../source/Concepts/About-Different-Middleware-Vendors.rst:41
msgid "RTI *Connext DDS*"
msgstr "RTI *Connecter DDS*"

#: ../../source/Concepts/About-Different-Middleware-Vendors.rst:42
msgid "commercial, research"
msgstr "commerciale, de recherche"

#: ../../source/Concepts/About-Different-Middleware-Vendors.rst:43
msgid "``rmw_connextdds``"
msgstr "``rmw_connextdds``"

#: ../../source/Concepts/About-Different-Middleware-Vendors.rst:44
msgid ""
"Full support. Support included in binaries, but Connext installed "
"separately."
msgstr ""
"Plein soutien. Prise en charge incluse dans les fichiers binaires, mais "
"Connext installé séparément."

#: ../../source/Concepts/About-Different-Middleware-Vendors.rst:45
msgid "GurumNetworks *GurumDDS*"
msgstr "GurumNetworks *GurumDDS*"

#: ../../source/Concepts/About-Different-Middleware-Vendors.rst:46
msgid "commercial"
msgstr "commercial"

#: ../../source/Concepts/About-Different-Middleware-Vendors.rst:47
msgid "``rmw_gurumdds_cpp``"
msgstr "``rmw_gurumds_cp''"

#: ../../source/Concepts/About-Different-Middleware-Vendors.rst:48
msgid ""
"Community support. Support included in binaries, but GurumDDS installed "
"separately."
msgstr ""
"Soutien communautaire. Prise en charge incluse dans les fichiers binaires, "
"mais GurumDDS installé séparément."

#: ../../source/Concepts/About-Different-Middleware-Vendors.rst:50
msgid ""
"For practical information on working with multiple RMW implementations, see "
"the :doc:`\"Working with multiple RMW implementations\" <../How-To-"
"Guides/Working-with-multiple-RMW-implementations>` tutorial."
msgstr ""
"Pour des informations pratiques sur l'utilisation de plusieurs "
"implémentations RMW, consultez le didacticiel :doc:`\"Working with multiple "
"RMW implementations\" <../How-To-Guides/Working-with-multiple-RMW-"
"implementations>`."

#: ../../source/Concepts/About-Different-Middleware-Vendors.rst:53
msgid "Multiple RMW implementations"
msgstr "Plusieurs implémentations RMW"

#: ../../source/Concepts/About-Different-Middleware-Vendors.rst:55
msgid ""
"The ROS 2 binary releases for currently active distros have built-in support"
" for several RMW implementations out of the box (Fast DDS, RTI Connext Pro, "
"Eclipse Cyclone DDS, GurumNetworks GurumDDS). The default is Fast DDS, which"
" works without any additional installation steps because we distribute it "
"with our binary packages."
msgstr ""
"Les versions binaires ROS 2 pour les distributions actuellement actives ont "
"un support intégré pour plusieurs implémentations RMW prêtes à l'emploi "
"(Fast DDS, RTI Connext Pro, Eclipse Cyclone DDS, GurumNetworks GurumDDS). La"
" valeur par défaut est Fast DDS, qui fonctionne sans aucune étape "
"d'installation supplémentaire car nous la distribuons avec nos packages "
"binaires."

#: ../../source/Concepts/About-Different-Middleware-Vendors.rst:58
msgid ""
"Other RMWs like Cyclone DDS, Connext or GurumDDS can be enabled by "
":doc:`installing additional packages <../Installation/DDS-Implementations>`,"
" but without having to rebuild anything or replace any existing packages."
msgstr ""
"D'autres RMW comme Cyclone DDS, Connext ou GurumDDS peuvent être activés en "
":doc:`installant des packages supplémentaires <../Installation/DDS-"
"Implementations>`, mais sans avoir à reconstruire quoi que ce soit ou à "
"remplacer les packages existants."

#: ../../source/Concepts/About-Different-Middleware-Vendors.rst:60
msgid ""
"A ROS 2 workspace that has been built from source may build and install "
"multiple RMW implementations simultaneously. While the core ROS 2 code is "
"being compiled, any RMW implementation that is found will be built if the "
"relevant DDS/RTPS implementation has been installed properly and the "
"relevant environment variables have been configured. For example, if the "
"code for the `RMW package for RTI Connext DDS "
"<https://github.com/ros2/rmw_connextdds>`__ is in the workspace, it will be "
"built if an installation of RTI's Connext Pro can also be found."
msgstr ""
"Un espace de travail ROS 2 créé à partir de la source peut créer et "
"installer plusieurs implémentations RMW simultanément. Pendant la "
"compilation du code ROS 2 principal, toute implémentation RMW trouvée sera "
"construite si l'implémentation DDS/RTPS appropriée a été installée "
"correctement et si les variables d'environnement appropriées ont été "
"configurées. Par exemple, si le code du `package RMW pour RTI Connext DDS "
"<https://github.com/ros2/rmw_connextdds>`__ est dans l'espace de travail, il"
" sera construit si une installation de Connext Pro de RTI peut également "
"être trouvée ."

#: ../../source/Concepts/About-Different-Middleware-Vendors.rst:64
msgid ""
"For many cases you will find that nodes using different RMW implementations "
"are able to communicate, however this is not true under all circumstances. "
"Here is a list of inter-vendor communication configurations that are not "
"supported:"
msgstr ""
"Dans de nombreux cas, vous constaterez que les nœuds utilisant différentes "
"implémentations RMW sont capables de communiquer, mais ce n'est pas vrai "
"dans toutes les circonstances. Voici une liste des configurations de "
"communication inter-fournisseurs qui ne sont pas prises en charge :"

#: ../../source/Concepts/About-Different-Middleware-Vendors.rst:67
msgid "Fast DDS <-> Connext"
msgstr "DDS rapide <-> Connexion"

#: ../../source/Concepts/About-Different-Middleware-Vendors.rst:68
msgid ""
"``WString`` published by Fast DDS can't be received correctly by Connext on "
"macOS"
msgstr ""
"``WString`` publié par Fast DDS ne peut pas être reçu correctement par "
"Connext sur macOS"

#: ../../source/Concepts/About-Different-Middleware-Vendors.rst:70
msgid "Connext <-> Cyclone DDS"
msgstr "Connext <-> Cyclone DDS"

#: ../../source/Concepts/About-Different-Middleware-Vendors.rst:70
msgid "does not support pub/sub communication for ``WString``"
msgstr "ne prend pas en charge la communication pub/sub pour ``WString``"

#: ../../source/Concepts/About-Different-Middleware-Vendors.rst:73
msgid "Default RMW implementation"
msgstr "Implémentation RMW par défaut"

#: ../../source/Concepts/About-Different-Middleware-Vendors.rst:75
msgid ""
"If a ROS 2 workspace has multiple RMW implementations, Fast DDS is selected "
"as the default RMW implementation if it is available. If the Fast DDS RMW "
"implementation is not installed, the RMW implementation with the first RMW "
"implementation identifier in alphabetical order will be used. The "
"implementation identifier is the name of the ROS package that provides the "
"RMW implementation, e.g. ``rmw_cyclonedds_cpp``. For example, if both "
"``rmw_cyclonedds_cpp`` and ``rmw_connextdds`` ROS packages are installed, "
"``rmw_connextdds`` would be the default. If ``rmw_fastrtps_cpp`` is ever "
"installed, it would be the default."
msgstr ""
"Si un espace de travail ROS 2 a plusieurs implémentations RMW, Fast DDS est "
"sélectionné comme implémentation RMW par défaut si elle est disponible. Si "
"l'implémentation Fast DDS RMW n'est pas installée, l'implémentation RMW avec"
" le premier identifiant d'implémentation RMW dans l'ordre alphabétique sera "
"utilisée. L'identifiant d'implémentation est le nom du package ROS qui "
"fournit l'implémentation RMW, par ex. ``rmw_cyclonedds_cpp``. Par exemple, "
"si les deux packages ROS ``rmw_cyclonedds_cpp`` et ``rmw_connextdds`` sont "
"installés, ``rmw_connextdds`` serait la valeur par défaut. Si "
"``rmw_fastrtps_cpp`` est installé, ce serait la valeur par défaut."

#: ../../source/Concepts/About-Different-Middleware-Vendors.rst:81
msgid ""
"See the :doc:`guide <../How-To-Guides/Working-with-multiple-RMW-"
"implementations>` for how to specify which RMW implementation is to be used "
"when running the ROS 2 examples."
msgstr ""
"Consultez le :doc:`guide <../How-To-Guides/Working-with-multiple-RMW-"
"implementations>` pour savoir comment spécifier quelle implémentation RMW "
"doit être utilisée lors de l'exécution des exemples ROS 2."

#: ../../source/Concepts/About-Domain-ID.rst:3
msgid "The ROS_DOMAIN_ID"
msgstr "Le ROS_DOMAIN_ID"

#: ../../source/Concepts/About-Domain-ID.rst:8
msgid ""
"As explained elsewhere, the default middleware that ROS 2 uses for "
"communication is DDS. In DDS, the primary mechanism for having different "
"logical networks share a physical network is known as the Domain ID. ROS 2 "
"nodes on the same domain can freely discover and send messages to each "
"other, while ROS 2 nodes on different domains cannot. All ROS 2 nodes use "
"domain ID 0 by default. To avoid interference between different groups of "
"computers running ROS 2 on the same network, a different domain ID should be"
" set for each group."
msgstr ""
"Comme expliqué ailleurs, le middleware par défaut utilisé par ROS 2 pour la "
"communication est DDS. Dans DDS, le principal mécanisme permettant à "
"différents réseaux logiques de partager un réseau physique est appelé ID de "
"domaine. Les nœuds ROS 2 sur le même domaine peuvent librement se découvrir "
"et s'envoyer des messages, contrairement aux nœuds ROS 2 sur différents "
"domaines. Tous les nœuds ROS 2 utilisent l'ID de domaine 0 par défaut. Pour "
"éviter les interférences entre différents groupes d'ordinateurs exécutant "
"ROS 2 sur le même réseau, un ID de domaine différent doit être défini pour "
"chaque groupe."

#: ../../source/Concepts/About-Domain-ID.rst:15
msgid "Choosing a domain ID (short version)"
msgstr "Choisir un ID de domaine (version courte)"

#: ../../source/Concepts/About-Domain-ID.rst:17
msgid ""
"The text below explains the derivation of the range of domain IDs that "
"should be used in ROS 2. To skip that background and just choose a safe "
"number, simply choose a domain ID between 0 and 101, inclusive."
msgstr ""
"Le texte ci-dessous explique la dérivation de la plage d'ID de domaine à "
"utiliser dans ROS 2. Pour ignorer cet arrière-plan et choisir un numéro sûr,"
" choisissez simplement un ID de domaine compris entre 0 et 101 inclus."

#: ../../source/Concepts/About-Domain-ID.rst:22
msgid "Choosing a domain ID (long version)"
msgstr "Choisir un ID de domaine (version longue)"

#: ../../source/Concepts/About-Domain-ID.rst:24
msgid ""
"The domain ID is used by DDS to compute the UDP ports that will be used for "
"discovery and communication. See `this article "
"<https://community.rti.com/content/forum-topic/statically-configure-"
"firewall-let-omg-dds-traffic-through>`__ for details on how the ports are "
"computed. Remembering our basic networking, the UDP port is an `unsigned "
"16-bit integer "
"<https://en.wikipedia.org/wiki/User_Datagram_Protocol#Ports>`__. Thus, the "
"highest port number that can be allocated is 65535. Doing some math with the"
" formula in the article above, this means that the highest domain ID that "
"can possibly be assigned is 232, while the lowest that can be assigned is 0."
msgstr ""
"L'ID de domaine est utilisé par DDS pour calculer les ports UDP qui seront "
"utilisés pour la découverte et la communication. Voir `cet article "
"<https://community.rti.com/content/forum-topic/statically-configure-"
"firewall-let-omg-dds-traffic-through>`__ pour plus de détails sur la façon "
"dont les ports sont calculés. En se souvenant de notre réseau de base, le "
"port UDP est un `entier 16 bits non signé "
"<https://en.wikipedia.org/wiki/User_Datagram_Protocol#Ports>`__. Ainsi, le "
"numéro de port le plus élevé pouvant être attribué est 65535. En faisant "
"quelques calculs avec la formule de l'article ci-dessus, cela signifie que "
"l'ID de domaine le plus élevé pouvant être attribué est 232, tandis que le "
"plus bas pouvant être attribué est 0."

#: ../../source/Concepts/About-Domain-ID.rst:31
msgid "Platform-specific constraints"
msgstr "Contraintes spécifiques à la plateforme"

#: ../../source/Concepts/About-Domain-ID.rst:33
msgid ""
"For maximum compatibility, some additional platform-specific constraints "
"should be followed when choosing a domain ID. In particular, it is best to "
"avoid allocating domain IDs in the operating system's `ephemeral port range "
"<https://en.wikipedia.org/wiki/Ephemeral_port>`__. This avoids possible "
"conflicts between the ports used by the ROS 2 nodes and other networking "
"services on the computers."
msgstr ""
"Pour une compatibilité maximale, certaines contraintes supplémentaires "
"spécifiques à la plate-forme doivent être respectées lors du choix d'un ID "
"de domaine. En particulier, il est préférable d'éviter d'allouer des ID de "
"domaine dans la `plage de ports éphémères "
"<https://en.wikipedia.org/wiki/Ephemeral_port>`__ du système d'exploitation."
" Cela évite d'éventuels conflits entre les ports utilisés par les nœuds ROS "
"2 et d'autres services réseau sur les ordinateurs."

#: ../../source/Concepts/About-Domain-ID.rst:37
msgid "Here are some platform-specific notes about ephemeral ports."
msgstr ""
"Voici quelques notes spécifiques à la plate-forme sur les ports éphémères."

#: ../../source/Concepts/About-Domain-ID.rst:41
msgid "Linux"
msgstr "Linux"

#: ../../source/Concepts/About-Domain-ID.rst:43
msgid ""
"By default, the Linux kernel uses ports 32768-60999 for ephemeral ports. "
"This means that domain IDs 0-101 and 215-232 can be safely used without "
"colliding with ephemeral ports. The ephemeral port range is configurable in "
"Linux by setting custom values in "
"``/proc/sys/net/ipv4/ip_local_port_range``. If a custom ephemeral port range"
" is used, the above numbers may have to be adjusted accordingly."
msgstr ""
"Par défaut, le noyau Linux utilise les ports 32768-60999 pour les ports "
"éphémères. Cela signifie que les ID de domaine 0-101 et 215-232 peuvent être"
" utilisés en toute sécurité sans entrer en collision avec des ports "
"éphémères. La plage de ports éphémères est configurable sous Linux en "
"définissant des valeurs personnalisées dans "
"``/proc/sys/net/ipv4/ip_local_port_range``. Si une plage de ports éphémères "
"personnalisée est utilisée, les nombres ci-dessus peuvent devoir être "
"ajustés en conséquence."

#: ../../source/Concepts/About-Domain-ID.rst:48
msgid "macOS"
msgstr "macOS"

#: ../../source/Concepts/About-Domain-ID.rst:50
msgid ""
"By default, the ephemeral port range on macOS is 49152-65535. This means "
"that domain IDs 0-166 can be safely used without colliding with ephemeral "
"ports. The ephemeral port range is configurable in macOS by setting custom "
"sysctl values for ``net.inet.ip.portrange.first`` and "
"``net.inet.ip.portrange.last``. If a custom ephemeral port range is used, "
"the above numbers may have to be adjusted accordingly."
msgstr ""
"Par défaut, la plage de ports éphémères sur macOS est 49152-65535. Cela "
"signifie que les ID de domaine 0-166 peuvent être utilisés en toute sécurité"
" sans entrer en collision avec des ports éphémères. La plage de ports "
"éphémères est configurable dans macOS en définissant des valeurs sysctl "
"personnalisées pour ``net.inet.ip.portrange.first`` et "
"``net.inet.ip.portrange.last``. Si une plage de ports éphémères "
"personnalisée est utilisée, les nombres ci-dessus peuvent devoir être "
"ajustés en conséquence."

#: ../../source/Concepts/About-Domain-ID.rst:55
msgid "Windows"
msgstr "les fenêtres"

#: ../../source/Concepts/About-Domain-ID.rst:57
msgid ""
"By default, the ephemeral port range on Windows is 49152-65535. This means "
"that domain IDs 0-166 can be safely used without colliding with ephemeral "
"ports. The ephemeral port range is configurable in Windows by `using netsh "
"<https://docs.microsoft.com/en-us/troubleshoot/windows-"
"server/networking/default-dynamic-port-range-tcpip-chang>`__. If a custom "
"ephemeral port range is used, the above numbers may have to be adjusted "
"accordingly."
msgstr ""
"Par défaut, la plage de ports éphémères sous Windows est 49152-65535. Cela "
"signifie que les ID de domaine 0-166 peuvent être utilisés en toute sécurité"
" sans entrer en collision avec des ports éphémères. La plage de ports "
"éphémères est configurable dans Windows en `utilisant netsh "
"<https://docs.microsoft.com/en-us/troubleshoot/windows-"
"server/networking/default-dynamic-port-range-tcpip-chang>`__. Si une plage "
"de ports éphémères personnalisée est utilisée, les nombres ci-dessus peuvent"
" devoir être ajustés en conséquence."

#: ../../source/Concepts/About-Domain-ID.rst:63
msgid "Participant constraints"
msgstr "Contraintes des participants"

#: ../../source/Concepts/About-Domain-ID.rst:65
msgid ""
"For each ROS 2 process running on a computer, one DDS \"participant\" is "
"created. Since each DDS participant takes up two ports on the computer, "
"running more than 120 ROS 2 processes on one computer may spill over into "
"other domain IDs or the ephemeral ports."
msgstr ""
"Pour chaque processus ROS 2 exécuté sur un ordinateur, un \"participant\" "
"DDS est créé. Étant donné que chaque participant DDS occupe deux ports sur "
"l'ordinateur, l'exécution de plus de 120 processus ROS 2 sur un ordinateur "
"peut se répercuter sur d'autres ID de domaine ou sur les ports éphémères."

#: ../../source/Concepts/About-Domain-ID.rst:68
msgid "To see why, consider the domain IDs 1 and 2."
msgstr "Pour comprendre pourquoi, considérez les ID de domaine 1 et 2."

#: ../../source/Concepts/About-Domain-ID.rst:70
msgid "Domain ID 1 uses port 7650 and 7651 for multicast."
msgstr ""
"L'ID de domaine 1 utilise les ports 7650 et 7651 pour la multidiffusion."

#: ../../source/Concepts/About-Domain-ID.rst:71
msgid "Domain ID 2 uses port 7900 and 7901 for multicast."
msgstr ""
"L'ID de domaine 2 utilise les ports 7900 et 7901 pour la multidiffusion."

#: ../../source/Concepts/About-Domain-ID.rst:72
msgid ""
"When creating the 1st process (zeroth participant) in domain ID 1, the ports"
" 7660 and 7661 are used for unicast."
msgstr ""
"Lors de la création du 1er processus (participant zéro) dans l'ID de domaine"
" 1, les ports 7660 et 7661 sont utilisés pour l'unicast."

#: ../../source/Concepts/About-Domain-ID.rst:73
msgid ""
"When creating the 120th process (119th participant) in domain ID 1, the "
"ports 7898 and 7899 are used for unicast."
msgstr ""
"Lors de la création du 120e processus (119e participant) dans l'ID de "
"domaine 1, les ports 7898 et 7899 sont utilisés pour la monodiffusion."

#: ../../source/Concepts/About-Domain-ID.rst:74
msgid ""
"When creating the 121st process (120th participant) in domain ID 1, the "
"ports 7900 and 7901 are used for unicast and overlap with domain ID 2."
msgstr ""
"Lors de la création du 121e processus (120e participant) dans l'ID de "
"domaine 1, les ports 7900 et 7901 sont utilisés pour la monodiffusion et "
"chevauchent l'ID de domaine 2."

#: ../../source/Concepts/About-Domain-ID.rst:76
msgid ""
"If it is known that the computer will only ever be on a single domain ID at "
"a time, and the domain ID is low enough, it is safe to create more ROS 2 "
"processes than this."
msgstr ""
"Si l'on sait que l'ordinateur ne sera jamais que sur un seul ID de domaine à"
" la fois et que l'ID de domaine est suffisamment bas, il est prudent de "
"créer plus de processus ROS 2 que cela."

#: ../../source/Concepts/About-Domain-ID.rst:78
msgid ""
"When choosing a domain ID that is near the top of the range of platform-"
"specific domain IDs, one additional constraint should be considered."
msgstr ""
"Lorsque vous choisissez un ID de domaine proche du haut de la plage des ID "
"de domaine spécifiques à la plate-forme, une contrainte supplémentaire doit "
"être prise en compte."

#: ../../source/Concepts/About-Domain-ID.rst:80
msgid "For instance, assume a Linux computer with a domain ID of 101:"
msgstr ""
"Par exemple, supposons un ordinateur Linux avec un ID de domaine de 101 :"

#: ../../source/Concepts/About-Domain-ID.rst:82
msgid ""
"The zero'th ROS 2 process on the computer will connect to ports 32650, "
"32651, 32660, and 32661."
msgstr ""
"Le processus zéro ROS 2 sur l'ordinateur se connectera aux ports 32650, "
"32651, 32660 et 32661."

#: ../../source/Concepts/About-Domain-ID.rst:83
msgid ""
"The first ROS 2 process on the computer will connect to ports 32650, 32651, "
"32662, and 32663."
msgstr ""
"Le premier processus ROS 2 sur l'ordinateur se connectera aux ports 32650, "
"32651, 32662 et 32663."

#: ../../source/Concepts/About-Domain-ID.rst:84
msgid ""
"The 53rd ROS 2 process on the computer will connect to ports 32650, 32651, "
"32766, and 32767."
msgstr ""
"Le 53e processus ROS 2 sur l'ordinateur se connectera aux ports 32650, "
"32651, 32766 et 32767."

#: ../../source/Concepts/About-Domain-ID.rst:85
msgid ""
"The 54th ROS 2 process on the computer will connect to ports 32650, 32651, "
"32768, and 32769, running into the ephemeral port range."
msgstr ""
"Le 54e processus ROS 2 sur l'ordinateur se connectera aux ports 32650, "
"32651, 32768 et 32769, s'exécutant dans la plage de ports éphémères."

#: ../../source/Concepts/About-Domain-ID.rst:87
msgid ""
"Thus the maximum number of processes that should be created when using "
"domain ID 101 on Linux is 54. Similarly, the maximum number of processes "
"that should be created when using domain ID 232 on Linux is 63, as the "
"maximum port number is 65535."
msgstr ""
"Ainsi, le nombre maximum de processus qui doivent être créés lors de "
"l'utilisation de l'ID de domaine 101 sous Linux est de 54. De même, le "
"nombre maximum de processus qui doivent être créés lors de l'utilisation de "
"l'ID de domaine 232 sous Linux est de 63, car le numéro de port maximum est "
"65535."

#: ../../source/Concepts/About-Domain-ID.rst:90
msgid ""
"The situation is similar on macOS and Windows, though the numbers are "
"different. On macOS and Windows, when choosing a domain ID of 166 (the top "
"of the range), the maximum number of ROS 2 processes that can be created on "
"a computer before running into the ephemeral port range is 120."
msgstr ""
"La situation est similaire sur macOS et Windows, bien que les chiffres "
"soient différents. Sur macOS et Windows, lorsque vous choisissez un ID de "
"domaine de 166 (le haut de gamme), le nombre maximum de processus ROS 2 "
"pouvant être créés sur un ordinateur avant de s'exécuter dans la plage de "
"ports éphémères est de 120."

#: ../../source/Concepts/About-Domain-ID.rst:94
msgid "Domain ID to UDP Port Calculator"
msgstr "ID de domaine au calculateur de port UDP"

#: ../../source/Concepts/About-Executors.rst:4
msgid "Executors"
msgstr "Exécuteurs"

#: ../../source/Concepts/About-Executors.rst:12
msgid ""
"Execution management in ROS 2 is explicated by the concept of Executors. An "
"Executor uses one or more threads of the underlying operating system to "
"invoke the callbacks of subscriptions, timers, service servers, action "
"servers, etc. on incoming messages and events. The explicit Executor class "
"(in `executor.hpp "
"<https://github.com/ros2/rclcpp/blob/rolling/rclcpp/include/rclcpp/executor.hpp>`_"
" in rclcpp, in `executors.py "
"<https://github.com/ros2/rclpy/blob/rolling/rclpy/rclpy/executors.py>`_ in "
"rclpy, or in `executor.h "
"<https://github.com/ros2/rclc/blob/master/rclc/include/rclc/executor.h>`_ in"
" rclc) provides more control over execution management than the spin "
"mechanism in ROS 1, although the basic API is very similar."
msgstr ""
"La gestion de l'exécution dans ROS 2 est expliquée par le concept "
"d'exécuteurs. Un exécuteur utilise un ou plusieurs threads du système "
"d'exploitation sous-jacent pour invoquer les rappels des abonnements, des "
"temporisateurs, des serveurs de service, des serveurs d'action, etc. sur les"
" messages et événements entrants. La classe Executor explicite (dans "
"`executor.hpp "
"<https://github.com/ros2/rclcpp/blob/rolling/rclcpp/include/rclcpp/executor.hpp>`_"
" dans rclcpp, dans `executors.py <https: "
"//github.com/ros2/rclpy/blob/rolling/rclpy/rclpy/executors.py>`_ dans rclpy,"
" ou dans `executor.h <https://github.com/ros2/rclc/blob/master/ "
"rclc/include/rclc/executor.h>`_ dans rclc) fournit plus de contrôle sur la "
"gestion de l'exécution que le mécanisme de spin dans ROS 1, bien que l'API "
"de base soit très similaire."

#: ../../source/Concepts/About-Executors.rst:16
msgid "In the following, we focus on the C++ Client Library *rclcpp*."
msgstr ""
"Dans ce qui suit, nous nous concentrons sur la bibliothèque cliente C++ "
"*rclcpp*."

#: ../../source/Concepts/About-Executors.rst:19
msgid "Basic use"
msgstr "Utilisation de base"

#: ../../source/Concepts/About-Executors.rst:21
msgid ""
"In the simplest case, the main thread is used for processing the incoming "
"messages and events of a Node by calling ``rclcpp::spin(..)`` as follows:"
msgstr ""
"Dans le cas le plus simple, le thread principal est utilisé pour traiter les"
" messages entrants et les événements d'un nœud en appelant "
"``rclcpp::spin(..)`` comme suit :"

#: ../../source/Concepts/About-Executors.rst:42
msgid ""
"The call to ``spin(node)`` basically expands to an instantiation and "
"invocation of the Single-Threaded Executor, which is the simplest Executor:"
msgstr ""
"L'appel à ``spin(node)`` se développe essentiellement en une instanciation "
"et une invocation de l'exécuteur monothread, qui est l'exécuteur le plus "
"simple :"

#: ../../source/Concepts/About-Executors.rst:50
msgid ""
"By invoking ``spin()`` of the Executor instance, the current thread starts "
"querying the rcl and middleware layers for incoming messages and other "
"events and calls the corresponding callback functions until the node shuts "
"down. In order not to counteract the QoS settings of the middleware, an "
"incoming message is not stored in a queue on the Client Library layer but "
"kept in the middleware until it is taken for processing by a callback "
"function. (This is a crucial difference to ROS 1.) A *wait set* is used to "
"inform the Executor about available messages on the middleware layer, with "
"one binary flag per queue. The *wait set* is also used to detect when timers"
" expire."
msgstr ""
"En invoquant ``spin()`` de l'instance Executor, le thread actuel commence à "
"interroger les couches rcl et middleware pour les messages entrants et "
"autres événements et appelle les fonctions de rappel correspondantes jusqu'à"
" ce que le nœud s'arrête. Afin de ne pas contrecarrer les paramètres QoS du "
"middleware, un message entrant n'est pas stocké dans une file d'attente sur "
"la couche Client Library mais conservé dans le middleware jusqu'à ce qu'il "
"soit pris en charge par une fonction de rappel. (Il s'agit d'une différence "
"cruciale avec ROS 1.) Un *wait set* est utilisé pour informer l'exécuteur "
"des messages disponibles sur la couche middleware, avec un indicateur "
"binaire par file d'attente. Le *wait set* est également utilisé pour "
"détecter l'expiration des minuteries."

#: ../../source/Concepts/About-Executors.rst:58
msgid ""
"The Single-Threaded Executor is also used by the container process for "
":doc:`components <./About-Composition>`, i.e. in all cases where nodes are "
"created and executed without an explicit main function."
msgstr ""
"L'exécuteur monothread est également utilisé par le processus conteneur pour"
" :doc:`components <./About-Composition>`, c'est-à-dire dans tous les cas où "
"des nœuds sont créés et exécutés sans fonction principale explicite."

#: ../../source/Concepts/About-Executors.rst:61
msgid "Types of Executors"
msgstr "Types d'exécuteurs"

#: ../../source/Concepts/About-Executors.rst:63
msgid ""
"Currently, rclcpp provides three Executor types, derived from a shared "
"parent class:"
msgstr ""
"Actuellement, rclcpp fournit trois types d'exécuteurs, dérivés d'une classe "
"parent partagée :"

#: ../../source/Concepts/About-Executors.rst:79
msgid ""
"The *Multi-Threaded Executor* creates a configurable number of threads to "
"allow for processing multiple messages or events in parallel. The *Static "
"Single-Threaded Executor* optimizes the runtime costs for scanning the "
"structure of a node in terms of subscriptions, timers, service servers, "
"action servers, etc. It performs this scan only once when the node is added,"
" while the other two executors regularly scan for such changes. Therefore, "
"the Static Single-Threaded Executor should be used only with nodes that "
"create all subscriptions, timers, etc. during initialization."
msgstr ""
"* L'exécuteur multithread * crée un nombre configurable de threads pour "
"permettre le traitement de plusieurs messages ou événements en parallèle. Le"
" *Static Single-Threaded Executor* optimise les coûts d'exécution pour "
"scanner la structure d'un nœud en termes d'abonnements, de temporisateurs, "
"de serveurs de service, de serveurs d'action, etc. Il effectue ce scan une "
"seule fois lorsque le nœud est ajouté, tandis que les deux autres les "
"exécuteurs recherchent régulièrement de tels changements. Par conséquent, "
"l'exécuteur statique à un seul thread ne doit être utilisé qu'avec des nœuds"
" qui créent tous les abonnements, temporisateurs, etc. lors de "
"l'initialisation."

#: ../../source/Concepts/About-Executors.rst:84
msgid ""
"All three executors can be used with multiple nodes by calling "
"``add_node(..)`` for each node."
msgstr ""
"Les trois exécuteurs peuvent être utilisés avec plusieurs nœuds en appelant "
"``add_node(..)`` pour chaque nœud."

#: ../../source/Concepts/About-Executors.rst:98
msgid ""
"In the above example, the one thread of a Static Single-Threaded Executor is"
" used to serve three nodes together. In case of a Multi-Threaded Executor, "
"the actual parallelism depends on the callback groups."
msgstr ""
"Dans l'exemple ci-dessus, le seul thread d'un exécuteur statique à un seul "
"thread est utilisé pour desservir trois nœuds ensemble. Dans le cas d'un "
"exécuteur multithread, le parallélisme réel dépend des groupes de rappel."

#: ../../source/Concepts/About-Executors.rst:102
msgid "Callback groups"
msgstr "Groupes de rappel"

#: ../../source/Concepts/About-Executors.rst:104
msgid ""
"ROS 2 allows organizing the callbacks of a node in groups. In rclcpp, such a"
" *callback group* can be created by the ``create_callback_group`` function "
"of the Node class. In rclpy, the same is done by calling the constructor of "
"the specific callback group type. The callback group must be stored "
"throughout execution of the node (eg. as a class member), or otherwise the "
"executor won't be able to trigger the callbacks. Then, this callback group "
"can be specified when creating a subscription, timer, etc. - for example by "
"the subscription options:"
msgstr ""
"ROS 2 permet d'organiser les rappels d'un nœud en groupes. Dans rclcpp, un "
"tel *groupe de rappel* peut être créé par la fonction "
"``create_callback_group`` de la classe Node. Dans rclpy, la même chose est "
"faite en appelant le constructeur du type de groupe de rappel spécifique. Le"
" groupe de rappel doit être stocké tout au long de l'exécution du nœud (par "
"exemple en tant que membre de classe), sinon l'exécuteur ne pourra pas "
"déclencher les rappels. Ensuite, ce groupe de rappel peut être spécifié lors"
" de la création d'un abonnement, d'un timer, etc. - par exemple par les "
"options d'abonnement :"

#: ../../source/Concepts/About-Executors.rst:112
#: ../../source/Concepts/About-Logging.rst:49
#: ../../source/Concepts/About-Logging.rst:185
msgid "C++"
msgstr "C++"

#: ../../source/Concepts/About-Executors.rst:123
#: ../../source/Concepts/About-Logging.rst:72
#: ../../source/Concepts/About-Logging.rst:191
msgid "Python"
msgstr "Python"

#: ../../source/Concepts/About-Executors.rst:131
msgid ""
"All subscriptions, timers, etc. that are created without the indication of a"
" callback group are assigned to the *default callback group*. The default "
"callback group can be queried via "
"``NodeBaseInterface::get_default_callback_group()`` in rclcpp and by "
"``Node.default_callback_group`` in rclpy."
msgstr ""
"Tous les abonnements, minuteries, etc. qui sont créés sans l'indication d'un"
" groupe de rappel sont affectés au *groupe de rappel par défaut*. Le groupe "
"de rappel par défaut peut être interrogé via "
"``NodeBaseInterface::get_default_callback_group()`` dans rclcpp et par "
"``Node.default_callback_group`` dans rclpy."

#: ../../source/Concepts/About-Executors.rst:135
msgid ""
"There are two types of callback groups, where the type has to be specified "
"at instantiation time:"
msgstr ""
"Il existe deux types de groupes de rappel, où le type doit être spécifié au "
"moment de l'instanciation :"

#: ../../source/Concepts/About-Executors.rst:137
msgid ""
"*Mutually exclusive:* Callbacks of this group must not be executed in "
"parallel."
msgstr ""
"*Mutuellement exclusif :* Les rappels de ce groupe ne doivent pas être "
"exécutés en parallèle."

#: ../../source/Concepts/About-Executors.rst:138
msgid "*Reentrant:* Callbacks of this group may be executed in parallel."
msgstr ""
"*Réentrant :* Les rappels de ce groupe peuvent être exécutés en parallèle."

#: ../../source/Concepts/About-Executors.rst:140
msgid ""
"Callbacks of different callback groups may always be executed in parallel. "
"The Multi-Threaded Executor uses its threads as a pool to process a many "
"callbacks as possible in parallel according to these conditions. For tips on"
" how to use callback groups efficiently, see :doc:`Using Callback Groups "
"<../How-To-Guides/Using-callback-groups>`."
msgstr ""
"Les rappels de différents groupes de rappel peuvent toujours être exécutés "
"en parallèle. L'exécuteur multithread utilise ses threads comme un pool pour"
" traiter autant de rappels que possible en parallèle selon ces conditions. "
"Pour obtenir des conseils sur l'utilisation efficace des groupes de rappel, "
"consultez :doc:`Using Callback Groups <../How-To-Guides/Using-callback-"
"groups>`."

#: ../../source/Concepts/About-Executors.rst:144
msgid ""
"The Executor base class in rclcpp also has the function "
"``add_callback_group(..)``, which allows distributing callback groups to "
"different Executors. By configuring the underlying threads using the "
"operating system scheduler, specific callbacks can be prioritized over other"
" callbacks. For example, the subscriptions and timers of a control loop can "
"be prioritized over all other subscriptions and standard services of a node."
" The `examples_rclcpp_cbg_executor package "
"<https://github.com/ros2/examples/tree/rolling/rclcpp/executors/cbg_executor>`_"
" provides a demo of this mechanism."
msgstr ""
"La classe de base Executor dans rclcpp a également la fonction "
"``add_callback_group(..)``, qui permet de distribuer des groupes de rappel à"
" différents Executors. En configurant les threads sous-jacents à l'aide du "
"planificateur du système d'exploitation, des rappels spécifiques peuvent "
"être prioritaires sur d'autres rappels. Par exemple, les abonnements et les "
"temporisateurs d'une boucle de contrôle peuvent être prioritaires sur tous "
"les autres abonnements et services standard d'un nœud. Le package "
"`examples_rclcpp_cbg_executor "
"<https://github.com/ros2/examples/tree/rolling/rclcpp/executors/cbg_executor>`_"
" fournit une démonstration de ce mécanisme."

#: ../../source/Concepts/About-Executors.rst:150
msgid "Scheduling semantics"
msgstr "Sémantique de planification"

#: ../../source/Concepts/About-Executors.rst:152
msgid ""
"If the processing time of the callbacks is shorter than the period with "
"which messages and events occur, the Executor basically processes them in "
"FIFO order. However, if the processing time of some callbacks is longer, "
"messages and events will be queued on the lower layers of the stack. The "
"wait set mechanism reports only very little information about these queues "
"to the Executor. In detail, it only reports whether there are any messages "
"for a certain topic or not. The Executor uses this information to process "
"the messages (including services and actions) in a round-robin fashion - but"
" not in FIFO order. The following flow diagram visualizes this scheduling "
"semantics."
msgstr ""
"Si le temps de traitement des rappels est plus court que la période pendant "
"laquelle les messages et les événements se produisent, l'exécuteur les "
"traite essentiellement dans l'ordre FIFO. Cependant, si le temps de "
"traitement de certains rappels est plus long, les messages et les événements"
" seront mis en file d'attente sur les couches inférieures de la pile. Le "
"mécanisme d'ensemble d'attente ne rapporte que très peu d'informations sur "
"ces files d'attente à l'exécuteur. En détail, il signale uniquement s'il y a"
" des messages pour un certain sujet ou non. L'exécuteur utilise ces "
"informations pour traiter les messages (y compris les services et les "
"actions) de manière circulaire - mais pas dans l'ordre FIFO. L'organigramme "
"suivant visualise cette sémantique de planification."

#: ../../source/Concepts/About-Executors.rst:161
msgid ""
"This semantics was first described in a `paper by Casini et al. at ECRTS "
"2019 <https://drops.dagstuhl.de/opus/volltexte/2019/10743/pdf/LIPIcs-"
"ECRTS-2019-6.pdf>`_. (Note: The paper also explains that timer events are "
"prioritized over all other messages. `This prioritization was removed in "
"Eloquent. <https://github.com/ros2/rclcpp/pull/841>`_)"
msgstr ""
"Cette sémantique a été décrite pour la première fois dans un article de "
"Casini et al. à l'ECRTS 2019 "
"<https://drops.dagstuhl.de/opus/volltexte/2019/10743/pdf/LIPics-"
"ECRTS-2019-6.pdf>`_. (Remarque : le document explique également que les "
"événements de minuterie sont prioritaires sur tous les autres messages. "
"`Cette hiérarchisation a été supprimée dans Eloquent. "
"<https://github.com/ros2/rclcpp/pull/841>`_)"

#: ../../source/Concepts/About-Executors.rst:166
msgid "Outlook"
msgstr "Perspectives"

#: ../../source/Concepts/About-Executors.rst:168
msgid ""
"While the three Executors of rclcpp work well for most applications there "
"are some issues that make them not suitable for real-time applications, "
"which require well-defined execution times, determinism, and custom control "
"over the execution order. Here is a summary of some of these issues:"
msgstr ""
"Bien que les trois exécuteurs de rclcpp fonctionnent bien pour la plupart "
"des applications, certains problèmes les rendent inadaptés aux applications "
"en temps réel, qui nécessitent des temps d'exécution bien définis, un "
"déterminisme et un contrôle personnalisé sur l'ordre d'exécution. Voici un "
"résumé de certains de ces problèmes :"

#: ../../source/Concepts/About-Executors.rst:171
msgid ""
"Complex and mixed scheduling semantics. Ideally you want well defined "
"scheduling semantics to perform a formal timing analysis."
msgstr ""
"Sémantique d'ordonnancement complexe et mixte. Idéalement, vous souhaitez "
"une sémantique de planification bien définie pour effectuer une analyse "
"temporelle formelle."

#: ../../source/Concepts/About-Executors.rst:173
msgid ""
"Callbacks may suffer from priority inversion. Higher priority callbacks may "
"be blocked by lower priority callbacks."
msgstr ""
"Les rappels peuvent souffrir d'une inversion de priorité. Les rappels de "
"priorité supérieure peuvent être bloqués par des rappels de priorité "
"inférieure."

#: ../../source/Concepts/About-Executors.rst:175
msgid "No explicit control over the callbacks execution order."
msgstr "Aucun contrôle explicite sur l'ordre d'exécution des rappels."

#: ../../source/Concepts/About-Executors.rst:176
msgid "No built-in control over triggering for specific topics."
msgstr ""
"Aucun contrôle intégré sur le déclenchement pour des sujets spécifiques."

#: ../../source/Concepts/About-Executors.rst:178
msgid ""
"Additionally, the executor overhead in terms of CPU and memory usage is "
"considerable. The Static Single-Threaded Executor reduces this overhead "
"greatly but it might be not enough for some applications."
msgstr ""
"De plus, la surcharge de l'exécuteur en termes d'utilisation du processeur "
"et de la mémoire est considérable. L'exécuteur statique à un seul thread "
"réduit considérablement cette surcharge, mais cela peut ne pas être "
"suffisant pour certaines applications."

#: ../../source/Concepts/About-Executors.rst:181
msgid ""
"These issues have been partially addressed by the following developments:"
msgstr ""
"Ces problèmes ont été partiellement résolus par les développements suivants "
":"

#: ../../source/Concepts/About-Executors.rst:183
msgid ""
"`rclcpp WaitSet "
"<https://github.com/ros2/rclcpp/blob/rolling/rclcpp/include/rclcpp/wait_set.hpp>`_:"
" The ``WaitSet`` class of rclcpp allows waiting directly on subscriptions, "
"timers, service servers, action servers, etc. instead of using an Executor. "
"It can be used to implement deterministic, user-defined processing "
"sequences, possibly processing multiple messages from different "
"subscriptions together. The `examples_rclcpp_wait_set package "
"<https://github.com/ros2/examples/tree/rolling/rclcpp/wait_set>`_ provides "
"several examples for the use of this user-level wait set mechanism."
msgstr ""
"`rclcpp WaitSet "
"<https://github.com/ros2/rclcpp/blob/rolling/rclcpp/include/rclcpp/wait_set.hpp>`_ :"
" La classe ``WaitSet`` de rclcpp permet d'attendre directement sur les "
"abonnements, les minuteurs, serveurs de service, serveurs d'action, etc. au "
"lieu d'utiliser un exécuteur. Il peut être utilisé pour implémenter des "
"séquences de traitement déterministes définies par l'utilisateur, traitant "
"éventuellement plusieurs messages provenant de différents abonnements "
"ensemble. Le package `examples_rclcpp_wait_set "
"<https://github.com/ros2/examples/tree/rolling/rclcpp/wait_set>`_ fournit "
"plusieurs exemples d'utilisation de ce mécanisme de jeu d'attente au niveau "
"de l'utilisateur."

#: ../../source/Concepts/About-Executors.rst:186
msgid ""
"`rclc Executor "
"<https://github.com/ros2/rclc/blob/master/rclc/include/rclc/executor.h>`_: "
"This Executor from the C Client Library *rclc* developed for micro-ROS gives"
" the user fine-grained control over the execution order of callbacks and "
"allows for custom trigger conditions to activate callbacks. Furthermore, it "
"implements ideas of the Logical Execution Time (LET) semantics."
msgstr ""
"`rclc Executor "
"<https://github.com/ros2/rclc/blob/master/rclc/include/rclc/executor.h>`_ : "
"cet exécuteur de la bibliothèque client C *rclc* développé pour micro-ROS "
"donne le contrôle précis de l'utilisateur sur l'ordre d'exécution des "
"rappels et permet des conditions de déclenchement personnalisées pour "
"activer les rappels. De plus, il implémente les idées de la sémantique du "
"temps d'exécution logique (LET)."

#: ../../source/Concepts/About-Executors.rst:190
msgid "Further information"
msgstr "Plus d'informations"

#: ../../source/Concepts/About-Executors.rst:192
msgid ""
"Michael Pöhnl et al.: `\"ROS 2 Executor: How to make it efficient, real-time"
" and deterministic?\" <https://www.apex.ai/roscon-21>`_. Workshop at ROS "
"World 2021. Virtual event. 19 October 2021."
msgstr ""
"Michael Pöhnl et al. : `« Exécuteur ROS 2 : comment le rendre efficace, "
"temps réel et déterministe ? <https://www.apex.ai/roscon-21>`_. Atelier au "
"ROS World 2021. Événement virtuel. 19 octobre 2021."

#: ../../source/Concepts/About-Executors.rst:193
msgid ""
"Ralph Lange: `\"Advanced Execution Management with ROS 2\" "
"<https://www.youtube.com/watch?v=Sz-nllmtcc8&t=109s>`_. ROS Industrial "
"Conference. Virtual event. 16 December 2020."
msgstr ""
"Ralph Lange : `\"Gestion avancée de l'exécution avec ROS 2\" "
"<https://www.youtube.com/watch?v=Sz-nllmtcc8&t=109s>`_. Conférence "
"industrielle ROS. Événement virtuel. 16 décembre 2020."

#: ../../source/Concepts/About-Executors.rst:194
msgid ""
"Daniel Casini, Tobias Blass, Ingo Lütkebohle, and Björn Brandenburg: "
"`“Response-Time Analysis of ROS 2 Processing Chains under Reservation-Based "
"Scheduling” <https://drops.dagstuhl.de/opus/volltexte/2019/10743/pdf/LIPIcs-"
"ECRTS-2019-6.pdf>`_, Proc. of 31st ECRTS 2019, Stuttgart, Germany, July "
"2019."
msgstr ""
"Daniel Casini, Tobias Blass, Ingo Lütkebohle et Björn Brandenburg : "
"`\"Analyse du temps de réponse des chaînes de traitement ROS 2 sous la "
"planification basée sur les réservations\" "
"<https://drops.dagstuhl.de/opus/volltexte/2019/10743/pdf /LIPics-"
"ECRTS-2019-6.pdf>`_, Proc. du 31e ECRTS 2019, Stuttgart, Allemagne, juillet "
"2019."

#: ../../source/Concepts/About-Internal-Interfaces.rst:2
msgid "About internal ROS 2 interfaces"
msgstr "À propos des interfaces ROS 2 internes"

#: ../../source/Concepts/About-Internal-Interfaces.rst:6
msgid ""
"The internal ROS interfaces are public C |APIs| that are intended for use by"
" developers who are creating |client libraries| or adding a new underlying "
"middleware, but are not intended for use by typical ROS users. The ROS "
"|client libraries| provide the user facing |APIs| that most ROS users are "
"familiar with, and may come in a variety of programming languages."
msgstr ""
"Les interfaces ROS internes sont des C publics |APIs| destinés à être "
"utilisés par les développeurs qui créent des |bibliothèques clientes| ou "
"l'ajout d'un nouveau middleware sous-jacent, mais ne sont pas destinés à "
"être utilisés par les utilisateurs ROS typiques. Le ROS |bibliothèques "
"clientes| fournir à l'utilisateur face aux |APIs| que la plupart des "
"utilisateurs de ROS connaissent et peuvent être disponibles dans une variété"
" de langages de programmation."

#: ../../source/Concepts/About-Internal-Interfaces.rst:10
msgid "Internal API Architecture Overview"
msgstr "Présentation de l'architecture de l'API interne"

#: ../../source/Concepts/About-Internal-Interfaces.rst:12
msgid "There are two main internal interfaces:"
msgstr "Il existe deux interfaces internes principales :"

#: ../../source/Concepts/About-Internal-Interfaces.rst:14
msgid "the ROS middleware interface (``rmw`` |API|)"
msgstr "l'interface du middleware ROS (``rmw`` |API|)"

#: ../../source/Concepts/About-Internal-Interfaces.rst:15
msgid "the ROS client library interface (``rcl`` |API|)"
msgstr "l'interface de la bibliothèque cliente ROS (``rcl`` |API|)"

#: ../../source/Concepts/About-Internal-Interfaces.rst:17
msgid ""
"The ``rmw`` |API| is the interface between the ROS 2 software stack and the "
"underlying middleware implementation. The underlying middleware used for ROS"
" 2 is either a DDS or RTPS implementation, and is responsible for discovery,"
" publish and subscribe mechanics, request-reply mechanics for services, and "
"serialization of message types."
msgstr ""
"L'|API| ``rmw`` est l'interface entre la pile logicielle ROS 2 et "
"l'implémentation middleware sous-jacente. Le middleware sous-jacent utilisé "
"pour ROS 2 est une implémentation DDS ou RTPS et est responsable des "
"mécanismes de découverte, de publication et d'abonnement, des mécanismes de "
"demande-réponse pour les services et de la sérialisation des types de "
"messages."

#: ../../source/Concepts/About-Internal-Interfaces.rst:20
msgid ""
"The ``rcl`` |API| is a slightly higher level |API| which is used to "
"implement the |client libraries| and does not touch the middleware "
"implementation directly, but rather does so through the ROS middleware "
"interface (``rmw`` |API|) abstraction."
msgstr ""
"L'|API| ``rcl`` est un niveau légèrement supérieur |API| qui est utilisé "
"pour implémenter les |bibliothèques clientes| et ne touche pas directement "
"l'implémentation du middleware, mais le fait plutôt via l'abstraction de "
"l'interface du middleware ROS (``rmw`` |API|)."

#: ../../source/Concepts/About-Internal-Interfaces.rst:None
msgid "ros2 software stack"
msgstr "pile logicielle ros2"

#: ../../source/Concepts/About-Internal-Interfaces.rst:25
msgid ""
"As the diagram shows, these |APIs| are stacked such that the typical ROS "
"user will use the |client library| |API|, e.g. ``rclcpp``, to implement "
"their code (executable or library). The implementation of the |client "
"libraries|, e.g. ``rclcpp``, use the ``rcl`` interface which provides access"
" to the ROS graph and graph events. The ``rcl`` implementation in turn uses "
"the ``rmw`` |API| to access the ROS graph. The purpose of the ``rcl`` "
"implementation is to provide a common implementation for more complex ROS "
"concepts and utilities that may be used by various |client libraries|, while"
" remaining agnostic to the underlying middleware being used. The purpose of "
"the ``rmw`` interface is to capture the absolute minimum middleware "
"functionality needed to support ROS's client libraries. Finally, the "
"implementation of the ``rmw`` |API| is provided by a middleware "
"implementation specific |package|, e.g. ``rmw_fastrtps_cpp``, the library of"
" which is compiled against vendor specific DDS interfaces and types."
msgstr ""
"Comme le montre le diagramme, ces |APIs| sont empilés de telle sorte que "
"l'utilisateur ROS typique utilisera la |bibliothèque client| |API|, par ex. "
"``rclcpp``, pour implémenter leur code (exécutable ou bibliothèque). "
"L'implémentation des |bibliothèques clientes|, par ex. ``rclcpp``, utilisez "
"l'interface ``rcl`` qui donne accès au graphe ROS et aux événements de "
"graphe. L'implémentation ``rcl`` utilise à son tour l'API| ``rmw`` | pour "
"accéder au graphique ROS. Le but de l'implémentation ``rcl`` est de fournir "
"une implémentation commune pour des concepts et des utilitaires ROS plus "
"complexes qui peuvent être utilisés par diverses |bibliothèques clientes|, "
"tout en restant indépendant du middleware sous-jacent utilisé. Le but de "
"l'interface ``rmw`` est de capturer la fonctionnalité minimale absolue du "
"middleware nécessaire pour prendre en charge les bibliothèques clientes de "
"ROS. Enfin, l'implémentation de l'|API| ``rmw`` est fourni par un |package| "
"spécifique à l'implémentation du middleware, par ex. ``rmw_fastrtps_cpp``, "
"dont la bibliothèque est compilée avec les interfaces et les types DDS "
"spécifiques au fournisseur."

#: ../../source/Concepts/About-Internal-Interfaces.rst:32
msgid ""
"In the diagram above there is also a box labeled ``ros_to_dds``, and the "
"purpose of this box is to represent a category of possible packages which "
"allow the user to access DDS vendor specific objects and settings using the "
"ROS equivalents. One of the goals of this abstraction interface is to "
"completely insulate the ROS user space code from the middleware being used, "
"so that changing DDS vendors or even middleware technology has a minimal "
"impact on the users code. However, we recognize that on occasion it is "
"useful to reach into the implementation and manually adjust settings despite"
" the consequences that might have. By requiring the use of one of these "
"packages in order to access the underlying DDS vendor's objects, we can "
"avoid exposing vendor specific symbols and headers in the normal interface. "
"It also makes it easy to see what code is potentially violating the vendor "
"portability by inspecting the package's dependencies to see if one of these "
"``ros_to_dds`` packages are being used."
msgstr ""
"Dans le diagramme ci-dessus, il y a aussi une boîte intitulée "
"``ros_to_dds``, et le but de cette boîte est de représenter une catégorie de"
" packages possibles qui permettent à l'utilisateur d'accéder aux objets et "
"paramètres spécifiques au fournisseur DDS en utilisant les équivalents ROS. "
"L'un des objectifs de cette interface d'abstraction est d'isoler "
"complètement le code de l'espace utilisateur ROS du middleware utilisé, de "
"sorte que le changement de fournisseur DDS ou même de technologie middleware"
" ait un impact minimal sur le code des utilisateurs. Cependant, nous "
"reconnaissons qu'il est parfois utile d'accéder à la mise en œuvre et "
"d'ajuster manuellement les paramètres malgré les conséquences que cela "
"pourrait avoir. En exigeant l'utilisation de l'un de ces packages pour "
"accéder aux objets du fournisseur DDS sous-jacent, nous pouvons éviter "
"d'exposer des symboles et des en-têtes spécifiques au fournisseur dans "
"l'interface normale. Cela permet également de voir facilement quel code "
"viole potentiellement la portabilité du fournisseur en inspectant les "
"dépendances du paquet pour voir si l'un de ces paquets ``ros_to_dds`` est "
"utilisé."

#: ../../source/Concepts/About-Internal-Interfaces.rst:41
msgid "Type Specific Interfaces"
msgstr "Interfaces spécifiques au type"

#: ../../source/Concepts/About-Internal-Interfaces.rst:43
msgid ""
"All along the way there are some parts of the |APIs| that are necessarily "
"specific to the message types being exchanged, e.g. publishing a message or "
"subscribing to a topic, and therefore require generated code for each "
"message type. The following diagram layouts the path from user defined "
"``rosidl`` files, e.g. ``.msg`` files, to the type specific code used by the"
" user and system to perform type specific functions:"
msgstr ""
"Tout au long du chemin, il y a certaines parties des |APIs| qui sont "
"nécessairement spécifiques aux types de messages échangés, par ex. publier "
"un message ou s'abonner à un sujet, et nécessitent donc un code généré pour "
"chaque type de message. Le diagramme suivant présente le chemin à partir des"
" fichiers ``rosidl`` définis par l'utilisateur, par ex. Fichiers ``.msg``, "
"au code spécifique au type utilisé par l'utilisateur et le système pour "
"exécuter des fonctions spécifiques au type :"

#: ../../source/Concepts/About-Internal-Interfaces.rst:49
msgid "ros2 idl static type support stack"
msgstr "pile de support de type statique ros2 idl"

#: ../../source/Concepts/About-Internal-Interfaces.rst:49
msgid ""
"Figure: flow chart of \"static\" type support generation, from ``rosidl`` "
"files to user facing code."
msgstr ""
"Figure : organigramme de la génération de support de type \"statique\", des "
"fichiers ``rosidl`` au code utilisateur."

#: ../../source/Concepts/About-Internal-Interfaces.rst:51
msgid ""
"The right hand side of the diagram shows how the ``.msg`` files are passed "
"directly to language specific code generators, e.g. ``rosidl_generator_cpp``"
" or ``rosidl_generator_py``. These generators are responsible for creating "
"the code that the user will include (or import) and use as the in-memory "
"representation of the messages that were defined in the ``.msg`` files. For "
"example, consider the message ``std_msgs/String``, a user might use this "
"file in C++ with the statement ``#include <std_msgs/msg/string.hpp>``, or "
"they might use the statement ``from std_msgs.msg import String`` in Python. "
"These statements work because of the files generated by these language "
"specific (but middleware agnostic) generator packages."
msgstr ""
"Le côté droit du diagramme montre comment les fichiers ``.msg`` sont "
"transmis directement aux générateurs de code spécifiques à la langue, par "
"ex. ``rosidl_generator_cpp`` ou ``rosidl_generator_py``. Ces générateurs "
"sont chargés de créer le code que l'utilisateur inclura (ou importera) et "
"utilisera comme représentation en mémoire des messages qui ont été définis "
"dans les fichiers ``.msg``. Par exemple, considérez le message "
"``std_msgs/String``, un utilisateur peut utiliser ce fichier en C++ avec "
"l'instruction ``#include <std_msgs/msg/string.hpp>``, ou il peut utiliser "
"l'instruction ``from std_msgs.msg import String`` en Python. Ces "
"instructions fonctionnent grâce aux fichiers générés par ces packages "
"générateurs spécifiques au langage (mais indépendants du middleware)."

#: ../../source/Concepts/About-Internal-Interfaces.rst:56
msgid ""
"Separately, the ``.msg`` files are used to generate type support code for "
"each type. In this context, type support means: meta data or functions that "
"are specific to a given type and that are used by the system to perform "
"particular tasks for the given type. The type support for a given message "
"might include things like a list of the names and types for each field in "
"the message. It might also contain a reference to code that can perform "
"particular tasks for that type, e.g. publish a message."
msgstr ""
"Séparément, les fichiers ``.msg`` sont utilisés pour générer le code de "
"support de type pour chaque type. Dans ce contexte, le support de type "
"signifie : des métadonnées ou des fonctions qui sont spécifiques à un type "
"donné et qui sont utilisées par le système pour effectuer des tâches "
"particulières pour le type donné. La prise en charge du type pour un message"
" donné peut inclure des éléments tels qu'une liste des noms et des types "
"pour chaque champ du message. Il peut également contenir une référence au "
"code qui peut effectuer des tâches particulières pour ce type, par ex. "
"publier un message."

#: ../../source/Concepts/About-Internal-Interfaces.rst:62
msgid "Static Type Support"
msgstr "Prise en charge du type statique"

#: ../../source/Concepts/About-Internal-Interfaces.rst:64
msgid ""
"When the type support references code to do particular functions for a "
"specific message type, that code sometimes needs to do middleware specific "
"work. For example, consider the type specific publish function, when using "
"\"vendor A\" the function will need to call some of \"vendor A\"'s |API|, "
"but when using \"vendor B\" it will need to call \"vendor B\"'s |API|. To "
"allow for middleware vendor specific code, the user defined ``.msg`` files "
"may result in the generation of vendor specific code. This vendor specific "
"code is still hidden from the user through the type support abstraction, "
"which is similar to how the \"Private Implementation\" (or Pimpl) pattern "
"works."
msgstr ""
"Lorsque la prise en charge du type fait référence à du code pour effectuer "
"des fonctions particulières pour un type de message spécifique, ce code doit"
" parfois effectuer un travail spécifique au middleware. Par exemple, "
"considérez la fonction de publication spécifique au type, lors de "
"l'utilisation du \"fournisseur A\", la fonction devra appeler certaines des "
"|API| du \"fournisseur A\", mais lors de l'utilisation du \"fournisseur B\","
" elle devra appeler le \"fournisseur B\" l'|API|. Pour autoriser le code "
"spécifique au fournisseur du middleware, les fichiers ``.msg`` définis par "
"l'utilisateur peuvent entraîner la génération d'un code spécifique au "
"fournisseur. Ce code spécifique au fournisseur est toujours caché à "
"l'utilisateur via l'abstraction de prise en charge de type, qui est "
"similaire au fonctionnement du modèle \"Private Implementation\" (ou Pimpl)."

#: ../../source/Concepts/About-Internal-Interfaces.rst:70
msgid "Static Type Support with DDS"
msgstr "Prise en charge du type statique avec DDS"

#: ../../source/Concepts/About-Internal-Interfaces.rst:72
msgid ""
"For middleware vendors based on DDS, and specifically those which generate "
"code based on the OMG IDL files (``.idl`` files), the user defined "
"``rosidl`` files (``.msg`` files) are converted into equivalent OMG IDL "
"files (``.idl`` files). From these OMG IDL files, vendor specific code is "
"created and then used within the type specific functions which are "
"referenced by the type support for a given type. The above diagram shows "
"this on the left hand side, where the ``.msg`` files are consumed by the "
"``rosidl_dds`` package to produce ``.idl`` files, and then those ``.idl`` "
"files are given to language specific and DDS vendor specific type support "
"generation packages."
msgstr ""
"Pour les fournisseurs de middleware basés sur DDS, et plus particulièrement "
"ceux qui génèrent du code basé sur les fichiers OMG IDL (fichiers ``.idl``),"
" les fichiers ``rosidl`` définis par l'utilisateur (fichiers ``.msg``) sont "
"convertis en fichiers OMG IDL équivalents (fichiers ``.idl``). À partir de "
"ces fichiers OMG IDL, un code spécifique au fournisseur est créé puis "
"utilisé dans les fonctions spécifiques au type qui sont référencées par la "
"prise en charge du type pour un type donné. Le diagramme ci-dessus le montre"
" sur le côté gauche, où les fichiers ``.msg`` sont consommés par le package "
"``rosidl_dds`` pour produire des fichiers ``.idl``, puis ces fichiers "
"``.idl`` sont donnés aux packages de génération de prise en charge "
"spécifiques à la langue et au fournisseur DDS."

#: ../../source/Concepts/About-Internal-Interfaces.rst:76
msgid ""
"For example, consider the Fast DDS implementation, which has a package "
"called ``rosidl_typesupport_fastrtps_cpp``. This package is responsible for "
"generating code to handle things like converting a C++ message object into a"
" serialized octet buffer to be written over the network. This code, while "
"specific to Fast DDS, is still not exposed to the user because of the "
"abstraction in the type support code."
msgstr ""
"Par exemple, considérez l'implémentation Fast DDS, qui a un package appelé "
"``rosidl_typesupport_fastrtps_cpp``. Ce package est chargé de générer du "
"code pour gérer des choses comme la conversion d'un objet de message C++ en "
"un tampon d'octets sérialisé à écrire sur le réseau. Ce code, bien que "
"spécifique à Fast DDS, n'est toujours pas exposé à l'utilisateur en raison "
"de l'abstraction dans le code de prise en charge du type."

#: ../../source/Concepts/About-Internal-Interfaces.rst:81
msgid "Dynamic Type Support"
msgstr "Prise en charge des types dynamiques"

#: ../../source/Concepts/About-Internal-Interfaces.rst:83
msgid ""
"Another way to implement type support is to have generic functions for "
"things like publishing to a topic, rather than generating a version of the "
"function for each message type. In order to accomplish this, this generic "
"function needs some meta information about the message type being published,"
" things like a list of field names and types in the order in which they "
"appear in the message type. Then to publish a message, you call a generic "
"publish function and pass a message to be published along with a structure "
"which contains the necessary meta data about the message type. This is "
"referred to as \"dynamic\" type support, as opposed to \"static\" type "
"support which requires generated versions of a function for each type."
msgstr ""
"Une autre façon d'implémenter la prise en charge des types est d'avoir des "
"fonctions génériques pour des choses comme la publication dans un sujet, "
"plutôt que de générer une version de la fonction pour chaque type de "
"message. Pour ce faire, cette fonction générique a besoin de certaines méta-"
"informations sur le type de message publié, comme une liste de noms de "
"champs et de types dans l'ordre dans lequel ils apparaissent dans le type de"
" message. Ensuite, pour publier un message, vous appelez une fonction de "
"publication générique et transmettez un message à publier avec une structure"
" qui contient les métadonnées nécessaires sur le type de message. C'est ce "
"qu'on appelle la prise en charge de type \"dynamique\", par opposition à la "
"prise en charge de type \"statique\" qui nécessite des versions générées "
"d'une fonction pour chaque type."

#: ../../source/Concepts/About-Internal-Interfaces.rst:91
msgid "ros2 idl dynamic type support stack"
msgstr "pile de support de type dynamique ros2 idl"

#: ../../source/Concepts/About-Internal-Interfaces.rst:91
msgid ""
"Figure: flow chart of \"dynamic\" type support generation, from ``rosidl`` "
"files to user facing code."
msgstr ""
"Figure : organigramme de la génération de support de type \"dynamique\", des"
" fichiers ``rosidl`` au code utilisateur."

#: ../../source/Concepts/About-Internal-Interfaces.rst:93
msgid ""
"The above diagram shows the flow from user defined ``rosidl`` files to "
"generated user facing code. It is very similar to the diagram for static "
"type support, and differs only in how the type support is generated which is"
" represented by the left hand side of the diagram. In dynamic type support "
"the ``.msg`` files are converted directly into user facing code."
msgstr ""
"Le diagramme ci-dessus montre le flux depuis les fichiers ``rosidl`` définis"
" par l'utilisateur jusqu'au code utilisateur généré. Il est très similaire "
"au diagramme de prise en charge de type statique et ne diffère que par la "
"manière dont la prise en charge de type est générée, représentée par le côté"
" gauche du diagramme. Dans le support de type dynamique, les fichiers "
"``.msg`` sont convertis directement en code utilisateur."

#: ../../source/Concepts/About-Internal-Interfaces.rst:97
msgid ""
"This code is also middleware agnostic, because it only contains meta "
"information about the messages. The function to actually do the work, e.g. "
"publishing to a topic, is generic to the message type and will make any "
"necessary calls to the middleware specific |APIs|. Note that rather than dds"
" vendor specific packages providing the type support code, which is the case"
" in static type support, this method has middleware agnostic package for "
"each language, e.g. ``rosidl_typesupport_introspection_c`` and "
"``rosidl_typesupport_introspection_cpp``. The ``introspection`` part of the "
"package name refers to the ability to introspect any message instance with "
"the generated meta data for the message type. This is the fundamental "
"capability that allows for generic implementations of functions like "
"\"publish to a topic\"."
msgstr ""
"Ce code est également indépendant du middleware, car il ne contient que des "
"méta-informations sur les messages. La fonction pour effectuer réellement le"
" travail, par ex. la publication dans un sujet, est générique pour le type "
"de message et effectuera tous les appels nécessaires aux |API| spécifiques "
"au middleware. Notez que plutôt que des packages spécifiques au fournisseur "
"dds fournissant le code de prise en charge de type, ce qui est le cas dans "
"la prise en charge de type statique, cette méthode a un package indépendant "
"du middleware pour chaque langue, par ex. "
"``rosidl_typesupport_introspection_c`` et "
"``rosidl_typesupport_introspection_cpp``. La partie ``introspection`` du nom"
" du package fait référence à la possibilité d'introspecter n'importe quelle "
"instance de message avec les métadonnées générées pour le type de message. "
"Il s'agit de la capacité fondamentale qui permet des implémentations "
"génériques de fonctions telles que \"publier dans un sujet\"."

#: ../../source/Concepts/About-Internal-Interfaces.rst:103
msgid ""
"This approach has the advantage that all generated code is middleware "
"agnostic, which means it can be reused for different middleware "
"implementations, so long as they allow for dynamic type support. It also "
"results in less generated code, which reduces compile time and code size."
msgstr ""
"Cette approche présente l'avantage que tout le code généré est indépendant "
"du middleware, ce qui signifie qu'il peut être réutilisé pour différentes "
"implémentations de middleware, tant qu'elles permettent la prise en charge "
"de type dynamique. Il en résulte également moins de code généré, ce qui "
"réduit le temps de compilation et la taille du code."

#: ../../source/Concepts/About-Internal-Interfaces.rst:106
msgid ""
"However, dynamic type support requires that the underlying middleware "
"support a similar form of dynamic type support. In the case of DDS the DDS-"
"XTypes standard allows for publishing of messages using meta information "
"rather than generated code. DDS-XTypes, or something like it, is required in"
" the underlying middleware in order to support dynamic type support. Also, "
"this approach to type support is normally slower than the static type "
"support alternative. The type specific generated code in static type support"
" can be written to be more efficient as it does not need to iterate over the"
" message type's meta data to perform things like serialization."
msgstr ""
"Cependant, la prise en charge de type dynamique nécessite que le middleware "
"sous-jacent prenne en charge une forme similaire de prise en charge de type "
"dynamique. Dans le cas de DDS, la norme DDS-XTypes permet la publication de "
"messages à l'aide de méta-informations plutôt que de code généré. DDS-"
"XTypes, ou quelque chose de similaire, est requis dans le middleware sous-"
"jacent afin de prendre en charge la prise en charge de type dynamique. De "
"plus, cette approche de la prise en charge des types est normalement plus "
"lente que l'alternative de prise en charge des types statiques. Le code "
"généré spécifique au type dans la prise en charge du type statique peut être"
" écrit pour être plus efficace car il n'a pas besoin d'itérer sur les "
"métadonnées du type de message pour effectuer des opérations telles que la "
"sérialisation."

#: ../../source/Concepts/About-Internal-Interfaces.rst:113
msgid "The ``rcl`` Repository"
msgstr "Le référentiel ``rcl``"

#: ../../source/Concepts/About-Internal-Interfaces.rst:115
msgid ""
"The ROS Client Library interface (``rcl`` |API|) can be used by |client "
"libraries| (e.g. ``rclc``, ``rclcpp``, ``rclpy``, etc.) in order to avoid "
"duplicating logic and features. By reusing the ``rcl`` |API|, client "
"libraries can be smaller and more consistent with each other. Some parts of "
"the client library are intentionally left out of the ``rcl`` |API| because "
"the language idiomatic method should be used to implement those parts of the"
" system. A good example of this is the execution model, which ``rcl`` does "
"not address at all. Instead the client library should provide a language "
"idiomatic solution like ``pthreads`` in C, ``std::thread`` in C++11, and "
"``threading.Thread`` in Python. Generally the ``rcl`` interface provides "
"functions that are not specific to a language pattern and are not specific "
"to a particular message type."
msgstr ""
"L'interface de la bibliothèque cliente ROS (``rcl`` |API|) peut être "
"utilisée par les |bibliothèques clientes| (par exemple ``rclc``, ``rclcpp``,"
" ``rclpy``, etc.) afin d'éviter la duplication de la logique et des "
"fonctionnalités. En réutilisant l'|API| ``rcl``, les bibliothèques clientes "
"peuvent être plus petites et plus cohérentes les unes avec les autres. "
"Certaines parties de la bibliothèque cliente sont intentionnellement "
"laissées de côté par ``rcl`` |API| parce que la méthode idiomatique du "
"langage doit être utilisée pour mettre en œuvre ces parties du système. Un "
"bon exemple de ceci est le modèle d'exécution, que ``rcl`` ne traite pas du "
"tout. Au lieu de cela, la bibliothèque cliente devrait fournir une solution "
"idiomatique de langage comme ``pthreads`` en C, ``std::thread`` en C++11 et "
"``threading.Thread`` en Python. Généralement, l'interface ``rcl`` fournit "
"des fonctions qui ne sont pas spécifiques à un modèle de langage et ne sont "
"pas spécifiques à un type de message particulier."

#: ../../source/Concepts/About-Internal-Interfaces.rst:122
msgid ""
"The ``rcl`` |API| is located in the `ros2/rcl "
"<https://github.com/ros2/rcl>`_ repository on |GitHub|_ and contains the "
"interface as C headers. The ``rcl`` C implementation is provided by the "
"``rcl`` |package| in the same repository. This implementation avoids direct "
"contact with the middleware by instead using the ``rmw`` and ``rosidl`` "
"|APIs|."
msgstr ""
"L'|API| ``rcl`` est situé dans le référentiel `ros2/rcl "
"<https://github.com/ros2/rcl>`_ sur |GitHub|_ et contient l'interface sous "
"forme d'en-têtes C. L'implémentation ``rcl`` C est fournie par le ``rcl`` "
"|package| dans le même référentiel. Cette implémentation évite le contact "
"direct avec le middleware en utilisant à la place les |APIs| ``rmw`` et "
"``rosidl``."

#: ../../source/Concepts/About-Internal-Interfaces.rst:126
msgid ""
"For a complete definition of the ``rcl`` |API|, see its `API documentation "
"<http://docs.ros2.org/foxy/api/rcl/index.html>`_:"
msgstr ""
"Pour une définition complète de ``rcl`` |API|, consultez sa `documentation "
"API <http://docs.ros2.org/foxy/api/rcl/index.html>`_ :"

#: ../../source/Concepts/About-Internal-Interfaces.rst:129
msgid "The ``rmw`` Repository"
msgstr "Le référentiel ``rmw``"

#: ../../source/Concepts/About-Internal-Interfaces.rst:131
msgid ""
"The ROS middleware interface (``rmw`` |API|) is the minimal set of primitive"
" middleware capabilities needed to build ROS on top. Providers of different "
"middleware implementations must implement this interface in order to support"
" the entire ROS stack on top. Currently all of the middleware "
"implementations are for different DDS vendors."
msgstr ""
"L'interface middleware ROS (``rmw`` |API|) est l'ensemble minimal de "
"fonctionnalités middleware primitives nécessaires pour construire ROS par "
"dessus. Les fournisseurs de différentes implémentations de middleware "
"doivent implémenter cette interface afin de prendre en charge l'ensemble de "
"la pile ROS. Actuellement, toutes les implémentations de middleware sont "
"destinées à différents fournisseurs de DDS."

#: ../../source/Concepts/About-Internal-Interfaces.rst:135
msgid ""
"The ``rmw`` |API| is located in the `ros2/rmw "
"<https://github.com/ros2/rmw>`_ repository. The ``rmw`` |package| contains "
"the C headers which define the interface, the implementation of which is "
"provided by the various |packages| of rmw implementations for different DDS "
"vendors."
msgstr ""
"L'|API| ``rmw`` se trouve dans le dépôt `ros2/rmw "
"<https://github.com/ros2/rmw>`_. Le |paquet| ``rmw`` contient les en-têtes C"
" qui définissent l'interface dont l'implémentation est assurée par les "
"différents |packages| d'implémentations rmw pour différents fournisseurs de "
"DDS."

#: ../../source/Concepts/About-Internal-Interfaces.rst:138
msgid "For a definition of the ``rmw`` |API|, see the |API| docs:"
msgstr "Pour une définition de l'|API| ``rmw``, voir l'|API| documents :"

#: ../../source/Concepts/About-Internal-Interfaces.rst:140
msgid "`api/rmw/index.html <http://docs.ros2.org/foxy/api/rmw/index.html>`_"
msgstr "`api/rmw/index.html <http://docs.ros2.org/foxy/api/rmw/index.html>`_"

#: ../../source/Concepts/About-Internal-Interfaces.rst:144
msgid "The ``rosidl`` Repository"
msgstr "Le référentiel ``rosidl``"

#: ../../source/Concepts/About-Internal-Interfaces.rst:146
msgid ""
"The ``rosidl`` |API| consists of a few message related static functions and "
"types along with a definition of what code should be generated by messages "
"in different languages. The generated message code specified in the |API| "
"will be language specific, but may or may not reuse generated code for other"
" languages. The generated message code specified in the |API| contains "
"things like the message data structure, functions for construction, "
"destruction, etc. The |API| will also implement a way to get the type "
"support structure for the message type, which is used when publishing or "
"subscribing to a topic of that message type."
msgstr ""
"L'|API| ``rosidl`` se compose de quelques fonctions et types statiques liés "
"aux messages, ainsi que d'une définition du code qui doit être généré par "
"les messages dans différentes langues. Le code de message généré spécifié "
"dans l'|API| sera spécifique à la langue, mais peut ou non réutiliser le "
"code généré pour d'autres langues. Le code de message généré spécifié dans "
"l'|API| contient des éléments tels que la structure des données du message, "
"les fonctions de construction, de destruction, etc. L'|API| implémentera "
"également un moyen d'obtenir la structure de support de type pour le type de"
" message, qui est utilisée lors de la publication ou de l'abonnement à un "
"sujet de ce type de message."

#: ../../source/Concepts/About-Internal-Interfaces.rst:151
msgid ""
"There are several repositories that play a role in the ``rosidl`` |API| and "
"implementation."
msgstr ""
"Il existe plusieurs dépôts qui jouent un rôle dans le ``rosidl`` |API| et la"
" mise en œuvre."

#: ../../source/Concepts/About-Internal-Interfaces.rst:153
msgid ""
"The ``rosidl`` repository, located on |GitHub|_ at `ros2/rosidl "
"<https://github.com/ros2/rosidl>`_, defines the message IDL syntax, i.e. "
"syntax of ``.msg`` files, ``.srv`` files, etc., and contains |packages| for "
"parsing the files, for providing CMake infrastructure to generate code from "
"the messages, for generating implementation agnostic code (headers and "
"source files), and for establishing the default set of generators. The "
"repository contains these |packages|:"
msgstr ""
"Le référentiel ``rosidl``, situé sur |GitHub|_ à `ros2/rosidl "
"<https://github.com/ros2/rosidl>`_, définit la syntaxe IDL du message, "
"c'est-à-dire la syntaxe de ``.msg`` fichiers, fichiers ``.srv``, etc., et "
"contient des |packages| pour analyser les fichiers, pour fournir une "
"infrastructure CMake pour générer du code à partir des messages, pour "
"générer du code indépendant de l'implémentation (en-têtes et fichiers "
"source) et pour établir l'ensemble de générateurs par défaut. Le dépôt "
"contient ces |packages| :"

#: ../../source/Concepts/About-Internal-Interfaces.rst:156
msgid ""
"``rosidl_cmake``: provides CMake functions and CMake Modules for generating "
"code from ``rosidl`` files, e.g. ``.msg`` files, ``.srv`` files, etc."
msgstr ""
"``rosidl_cmake`` : fournit des fonctions CMake et des modules CMake pour "
"générer du code à partir de fichiers ``rosidl``, par ex. Fichiers ``.msg``, "
"fichiers ``.srv``, etc."

#: ../../source/Concepts/About-Internal-Interfaces.rst:157
msgid ""
"``rosidl_default_generators``: defines the list of default generators which "
"ensures that they are installed as dependencies, but other injected "
"generators can also be used."
msgstr ""
"``rosidl_default_generators`` : définit la liste des générateurs par défaut "
"qui garantit qu'ils sont installés en tant que dépendances, mais d'autres "
"générateurs injectés peuvent également être utilisés."

#: ../../source/Concepts/About-Internal-Interfaces.rst:158
msgid ""
"``rosidl_generator_c``: provides tools to generate C header files (``.h``) "
"for ``rosidl`` files."
msgstr ""
"``rosidl_generator_c`` : fournit des outils pour générer des fichiers d'en-"
"tête C (``.h``) pour les fichiers ``rosidl``."

#: ../../source/Concepts/About-Internal-Interfaces.rst:159
msgid ""
"``rosidl_generator_cpp``: provides tools to generate C++ header files "
"(``.hpp``) for ``rosidl`` files."
msgstr ""
"``rosidl_generator_cpp`` : fournit des outils pour générer des fichiers "
"d'en-tête C++ (``.hpp``) pour les fichiers ``rosidl``."

#: ../../source/Concepts/About-Internal-Interfaces.rst:160
msgid ""
"``rosidl_generator_py``: provides tools to generate Python modules for "
"``rosidl`` files."
msgstr ""
"``rosidl_generator_py`` : fournit des outils pour générer des modules Python"
" pour les fichiers ``rosidl``."

#: ../../source/Concepts/About-Internal-Interfaces.rst:161
msgid "``rosidl_parser``: provides Python |API| for parsing ``rosidl`` files."
msgstr ""
"``rosidl_parser`` : fournit Python |API| pour analyser les fichiers "
"``rosidl``."

#: ../../source/Concepts/About-Internal-Interfaces.rst:163
msgid ""
"Generators for other languages, e.g. ``rosidl_generator_java``, are hosted "
"externally (in different repositories) but would use the same mechanism that"
" the above generators use to \"register\" themselves as a ``rosidl`` "
"generator."
msgstr ""
"Générateurs pour d'autres langues, par ex. ``rosidl_generator_java``, sont "
"hébergés en externe (dans différents référentiels) mais utiliseraient le "
"même mécanisme que les générateurs ci-dessus utilisent pour "
"\"s'enregistrer\" en tant que générateur ``rosidl``."

#: ../../source/Concepts/About-Internal-Interfaces.rst:165
msgid ""
"In addition to the aforementioned |packages| for parsing and generating "
"headers for the ``rosidl`` files, the ``rosidl`` repository also contains "
"|packages| concerned with \"type support\" for the message types defined in "
"the files. Type support refers to the ability to interpret and manipulate "
"the information represented by ROS message instances of particular types "
"(publishing the messages, for example). Type support can either be provided "
"by code that is generated at compile time or it can be done programmatically"
" based on the contents of the ``rosidl`` file, e.g. the ``.msg`` or ``.srv``"
" file, and the data received, by introspecting the data. In the case of the "
"latter, where type support is done through runtime interpretation of the "
"messages, the message code generated by ROS 2 can be agnostic to the rmw "
"implementation. The packages that provide this type support through "
"introspection of the data are:"
msgstr ""
"En plus des |forfaits| mentionnés ci-dessus pour analyser et générer des en-"
"têtes pour les fichiers ``rosidl``, le référentiel ``rosidl`` contient "
"également des |packages| concerné par le \"support de type\" pour les types "
"de messages définis dans les fichiers. La prise en charge des types fait "
"référence à la capacité d'interpréter et de manipuler les informations "
"représentées par des instances de messages ROS de types particuliers "
"(publier les messages, par exemple). La prise en charge des types peut être "
"fournie par le code généré au moment de la compilation ou par programmation "
"en fonction du contenu du fichier ``rosidl``, par ex. le fichier ``.msg`` ou"
" ``.srv``, et les données reçues, en introspectant les données. Dans ce "
"dernier cas, où la prise en charge du type se fait par l'interprétation des "
"messages à l'exécution, le code de message généré par ROS 2 peut être "
"indépendant de l'implémentation rmw. Les packages qui fournissent ce type de"
" support via l'introspection des données sont :"

#: ../../source/Concepts/About-Internal-Interfaces.rst:171
msgid ""
"``rosidl_typesupport_introspection_c``: provides tools for generating C code"
" for supporting ``rosidl`` message data types."
msgstr ""
"``rosidl_typesupport_introspection_c`` : fournit des outils pour générer du "
"code C pour prendre en charge les types de données de message ``rosidl``."

#: ../../source/Concepts/About-Internal-Interfaces.rst:172
msgid ""
"``rosidl_typesupport_introspection_cpp``: provides tools for generating C++ "
"code for supporting ``rosidl`` message data types."
msgstr ""
"``rosidl_typesupport_introspection_cpp`` : fournit des outils pour générer "
"du code C++ pour prendre en charge les types de données de message "
"``rosidl``."

#: ../../source/Concepts/About-Internal-Interfaces.rst:174
msgid ""
"In the case where type support is to be generated at compile time instead of"
" being generated programmatically, a package specific to the rmw "
"implementation will need to be used. This is because typically a particular "
"rmw implementation will require data to be stored and manipulated in a "
"manner that is specific to the DDS vendor in order for the DDS "
"implementation to make use of it. See the :ref:`Type Specific Interfaces` "
"section above for more details."
msgstr ""
"Dans le cas où le support de type doit être généré au moment de la "
"compilation au lieu d'être généré par programme, un package spécifique à "
"l'implémentation rmw devra être utilisé. En effet, une implémentation rmw "
"particulière nécessitera généralement que les données soient stockées et "
"manipulées d'une manière spécifique au fournisseur DDS afin que "
"l'implémentation DDS puisse les utiliser. Voir la section :ref:`Type "
"Specific Interfaces` ci-dessus pour plus de détails."

#: ../../source/Concepts/About-Internal-Interfaces.rst:178
msgid ""
"For more information on what exactly is in the ``rosidl`` |API| (static and "
"generated) see this page:"
msgstr ""
"Pour plus d'informations sur le contenu exact de l'|API| ``rosidl`` "
"(statique et généré) voir cette page :"

#: ../../source/Concepts/About-Internal-Interfaces.rst:182
msgid "TODO: link to definition of ``rosidl`` |APIs|"
msgstr "TODO : lien vers la définition de ``rosidl`` |APIs|"

#: ../../source/Concepts/About-Internal-Interfaces.rst:185
msgid "The ``rcutils`` Repository"
msgstr "Le référentiel ``rutils``"

#: ../../source/Concepts/About-Internal-Interfaces.rst:187
msgid ""
"ROS 2 C Utilities (``rcutils``) is a C |API| composed of macros, functions, "
"and data structures used throughout the ROS 2 codebase. These are mainly "
"used for error handling, commandline argument parsing, and logging which are"
" not specific to the client or middleware layers and can be shared by both."
msgstr ""
"ROS 2 C Utilities (``rcutils``) est un C |API| composé de macros, de "
"fonctions et de structures de données utilisées dans la base de code ROS 2. "
"Ceux-ci sont principalement utilisés pour la gestion des erreurs, l'analyse "
"des arguments de ligne de commande et la journalisation qui ne sont pas "
"spécifiques aux couches client ou middleware et peuvent être partagées par "
"les deux."

#: ../../source/Concepts/About-Internal-Interfaces.rst:190
msgid ""
"The ``rcutils`` |API| and implementation are located in the `ros2/rcutils "
"<https://github.com/ros2/rcutils>`_ repository on |GitHub|_ which contains "
"the interface as C headers."
msgstr ""
"Les ``rutils`` |API| et l'implémentation se trouvent dans le référentiel "
"`ros2/rcutils <https://github.com/ros2/rcutils>`_ sur |GitHub|_ qui contient"
" l'interface sous forme d'en-têtes C."

#: ../../source/Concepts/About-Internal-Interfaces.rst:192
msgid ""
"For a complete definition of the ``rcutils`` |API|, see `its API "
"documentation <http://docs.ros2.org/foxy/api/rcutils/index.html>`_"
msgstr ""
"Pour une définition complète de ``rcutils`` |API|, consultez `sa "
"documentation API <http://docs.ros2.org/foxy/api/rcutils/index.html>`_"

#: ../../source/Concepts/About-Logging.rst:6
msgid "About logging and logger configuration"
msgstr ""
"À propos de la journalisation et de la configuration de l'enregistreur"

#: ../../source/Concepts/About-Logging.rst:16
msgid ""
"The logging subsystem in ROS 2 aims to deliver logging messages to a variety"
" of targets, including:"
msgstr ""
"Le sous-système de journalisation dans ROS 2 vise à fournir des messages de "
"journalisation à diverses cibles, notamment :"

#: ../../source/Concepts/About-Logging.rst:18
msgid "To the console (if one is attached)"
msgstr "À la console (le cas échéant)"

#: ../../source/Concepts/About-Logging.rst:19
msgid "To log files on disk (if local storage is available)"
msgstr ""
"Pour enregistrer des fichiers sur le disque (si le stockage local est "
"disponible)"

#: ../../source/Concepts/About-Logging.rst:20
msgid "To the ``/rosout`` topic on the ROS 2 network"
msgstr "Vers le sujet ``/rosout`` sur le réseau ROS 2"

#: ../../source/Concepts/About-Logging.rst:22
msgid ""
"By default, log messages in ROS 2 nodes will go out to the console (on "
"stderr), to log files on disk, and to the ``/rosout`` topic on the ROS 2 "
"network. All of the targets can be individually enabled or disabled on a "
"per-node basis."
msgstr ""
"Par défaut, les messages de journalisation des nœuds ROS 2 seront envoyés à "
"la console (sur stderr), aux fichiers de journalisation sur le disque et à "
"la rubrique ``/rosout`` sur le réseau ROS 2. Toutes les cibles peuvent être "
"activées ou désactivées individuellement sur une base par nœud."

#: ../../source/Concepts/About-Logging.rst:25
msgid ""
"The rest of this document will go over some of the ideas behind the logging "
"subsystem."
msgstr ""
"Le reste de ce document passera en revue certaines des idées derrière le "
"sous-système de journalisation."

#: ../../source/Concepts/About-Logging.rst:28
msgid "Severity level"
msgstr "Degré de gravité"

#: ../../source/Concepts/About-Logging.rst:30
msgid ""
"Log messages have a severity level associated with them: ``DEBUG``, "
"``INFO``, ``WARN``, ``ERROR`` or ``FATAL``, in ascending order."
msgstr ""
"Les messages de log ont un niveau de sévérité qui leur est associé : "
"``DEBUG``, ``INFO``, ``WARN``, ``ERROR`` ou ``FATAL``, dans l'ordre "
"croissant."

#: ../../source/Concepts/About-Logging.rst:32
msgid ""
"A logger will only process log messages with severity at or higher than a "
"specified level chosen for the logger."
msgstr ""
"Un enregistreur traitera uniquement les messages de journal dont la gravité "
"est égale ou supérieure à un niveau spécifié choisi pour l'enregistreur."

#: ../../source/Concepts/About-Logging.rst:34
msgid ""
"Each node has a logger associated with it that automatically includes the "
"node's name and namespace. If the node's name is externally remapped to "
"something other than what is defined in the source code, it will be "
"reflected in the logger name. Non-node loggers can also be created that use "
"a specific name."
msgstr ""
"Chaque nœud est associé à un enregistreur qui inclut automatiquement le nom "
"et l'espace de noms du nœud. Si le nom du nœud est remappé en externe sur "
"autre chose que ce qui est défini dans le code source, il sera reflété dans "
"le nom de l'enregistreur. Des enregistreurs non-nœuds peuvent également être"
" créés en utilisant un nom spécifique."

#: ../../source/Concepts/About-Logging.rst:38
msgid ""
"Logger names represent a hierarchy. If the level of a logger named "
"\"abc.def\" is unset, it will defer to the level of its parent named "
"\"abc\", and if that level is also unset, the default logger level will be "
"used. When the level of logger \"abc\" is changed, all of its descendants "
"(e.g. \"abc.def\", \"abc.ghi.jkl\") will have their level impacted unless "
"their level has been explicitly set."
msgstr ""
"Les noms des enregistreurs représentent une hiérarchie. Si le niveau d'un "
"enregistreur nommé \"abc.def\" n'est pas défini, il s'en remettra au niveau "
"de son parent nommé \"abc\", et si ce niveau est également non défini, le "
"niveau d'enregistrement par défaut sera utilisé. Lorsque le niveau de "
"l'enregistreur \"abc\" est modifié, tous ses descendants (par exemple "
"\"abc.def\", \"abc.ghi.jkl\") verront leur niveau impacté à moins que leur "
"niveau n'ait été explicitement défini."

#: ../../source/Concepts/About-Logging.rst:43
msgid "APIs"
msgstr "Apis"

#: ../../source/Concepts/About-Logging.rst:45
msgid ""
"These are the APIs that end users of the ROS 2 logging infrastructure should"
" use, split up by client library."
msgstr ""
"Ce sont les API que les utilisateurs finaux de l'infrastructure de "
"journalisation ROS 2 doivent utiliser, réparties par bibliothèque cliente."

#: ../../source/Concepts/About-Logging.rst:51
msgid ""
"``RCLCPP_{DEBUG,INFO,WARN,ERROR,FATAL}`` - output the given printf-style "
"message every time this line is hit"
msgstr ""
"``RCLCPP_{DEBUG,INFO,WARN,ERROR,FATAL}`` - affiche le message de style "
"printf donné chaque fois que cette ligne est atteinte"

#: ../../source/Concepts/About-Logging.rst:52
msgid ""
"``RCLCPP_{DEBUG,INFO,WARN,ERROR,FATAL}_ONCE`` - output the given printf-"
"style message only the first time this line is hit"
msgstr ""
"``RCLCPP_{DEBUG,INFO,WARN,ERROR,FATAL}_ONCE`` - affiche le message de style "
"printf donné uniquement la première fois que cette ligne est atteinte"

#: ../../source/Concepts/About-Logging.rst:53
msgid ""
"``RCLCPP_{DEBUG,INFO,WARN,ERROR,FATAL}_EXPRESSION`` - output the given "
"printf-style message only if the given expression is true"
msgstr ""
"``RCLCPP_{DEBUG,INFO,WARN,ERROR,FATAL}_EXPRESSION`` - affiche le message de "
"style printf donné uniquement si l'expression donnée est vraie"

#: ../../source/Concepts/About-Logging.rst:54
msgid ""
"``RCLCPP_{DEBUG,INFO,WARN,ERROR,FATAL}_FUNCTION`` - output the given printf-"
"style message only if the given function returns true"
msgstr ""
"``RCLCPP_{DEBUG,INFO,WARN,ERROR,FATAL}_FUNCTION`` - affiche le message de "
"style printf donné uniquement si la fonction donnée renvoie true"

#: ../../source/Concepts/About-Logging.rst:55
msgid ""
"``RCLCPP_{DEBUG,INFO,WARN,ERROR,FATAL}_SKIPFIRST`` - output the given "
"printf-style message all but the first time this line is hit"
msgstr ""
"``RCLCPP_{DEBUG,INFO,WARN,ERROR,FATAL}_SKIPFIRST`` - produit le message de "
"style printf donné tous sauf la première fois que cette ligne est atteinte"

#: ../../source/Concepts/About-Logging.rst:56
msgid ""
"``RCLCPP_{DEBUG,INFO,WARN,ERROR,FATAL}_THROTTLE`` - output the given printf-"
"style message no more than the given rate in integer milliseconds"
msgstr ""
"``RCLCPP_{DEBUG,INFO,WARN,ERROR,FATAL}_THROTTLE`` - produit le message de "
"style printf donné pas plus que le taux donné en millisecondes entières"

#: ../../source/Concepts/About-Logging.rst:57
msgid ""
"``RCLCPP_{DEBUG,INFO,WARN,ERROR,FATAL}_SKIPFIRST_THROTTLE`` - output the "
"given printf-style message no more than the given rate in integer "
"milliseconds, but skip the first"
msgstr ""
"``RCLCPP_{DEBUG,INFO,WARN,ERROR,FATAL}_SKIPFIRST_THROTTLE`` - produit le "
"message de style printf donné pas plus que le taux donné en millisecondes "
"entières, mais ignore le premier"

#: ../../source/Concepts/About-Logging.rst:58
msgid ""
"``RCLCPP_{DEBUG,INFO,WARN,ERROR,FATAL}_STREAM`` - output the given C++ "
"stream-style message every time this line is hit"
msgstr ""
"``RCLCPP_{DEBUG,INFO,WARN,ERROR,FATAL}_STREAM`` - affiche le message de "
"style flux C++ donné chaque fois que cette ligne est atteinte"

#: ../../source/Concepts/About-Logging.rst:59
msgid ""
"``RCLCPP_{DEBUG,INFO,WARN,ERROR,FATAL}_STREAM_ONCE`` - output the given C++ "
"stream-style message only the first time this line is hit"
msgstr ""
"``RCLCPP_{DEBUG,INFO,WARN,ERROR,FATAL}_STREAM_ONCE`` - affiche le message de"
" style flux C++ donné uniquement la première fois que cette ligne est "
"atteinte"

#: ../../source/Concepts/About-Logging.rst:60
msgid ""
"``RCLCPP_{DEBUG,INFO,WARN,ERROR,FATAL}_STREAM_EXPRESSION`` - output the "
"given C++ stream-style message only if the given expression is true"
msgstr ""
"``RCLCPP_{DEBUG,INFO,WARN,ERROR,FATAL}_STREAM_EXPRESSION`` - affiche le "
"message de style flux C++ donné uniquement si l'expression donnée est vraie"

#: ../../source/Concepts/About-Logging.rst:61
msgid ""
"``RCLCPP_{DEBUG,INFO,WARN,ERROR,FATAL}_STREAM_FUNCTION`` - output the given "
"C++ stream-style message only if the given function returns true"
msgstr ""
"``RCLCPP_{DEBUG,INFO,WARN,ERROR,FATAL}_STREAM_FUNCTION`` - affiche le "
"message de style flux C++ donné uniquement si la fonction donnée renvoie "
"true"

#: ../../source/Concepts/About-Logging.rst:62
msgid ""
"``RCLCPP_{DEBUG,INFO,WARN,ERROR,FATAL}_STREAM_SKIPFIRST`` - output the given"
" C++ stream-style message all but the first time this line is hit"
msgstr ""
"``RCLCPP_{DEBUG,INFO,WARN,ERROR,FATAL}_STREAM_SKIPFIRST`` - produit le "
"message de style flux C++ donné tous sauf la première fois que cette ligne "
"est atteinte"

#: ../../source/Concepts/About-Logging.rst:63
msgid ""
"``RCLCPP_{DEBUG,INFO,WARN,ERROR,FATAL}_STREAM_THROTTLE`` - output the given "
"C++ stream-style message no more than the given rate in integer milliseconds"
msgstr ""
"``RCLCPP_{DEBUG,INFO,WARN,ERROR,FATAL}_STREAM_THROTTLE`` - produit le "
"message de style flux C++ donné pas plus que le taux donné en millisecondes "
"entières"

#: ../../source/Concepts/About-Logging.rst:64
msgid ""
"``RCLCPP_{DEBUG,INFO,WARN,ERROR,FATAL}_STREAM_SKIPFIRST_THROTTLE`` - output "
"the given C++ stream-style message no more than the given rate in integer "
"milliseconds, but skip the first"
msgstr ""
"``RCLCPP_{DEBUG,INFO,WARN,ERROR,FATAL}_STREAM_SKIPFIRST_THROTTLE`` - produit"
" le message de style flux C++ donné pas plus que le taux donné en "
"millisecondes entières, mais ignore le premier"

#: ../../source/Concepts/About-Logging.rst:66
msgid ""
"Each of the above APIs takes an ``rclcpp::Logger`` object as the first "
"argument. This can be pulled from the node API by calling "
"``node->get_logger()`` (recommended), or by constructing a stand-alone "
"``rclcpp::Logger`` object."
msgstr ""
"Chacune des API ci-dessus prend un objet ``rclcpp::Logger`` comme premier "
"argument. Cela peut être extrait de l'API du nœud en appelant "
"``node->get_logger()`` (recommandé), ou en construisant un objet autonome "
"``rclcpp::Logger``."

#: ../../source/Concepts/About-Logging.rst:69
msgid ""
"``rcutils_logging_set_logger_level`` - Set the logging level for a "
"particular logger name to the given severity level"
msgstr ""
"``rutils_logging_set_logger_level`` - Définit le niveau de journalisation "
"pour un nom de journalisation particulier au niveau de gravité donné"

#: ../../source/Concepts/About-Logging.rst:70
msgid ""
"``rcutils_logging_get_logger_effective_level`` - Given a logger name, return"
" the logger level (which may be unset)"
msgstr ""
"``rutils_logging_get_logger_effective_level`` - Étant donné un nom "
"d'enregistreur, renvoie le niveau de l'enregistreur (qui peut être "
"désactivé)"

#: ../../source/Concepts/About-Logging.rst:74
msgid ""
"``logger.{debug,info,warning,error,fatal}`` - output the given Python string"
" to the logging infrastructure.  The calls accept the following keyword args"
" to control behavior:"
msgstr ""
"``logger.{debug,info,warning,error,fatal}`` - envoie la chaîne Python donnée"
" à l'infrastructure de journalisation. Les appels acceptent les arguments de"
" mot clé suivants pour contrôler le comportement :"

#: ../../source/Concepts/About-Logging.rst:76
msgid ""
"``throttle_duration_sec`` - if not None, the duration of the throttle "
"interval in floating-point seconds"
msgstr ""
"``throttle_duration_sec`` - si ce n'est pas None, la durée de l'intervalle "
"de gaz en secondes à virgule flottante"

#: ../../source/Concepts/About-Logging.rst:77
msgid ""
"``skip_first`` - if True, output the message all but the first time this "
"line is hit"
msgstr ""
"``skip_first`` - si True, affiche le message tous sauf la première fois que "
"cette ligne est atteinte"

#: ../../source/Concepts/About-Logging.rst:78
msgid ""
"``once`` - if True, only output the message the first time this line is hit"
msgstr ""
"``une fois`` - si Vrai, n'affiche le message que la première fois que cette "
"ligne est atteinte"

#: ../../source/Concepts/About-Logging.rst:80
msgid ""
"``rclpy.logging.set_logger_level`` - Set the logging level for a particular "
"logger name to the given severity level"
msgstr ""
"``rclpy.logging.set_logger_level`` - Définit le niveau de journalisation "
"pour un nom d'enregistreur particulier au niveau de gravité donné"

#: ../../source/Concepts/About-Logging.rst:81
msgid ""
"``rclpy.logging.get_logger_effective_level`` - Given a logger name, return "
"the logger level (which may be unset)"
msgstr ""
"``rclpy.logging.get_logger_effective_level`` - Étant donné un nom "
"d'enregistreur, renvoie le niveau d'enregistreur (qui peut être désactivé)"

#: ../../source/Concepts/About-Logging.rst:84
msgid "Configuration"
msgstr "Configuration"

#: ../../source/Concepts/About-Logging.rst:86
msgid ""
"Since ``rclcpp`` and ``rclpy`` use the same underlying logging "
"infrastructure, the configuration options are the same."
msgstr ""
"Étant donné que ``rclcpp`` et ``rclpy`` utilisent la même infrastructure de "
"journalisation sous-jacente, les options de configuration sont les mêmes."

#: ../../source/Concepts/About-Logging.rst:89
msgid "Environment variables"
msgstr "Variables d'environnement"

#: ../../source/Concepts/About-Logging.rst:91
msgid ""
"The following environment variables control some aspects of the ROS 2 "
"loggers. For each of the environment settings, note that this is a process-"
"wide setting, so it applies to all nodes in that process."
msgstr ""
"Les variables d'environnement suivantes contrôlent certains aspects des "
"enregistreurs ROS 2. Pour chacun des paramètres d'environnement, notez qu'il"
" s'agit d'un paramètre à l'échelle du processus, il s'applique donc à tous "
"les nœuds de ce processus."

#: ../../source/Concepts/About-Logging.rst:94
msgid ""
"``ROS_LOG_DIR`` - Control the logging directory that is used for writing "
"logging messages to disk (if that is enabled).  If non-empty, use the exact "
"directory as specified in this variable.  If empty, use the contents of the "
"``ROS_HOME`` environment variable to construct a path of the form "
"``$ROS_HOME/.log``.  In all cases, the ``~`` character is expanded to the "
"user's HOME directory."
msgstr ""
"``ROS_LOG_DIR`` - Contrôle le répertoire de journalisation utilisé pour "
"écrire les messages de journalisation sur le disque (s'il est activé). S'il "
"n'est pas vide, utilisez le répertoire exact spécifié dans cette variable. "
"Si vide, utilisez le contenu de la variable d'environnement ``ROS_HOME`` "
"pour construire un chemin de la forme ``$ROS_HOME/.log``. Dans tous les cas,"
" le caractère ``~`` est étendu au répertoire HOME de l'utilisateur."

#: ../../source/Concepts/About-Logging.rst:95
msgid ""
"``ROS_HOME`` - Control the home directory that is used for various ROS "
"files, including logging and config files.  In the context of logging, this "
"variable is used to construct a path to a directory for log files.  If non-"
"empty, use the contents of this variable for the ROS_HOME path.  In all "
"cases, the ``~`` character is expanded to the users's HOME directory."
msgstr ""
"``ROS_HOME`` - Contrôle le répertoire personnel utilisé pour divers fichiers"
" ROS, y compris les fichiers de journalisation et de configuration. Dans le "
"contexte de la journalisation, cette variable est utilisée pour construire "
"un chemin vers un répertoire pour les fichiers journaux. Si non vide, "
"utilisez le contenu de cette variable pour le chemin ROS_HOME. Dans tous les"
" cas, le caractère ``~`` est étendu au répertoire HOME des utilisateurs."

#: ../../source/Concepts/About-Logging.rst:96
msgid ""
"``RCUTILS_LOGGING_USE_STDOUT`` - Control what stream output messages go to."
"  If this is unset or 0, use stderr.  If this is 1, use stdout."
msgstr ""
"``RCUTILS_LOGGING_USE_STDOUT`` - Contrôle vers quel flux les messages de "
"sortie vont. Si ce n'est pas défini ou 0, utilisez stderr. Si c'est 1, "
"utilisez stdout."

#: ../../source/Concepts/About-Logging.rst:97
msgid ""
"``RCUTILS_LOGGING_BUFFERED_STREAM`` - Control whether the logging stream (as"
" configured in ``RCUTILS_LOGGING_USE_STDOUT``) should be line buffered or "
"unbuffered.  If this is unset, use the default of the stream (generally line"
" buffered for stdout, and unbuffered for stderr).  If this is 0, force the "
"stream to be unbuffered.  If this is 1, force the stream to be line "
"buffered."
msgstr ""
"``RCUTILS_LOGGING_BUFFERED_STREAM`` - Contrôle si le flux de journalisation "
"(tel que configuré dans ``RCUTILS_LOGGING_USE_STDOUT``) doit être mis en "
"mémoire tampon ou non. S'il n'est pas défini, utilisez la valeur par défaut "
"du flux (généralement en mémoire tampon pour stdout et sans mémoire tampon "
"pour stderr). S'il s'agit de 0, forcez le flux à ne pas être tamponné. Si "
"c'est 1, force le flux à être mis en mémoire tampon."

#: ../../source/Concepts/About-Logging.rst:98
msgid ""
"``RCUTILS_COLORIZED_OUTPUT`` - Control whether colors are used when "
"outputting messages.  If unset, automatically determine based on the "
"platform and whether the console is a TTY.  If 0, force disable using colors"
" for output.  If 1, force enable using colors for output."
msgstr ""
"``RCUTILS_COLORIZED_OUTPUT`` - Contrôle si les couleurs sont utilisées lors "
"de la sortie des messages. S'il n'est pas défini, détermine automatiquement "
"en fonction de la plate-forme et si la console est un ATS. Si 0, forcer la "
"désactivation en utilisant des couleurs pour la sortie. Si 1, forcez "
"l'activation en utilisant des couleurs pour la sortie."

#: ../../source/Concepts/About-Logging.rst:99
msgid ""
"``RCUTILS_CONSOLE_OUTPUT_FORMAT`` - Control the fields that are output for "
"each log message.  The available fields are:"
msgstr ""
"``RCUTILS_CONSOLE_OUTPUT_FORMAT`` - Contrôle les champs qui sont sortis pour"
" chaque message de journal. Les champs disponibles sont :"

#: ../../source/Concepts/About-Logging.rst:101
msgid "``{severity}`` - The severity level."
msgstr "``{severity}`` - Le niveau de gravité."

#: ../../source/Concepts/About-Logging.rst:102
msgid "``{name}`` - The name of the logger (may be empty)."
msgstr "``{name}`` - Le nom du logger (peut être vide)."

#: ../../source/Concepts/About-Logging.rst:103
msgid "``{message}`` - The log message (may be empty)."
msgstr "``{message}`` - Le message du journal (peut être vide)."

#: ../../source/Concepts/About-Logging.rst:104
msgid ""
"``{function_name}`` - The function name this was called from (may be empty)."
msgstr ""
"``{function_name}`` - Le nom de la fonction à partir de laquelle elle a été "
"appelée (peut être vide)."

#: ../../source/Concepts/About-Logging.rst:105
msgid "``{file_name}`` - The file name this was called from (may be empty)."
msgstr ""
"``{file_name}`` - Le nom du fichier à partir duquel il a été appelé (peut "
"être vide)."

#: ../../source/Concepts/About-Logging.rst:106
msgid "``{time}`` - The time in seconds since the epoch."
msgstr "``{time}`` - Le temps en secondes depuis l'époque."

#: ../../source/Concepts/About-Logging.rst:107
msgid "``{time_as_nanoseconds}`` - The time in nanoseconds since the epoch."
msgstr "``{time_as_nanoseconds}`` - Le temps en nanosecondes depuis l'époque."

#: ../../source/Concepts/About-Logging.rst:108
msgid ""
"``{line_number}`` - The line number this was called from (may be empty)."
msgstr ""
"``{line_number}`` - Le numéro de ligne à partir duquel il a été appelé (peut"
" être vide)."

#: ../../source/Concepts/About-Logging.rst:110
msgid ""
"If no format is given, a default of ``[{severity}] [{time}] [{name}]: "
"{message}`` is used."
msgstr ""
"Si aucun format n'est donné, une valeur par défaut de ``[{severity}] "
"[{time}] [{name}] : {message}`` est utilisée."

#: ../../source/Concepts/About-Logging.rst:114
msgid "Node creation"
msgstr "Création de nœud"

#: ../../source/Concepts/About-Logging.rst:116
msgid ""
"When initializing a ROS 2 node, it is possible to control some aspects of "
"the behavior via node options. Since these are per-node options, they can be"
" set differently for different nodes even when the nodes are composed into a"
" single process."
msgstr ""
"Lors de l'initialisation d'un nœud ROS 2, il est possible de contrôler "
"certains aspects du comportement via les options de nœud. Comme il s'agit "
"d'options par nœud, elles peuvent être définies différemment pour différents"
" nœuds, même lorsque les nœuds sont composés en un seul processus."

#: ../../source/Concepts/About-Logging.rst:119
msgid ""
"``log_levels`` - The log level to use for a component within this particular"
" node.  This can be set with the following: ``ros2 run demo_nodes_cpp talker"
" --ros-args --log-level talker:=DEBUG``"
msgstr ""
"``log_levels`` - Le niveau de journalisation à utiliser pour un composant "
"dans ce nœud particulier. Cela peut être défini avec ce qui suit : ``ros2 "
"run demo_nodes_cpp talker --ros-args --log-level talker:=DEBUG``"

#: ../../source/Concepts/About-Logging.rst:120
msgid ""
"``external_log_config_file`` - The external file to use to configure the "
"backend logger.  If it is NULL, the default configuration will be used.  "
"Note that the format of this file is backend-specific (and is currently "
"unimplemented for the default backend logger of spdlog).  This can be set "
"with the following: ``ros2 run demo_nodes_cpp talker --ros-args --log-"
"config-file log-config.txt``"
msgstr ""
"``external_log_config_file`` - Le fichier externe à utiliser pour configurer"
" l'enregistreur principal. S'il est NULL, la configuration par défaut sera "
"utilisée. Notez que le format de ce fichier est spécifique au backend (et "
"n'est actuellement pas implémenté pour le logger backend par défaut de "
"spdlog). Cela peut être défini avec ce qui suit : ``ros2 run demo_nodes_cpp "
"talker --ros-args --log-config-file log-config.txt``"

#: ../../source/Concepts/About-Logging.rst:121
msgid ""
"``log_stdout_disabled`` - Whether to disable writing log messages to the "
"console.  This can be done with the following: ``ros2 run demo_nodes_cpp "
"talker --ros-args --disable-stdout-logs``"
msgstr ""
"``log_stdout_disabled`` - S'il faut désactiver l'écriture des messages du "
"journal sur la console. Cela peut être fait avec ce qui suit : ``ros2 run "
"demo_nodes_cpp talker --ros-args --disable-stdout-logs``"

#: ../../source/Concepts/About-Logging.rst:122
msgid ""
"``log_rosout_disabled`` - Whether to disable writing log messages out to "
"``/rosout``.  This can significantly save on network bandwidth, but external"
" observers will not be able to monitor logging.  This can be done with the "
"following: ``ros2 run demo_nodes_cpp talker --ros-args --disable-rosout-"
"logs``"
msgstr ""
"``log_rosout_disabled`` - S'il faut désactiver l'écriture des messages de "
"journalisation vers ``/rosout``. Cela peut considérablement économiser sur "
"la bande passante du réseau, mais les observateurs externes ne pourront pas "
"surveiller la journalisation. Cela peut être fait avec ce qui suit : ``ros2 "
"run demo_nodes_cpp talker --ros-args --disable-rosout-logs``"

#: ../../source/Concepts/About-Logging.rst:123
msgid ""
"``log_ext_lib_disabled`` - Whether to completely disable the use of an "
"external logger.  This may be faster in some cases, but means that logs will"
" not be written to disk.  This can be done with the following: ``ros2 run "
"demo_nodes_cpp talker --ros-args --disable-external-lib-logs``"
msgstr ""
"``log_ext_lib_disabled`` - S'il faut complètement désactiver l'utilisation "
"d'un enregistreur externe. Cela peut être plus rapide dans certains cas, "
"mais signifie que les journaux ne seront pas écrits sur le disque. Cela peut"
" être fait avec ce qui suit : ``ros2 run demo_nodes_cpp talker --ros-args "
"--disable-external-lib-logs``"

#: ../../source/Concepts/About-Logging.rst:126
msgid "Logging subsystem design"
msgstr "Conception du sous-système de journalisation"

#: ../../source/Concepts/About-Logging.rst:128
msgid ""
"The image below shows the five main pieces to the logging subsystem and how "
"they interact."
msgstr ""
"L'image ci-dessous montre les cinq éléments principaux du sous-système de "
"journalisation et leur interaction."

#: ../../source/Concepts/About-Logging.rst:None
msgid "ROS 2 logging architecture"
msgstr "Architecture de journalisation ROS 2"

#: ../../source/Concepts/About-Logging.rst:136
msgid "rcutils"
msgstr "rutils"

#: ../../source/Concepts/About-Logging.rst:138
msgid ""
"``rcutils`` has a logging implementation that can format log messages "
"according to a certain format (see ``Configuration`` above), and output "
"those log messages to a console. ``rcutils`` implements a complete logging "
"solution, but allows higher-level components to insert themselves into the "
"logging infrastructure in a dependency-injection model. This will become "
"more evident when we talk about the ``rcl`` layer below."
msgstr ""
"``rutils`` a une implémentation de journalisation qui peut formater les "
"messages de journalisation selon un certain format (voir ``Configuration`` "
"ci-dessus), et afficher ces messages de journalisation sur une console. "
"``rutils`` implémente une solution de journalisation complète, mais permet "
"aux composants de niveau supérieur de s'insérer dans l'infrastructure de "
"journalisation dans un modèle d'injection de dépendances. Cela deviendra "
"plus évident lorsque nous parlerons de la couche ``rcl`` ci-dessous."

#: ../../source/Concepts/About-Logging.rst:142
msgid ""
"Note that this is a *per-process* logging implementation, so anything that "
"is configured at this level will affect the entire process, not just "
"individual nodes."
msgstr ""
"Notez qu'il s'agit d'une implémentation de journalisation *par processus*, "
"donc tout ce qui est configuré à ce niveau affectera l'ensemble du "
"processus, pas seulement les nœuds individuels."

#: ../../source/Concepts/About-Logging.rst:145
msgid "rcl_logging_spdlog"
msgstr "rcl_logging_spdlog"

#: ../../source/Concepts/About-Logging.rst:147
msgid ""
"``rcl_logging_spdlog`` implements the ``rcl_logging_interface`` API, and "
"thus provides external logging services to the ``rcl`` layer. In particular,"
" the ``rcl_logging_spdlog`` implementation takes formatted log messages and "
"writes them out to log files on disk using the ``spdlog`` library, typically"
" within ``~/.ros/log`` (though this is configurable; see ``Configuration`` "
"above)."
msgstr ""
"``rcl_logging_spdlog`` implémente l'API ``rcl_logging_interface``, et "
"fournit ainsi des services de journalisation externes à la couche ``rcl``. "
"En particulier, l'implémentation ``rcl_logging_spdlog`` prend des messages "
"de journal formatés et les écrit dans des fichiers journaux sur le disque en"
" utilisant la bibliothèque ``spdlog``, généralement dans ``~/.ros/log`` "
"(bien que cela soit configurable ; voir ``Configuration`` ci-dessus)."

#: ../../source/Concepts/About-Logging.rst:151
msgid "rcl"
msgstr "RCL"

#: ../../source/Concepts/About-Logging.rst:153
msgid ""
"The logging subsystem in ``rcl`` uses ``rcutils`` and ``rcl_logging_spdlog``"
" to provide the bulk of the ROS 2 logging services. When log messages come "
"in, ``rcl`` decides where to send them. There are 3 main places that logging"
" messages can be delivered; an individual node may have any combination of "
"them enabled:"
msgstr ""
"Le sous-système de journalisation dans ``rcl`` utilise ``rcutils`` et "
"``rcl_logging_spdlog`` pour fournir la majeure partie des services de "
"journalisation ROS 2. Lorsque les messages de log arrivent, ``rcl`` décide "
"où les envoyer. Il existe 3 endroits principaux où les messages de "
"journalisation peuvent être livrés ; un nœud individuel peut avoir n'importe"
" quelle combinaison d'entre eux activée :"

#: ../../source/Concepts/About-Logging.rst:157
msgid "To the console via the ``rcutils`` layer"
msgstr "Vers la console via la couche ``rutils``"

#: ../../source/Concepts/About-Logging.rst:158
msgid "To disk via the ``rcl_logging_spdlog`` layer"
msgstr "Vers disque via la couche ``rcl_logging_spdlog``"

#: ../../source/Concepts/About-Logging.rst:159
msgid "To the ``/rosout`` topic on the ROS 2 network via the RMW layer"
msgstr "Vers le sujet ``/rosout`` sur le réseau ROS 2 via la couche RMW"

#: ../../source/Concepts/About-Logging.rst:162
msgid "rclcpp"
msgstr "RCLCP"

#: ../../source/Concepts/About-Logging.rst:164
msgid ""
"This is the main ROS 2 C++ API which sits atop the ``rcl`` API. In the "
"context of logging, ``rclcpp`` provides the ``RCLCPP_`` logging macros; see "
"``APIs`` above for a complete list. When one of the ``RCLCPP_`` macros runs,"
" it checks the current severity level of the node against the severity level"
" of the macro. If the severity level of the macro is greater than or equal "
"to the node severity level, the message will be formatted and output to all "
"of the places that are currently configured. Note that ``rclcpp`` uses a "
"global mutex for log calls, so all logging calls within the same process end"
" up being single-threaded."
msgstr ""
"Il s'agit de l'API principale de ROS 2 C++ qui se trouve au-dessus de l'API "
"``rcl``. Dans le contexte de la journalisation, ``rclcpp`` fournit les "
"macros de journalisation ``RCLCPP_`` ; voir ``APIs`` ci-dessus pour une "
"liste complète. Lorsqu'une des macros ``RCLCPP_`` s'exécute, elle vérifie le"
" niveau de gravité actuel du nœud par rapport au niveau de gravité de la "
"macro. Si le niveau de gravité de la macro est supérieur ou égal au niveau "
"de gravité du nœud, le message sera formaté et envoyé à tous les "
"emplacements actuellement configurés. Notez que ``rclcpp`` utilise un mutex "
"global pour les appels de journalisation, de sorte que tous les appels de "
"journalisation dans le même processus finissent par être monothread."

#: ../../source/Concepts/About-Logging.rst:172
msgid "rclpy"
msgstr "rclpy"

#: ../../source/Concepts/About-Logging.rst:174
msgid ""
"This is the main ROS 2 Python API which sits atop the ``rcl`` API. In the "
"context of logging, ``rclpy`` provides the ``logger.debug``-style functions;"
" see ``APIs`` above for a complete list. When one of the ``logger.debug`` "
"functions runs, it checks the current severity level of the node against the"
" severity level of the macro. If the severity level of the macro is greater "
"than or equal to the node severity level, the message will be formatted and "
"output to all of the places that are currently configured."
msgstr ""
"Il s'agit de l'API Python principale de ROS 2 qui se trouve au-dessus de "
"l'API ``rcl``. Dans le contexte de la journalisation, ``rclpy`` fournit les "
"fonctions de style ``logger.debug`` ; voir ``APIs`` ci-dessus pour une liste"
" complète. Lorsqu'une des fonctions ``logger.debug`` s'exécute, elle vérifie"
" le niveau de gravité actuel du nœud par rapport au niveau de gravité de la "
"macro. Si le niveau de gravité de la macro est supérieur ou égal au niveau "
"de gravité du nœud, le message sera formaté et envoyé à tous les "
"emplacements actuellement configurés."

#: ../../source/Concepts/About-Logging.rst:181
msgid "Logging usage"
msgstr "Utilisation de la journalisation"

#: ../../source/Concepts/About-Logging.rst:187
msgid ""
"See the `rclcpp logging demo "
"<https://github.com/ros2/demos/tree/rolling/logging_demo>`_ for some simple "
"examples."
msgstr ""
"Voir la `rclcpp logging demo "
"<https://github.com/ros2/demos/tree/rolling/logging_demo>`_ pour quelques "
"exemples simples."

#: ../../source/Concepts/About-Logging.rst:188
msgid ""
"See the :doc:`logging demo <../Tutorials/Demos/Logging-and-logger-"
"configuration>` for example usage."
msgstr ""
"Voir la :doc:`démo de journalisation <../Tutorials/Demos/Logging-and-logger-"
"configuration>` pour un exemple d'utilisation."

#: ../../source/Concepts/About-Logging.rst:189
msgid ""
"See the `rclcpp documentation "
"<https://docs.ros2.org/latest/api/rclcpp/logging_8hpp.html>`__ for an "
"extensive list of functionality."
msgstr ""
"Voir la `documentation rclcpp "
"<https://docs.ros2.org/latest/api/rclcpp/logging_8hpp.html>`__ pour une "
"liste complète des fonctionnalités."

#: ../../source/Concepts/About-Logging.rst:193
msgid ""
"See the `rclpy examples "
"<https://github.com/ros2/examples/blob/rolling/rclpy/services/minimal_client/examples_rclpy_minimal_client/client.py>`__"
" for example usage of a node's logger."
msgstr ""
"Voir les `exemples rclpy "
"<https://github.com/ros2/examples/blob/rolling/rclpy/services/minimal_client/examples_rclpy_minimal_client/client.py>`__"
" pour un exemple d'utilisation de l'enregistreur d'un nœud."

#: ../../source/Concepts/About-Logging.rst:194
msgid ""
"See the `rclpy tests "
"<https://github.com/ros2/rclpy/blob/rolling/rclpy/test/test_logging.py>`__ "
"for example usage of keyword arguments (e.g. ``skip_first``, ``once``)."
msgstr ""
"Voir les `tests rclpy "
"<https://github.com/ros2/rclpy/blob/rolling/rclpy/test/test_logging.py>`__ "
"pour un exemple d'utilisation d'arguments de mots-clés (par exemple "
"``skip_first``, ``once` `)."

#: ../../source/Concepts/About-Middleware-Implementations.rst:3
msgid "About ROS 2 middleware implementations"
msgstr "À propos des implémentations de middleware ROS 2"

#: ../../source/Concepts/About-Middleware-Implementations.rst:7
msgid ""
"ROS middleware implementations are sets of |packages| that implement some of"
" the internal ROS interfaces, e.g. the ``rmw``, ``rcl``, and ``rosidl`` "
"|APIs|."
msgstr ""
"Les implémentations de middleware ROS sont des ensembles de |packages| qui "
"implémentent certaines des interfaces ROS internes, par ex. les |API| "
"``rmw``, ``rcl`` et ``rosidl``."

#: ../../source/Concepts/About-Middleware-Implementations.rst:10
msgid "Common Packages for DDS Middleware Packages"
msgstr "Packages communs pour les packages middleware DDS"

#: ../../source/Concepts/About-Middleware-Implementations.rst:12
msgid ""
"All of the current ROS middleware implementations are based on full or "
"partial DDS implementations. For example, there is a middleware "
"implementation that uses RTI's Connext DDS and an implementation which uses "
"eProsima's Fast DDS. Because of this, there are some shared |packages| "
"amongst most DDS based middleware implementations."
msgstr ""
"Toutes les implémentations actuelles du middleware ROS sont basées sur des "
"implémentations DDS complètes ou partielles. Par exemple, il existe une "
"implémentation de middleware qui utilise Connext DDS de RTI et une "
"implémentation qui utilise Fast DDS d'eProsima. Pour cette raison, il existe"
" des |packages| partagés. parmi la plupart des implémentations de middleware"
" basées sur DDS."

#: ../../source/Concepts/About-Middleware-Implementations.rst:16
msgid ""
"In the `ros2/rosidl_dds <https://github.com/ros2/rosidl_dds>`_ repository on"
" |GitHub|_, there is the following |package|:"
msgstr ""
"Dans le dépôt `ros2/rosidl_dds <https://github.com/ros2/rosidl_dds>`_ sur "
"|GitHub|_, il y a le |package| suivant :"

#: ../../source/Concepts/About-Middleware-Implementations.rst:18
msgid ""
"``rosidl_generator_dds_idl``: provides tools to generate DDS ``.idl`` files "
"from ``rosidl`` files, e.g. ``.msg`` files, ``.srv`` files, etc."
msgstr ""
"``rosidl_generator_dds_idl`` : fournit des outils pour générer des fichiers "
"DDS ``.idl`` à partir de fichiers ``rosidl``, par ex. Fichiers ``.msg``, "
"fichiers ``.srv``, etc."

#: ../../source/Concepts/About-Middleware-Implementations.rst:20
msgid ""
"The ``rosidl_generator_dds_idl`` |package| generates a DDS ``.idl`` file for"
" each ``rosidl`` file, e.g. ``.msg`` file, defined by |packages| containing "
"messages. Currently DDS based ROS middleware implementations make use of "
"this generator's output ``.idl`` files to generate pre-compiled type support"
" that is vendor specific."
msgstr ""
"Le |paquet| ``rosidl_generator_dds_idl`` génère un fichier DDS ``.idl`` pour"
" chaque fichier ``rosidl``, par ex. Fichier ``.msg``, défini par |packages| "
"contenant des messages. Actuellement, les implémentations de middleware ROS "
"basées sur DDS utilisent les fichiers de sortie ``.idl`` de ce générateur "
"pour générer un support de type précompilé spécifique au fournisseur."

#: ../../source/Concepts/About-Middleware-Implementations.rst:24
msgid "Structure of ROS Middleware Implementations"
msgstr "Structure des implémentations du middleware ROS"

#: ../../source/Concepts/About-Middleware-Implementations.rst:26
msgid ""
"A ROS middleware implementation is typically made up of a few |packages| in "
"a single repository:"
msgstr ""
"Une implémentation de middleware ROS est généralement composée de quelques "
"|packages| dans un référentiel unique :"

#: ../../source/Concepts/About-Middleware-Implementations.rst:28
msgid ""
"``<implementation_name>_cmake_module``: contains CMake Module for "
"discovering and exposing required dependencies"
msgstr ""
"``<implementation_name>_cmake_module`` : contient le module CMake pour "
"découvrir et exposer les dépendances requises"

#: ../../source/Concepts/About-Middleware-Implementations.rst:29
msgid ""
"``rmw_<implementation_name>_<language>``: contains the implementation of the"
" ``rmw`` |API| in a particular language, typically C++"
msgstr ""
"``rmw_<implementation_name>_<language>`` : contient l'implémentation de "
"l'API ``rmw`` | dans un langage particulier, typiquement C++"

#: ../../source/Concepts/About-Middleware-Implementations.rst:30
msgid ""
"``rosidl_typesupport_<implementation_name>_<language>``: contains tools to "
"generate static type support code for ``rosidl`` files, tailored to the "
"implementation in a particular language, typically C or C++"
msgstr ""
"``rosidl_typesupport_<implementation_name>_<language>`` : contient des "
"outils pour générer du code de support de type statique pour les fichiers "
"``rosidl``, adapté à l'implémentation dans un langage particulier, "
"généralement C ou C++"

#: ../../source/Concepts/About-Middleware-Implementations.rst:32
msgid ""
"The ``<implementation_name>_cmake_module`` |package| contains any CMake "
"Modules and functions needed to find the supporting dependencies for the "
"middleware implementation. For example, ``rti_connext_dds_cmake_module`` "
"provides wrapper logic around the CMake Module shipped with RTI Connext DDS "
"to make sure that all packages that depend on it will select the same "
"installation of RTI Connext DDS. Similarly, ``fastrtps_cmake_module`` "
"includes a CMake Module to find eProsima's Fast DDS and "
"``gurumdds_cmake_module`` includes a CMake Module to find GurumNetworks "
"GurumDDS. Not all implementations will have a package like this: for "
"example, Eclipe's Cyclone DDS already provides a CMake Module which is used "
"directly by its RMW implementation without the need of additional wrappers."
msgstr ""
"Le ``<nom_de_l'implémentation>_cmake_module`` |package| contient tous les "
"modules et fonctions CMake nécessaires pour trouver les dépendances de "
"support pour l'implémentation du middleware. Par exemple, "
"``rti_connext_dds_cmake_module`` fournit une logique wrapper autour du "
"module CMake livré avec RTI Connext DDS pour s'assurer que tous les packages"
" qui en dépendent sélectionneront la même installation de RTI Connext DDS. "
"De même, ``fastrtps_cmake_module`` inclut un module CMake pour trouver le "
"Fast DDS d'eProsima et ``gurumdds_cmake_module`` inclut un module CMake pour"
" trouver GurumNetworks GurumDDS. Toutes les implémentations n'auront pas un "
"package comme celui-ci : par exemple, Cyclone DDS d'Eclipe fournit déjà un "
"module CMake qui est utilisé directement par son implémentation RMW sans "
"avoir besoin de wrappers supplémentaires."

#: ../../source/Concepts/About-Middleware-Implementations.rst:37
msgid ""
"The ``rmw_<implementation_name>_<language>`` |package| implements the "
"``rmw`` C |API| in a particular language. The implementation itself can be "
"C++, it just must expose the header's symbols as ``extern \"C\"`` so that C "
"applications can link against it."
msgstr ""
"Le ``rmw_<implementation_name>_<langue>`` |package| implémente le ``rmw`` C "
"|API| dans une langue particulière. L'implémentation elle-même peut être "
"C++, elle doit simplement exposer les symboles de l'en-tête en tant que "
"``extern \"C\"`` afin que les applications C puissent s'y connecter."

#: ../../source/Concepts/About-Middleware-Implementations.rst:40
msgid ""
"The ``rosidl_typesupport_<implementation_name>_<language>`` |package| "
"provides a generator which generates DDS code in a particular language. This"
" is done using the ``.idl`` files generated by the "
"``rosidl_generator_dds_idl`` |package| and the DDS IDL code generator "
"provided by the DDS vendor. It also generates code for converting ROS "
"message structures to and from DDS message structures. This generator is "
"also responsible for creating a shared library for the message package it is"
" being used in, which is specific to the messages in the message package and"
" to the DDS vendor being used."
msgstr ""
"Le ``rosidl_typesupport_<implementation_name>_<langue>`` |package| fournit "
"un générateur qui génère du code DDS dans un langage particulier. Ceci est "
"fait en utilisant les fichiers ``.idl`` générés par le "
"``rosidl_generator_dds_idl`` |package| et le générateur de code DDS IDL "
"fourni par le fournisseur DDS. Il génère également du code pour convertir "
"les structures de message ROS vers et depuis les structures de message DDS. "
"Ce générateur est également responsable de la création d'une bibliothèque "
"partagée pour le package de messages dans lequel il est utilisé, qui est "
"spécifique aux messages du package de messages et au fournisseur DDS "
"utilisé."

#: ../../source/Concepts/About-Middleware-Implementations.rst:45
msgid ""
"As mentioned above, the ``rosidl_typesupport_introspection_<language>`` may "
"be used instead of a vendor specific type support package if an rmw "
"implementation supports runtime interpretation of messages. This ability to "
"programmatically send and receive types over topics without generating code "
"beforehand is achieved by supporting the `DDS X-Types Dynamic Data standard "
"<http://www.omg.org/spec/DDS-XTypes>`_. As such, rmw implementations may "
"provide support for the X-Types standard, and/or provide a package for type "
"support generated at compile time specific to their DDS implementation."
msgstr ""
"Comme mentionné ci-dessus, le ``rosidl_typesupport_introspection_<langue>`` "
"peut être utilisé à la place d'un package de support de type spécifique à un"
" fournisseur si une implémentation rmw prend en charge l'interprétation des "
"messages à l'exécution. Cette possibilité d'envoyer et de recevoir par "
"programmation des types sur des sujets sans générer de code au préalable est"
" obtenue en prenant en charge la norme `DDS X-Types Dynamic Data "
"<http://www.omg.org/spec/DDS-XTypes>`_. En tant que telles, les "
"implémentations rmw peuvent fournir un support pour la norme X-Types et/ou "
"fournir un package pour le support de type généré au moment de la "
"compilation spécifique à leur implémentation DDS."

#: ../../source/Concepts/About-Middleware-Implementations.rst:49
msgid ""
"As an example of an rmw implementation repository, the ``Eclipse Cyclone "
"DDS`` ROS middleware implementation is on |GitHub|_ at `ros2/rmw_cyclonedds "
"<https://github.com/ros2/rmw_cyclonedds>`_."
msgstr ""
"À titre d'exemple de référentiel d'implémentation rmw, l'implémentation du "
"middleware ROS ``Eclipse Cyclone DDS`` se trouve sur |GitHub|_ à "
"`ros2/rmw_cyclonedds <https://github.com/ros2/rmw_cyclonedds>`_."

#: ../../source/Concepts/About-Middleware-Implementations.rst:51
msgid ""
"The rmw implementation for ``Fast DDS`` is on |GitHub|_ at "
"`ros2/rmw_fastrtps_cpp <https://github.com/ros2/rmw_fastrtps_cpp>`_."
msgstr ""
"L'implémentation rmw pour ``Fast DDS`` est sur |GitHub|_ à "
"`ros2/rmw_fastrtps_cpp <https://github.com/ros2/rmw_fastrtps_cpp>`_."

#: ../../source/Concepts/About-Middleware-Implementations.rst:53
msgid ""
"The rmw implementation for ``Connext DDS`` is on |GitHub|_ at "
"`ros2/rmw_connextdds <https://github.com/ros2/rmw_connextdds>`_."
msgstr ""
"L'implémentation rmw pour ``Connext DDS`` est sur |GitHub|_ à "
"`ros2/rmw_connextdds <https://github.com/ros2/rmw_connextdds>`_."

#: ../../source/Concepts/About-Middleware-Implementations.rst:55
msgid ""
"The rmw implementation for ``GurumDDS`` is on |GitHub|_ at `ros/rmw_gurumdds"
" <https://github.com/ros2/rmw_gurumdds>`_."
msgstr ""
"L'implémentation rmw pour ``GurumDDS`` est sur |GitHub|_ à `ros/rmw_gurumdds"
" <https://github.com/ros2/rmw_gurumdds>`_."

#: ../../source/Concepts/About-Middleware-Implementations.rst:57
msgid ""
"To learn more about what is required to create a new middleware "
"implementation for ROS see this page:"
msgstr ""
"Pour en savoir plus sur ce qui est requis pour créer une nouvelle "
"implémentation de middleware pour ROS, consultez cette page :"

#: ../../source/Concepts/About-Middleware-Implementations.rst:61
msgid ""
"TODO: Link to more detailed middleware implementation docs and/or tutorial."
msgstr ""
"TODO : lien vers des documents et/ou un didacticiel plus détaillés sur la "
"mise en œuvre du middleware."

#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:6
msgid "About Quality of Service settings"
msgstr "À propos des paramètres de qualité de service"

#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:12
msgid ""
"ROS 2 offers a rich variety of Quality of Service (QoS) policies that allow "
"you to tune communication between nodes. With the right set of Quality of "
"Service policies, ROS 2 can be as reliable as TCP or as best-effort as UDP, "
"with many, many possible states in between. Unlike ROS 1, which primarily "
"only supported TCP, ROS 2 benefits from the flexibility of the underlying "
"DDS transport in environments with lossy wireless networks where a “best "
"effort” policy would be more suitable, or in real-time computing systems "
"where the right Quality of Service profile is needed to meet deadlines."
msgstr ""
"ROS 2 offre une grande variété de politiques de qualité de service (QoS) qui"
" vous permettent d'ajuster la communication entre les nœuds. Avec le bon "
"ensemble de politiques de qualité de service, ROS 2 peut être aussi fiable "
"que TCP ou aussi efficace qu'UDP, avec de très nombreux états possibles "
"entre les deux. Contrairement à ROS 1, qui ne prenait principalement en "
"charge que TCP, ROS 2 bénéficie de la flexibilité du transport DDS sous-"
"jacent dans des environnements avec des réseaux sans fil avec perte où une "
"politique de « meilleur effort » serait plus appropriée, ou dans des "
"systèmes informatiques en temps réel où la bonne qualité du profil de "
"service est nécessaire pour respecter les délais."

#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:16
msgid ""
"A set of QoS “policies” combine to form a QoS “profile”. Given the "
"complexity of choosing the correct QoS policies for a given scenario, ROS 2 "
"provides a set of predefined QoS profiles for common use cases (e.g. sensor "
"data). At the same time, developers are given the flexibility to control "
"specific policies of the QoS profiles."
msgstr ""
"Un ensemble de « politiques » QoS se combinent pour former un « profil » "
"QoS. Compte tenu de la complexité du choix des politiques QoS correctes pour"
" un scénario donné, ROS 2 fournit un ensemble de profils QoS prédéfinis pour"
" les cas d'utilisation courants (par exemple, les données de capteur). Dans "
"le même temps, les développeurs ont la possibilité de contrôler des "
"politiques spécifiques des profils QoS."

#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:20
msgid ""
"QoS profiles can be specified for publishers, subscriptions, service servers"
" and clients. A QoS profile can be applied independently to each instance of"
" the aforementioned entities, but if different profiles are used, it is "
"possible that they will be incompatible, preventing the delivery of "
"messages."
msgstr ""
"Des profils QoS peuvent être spécifiés pour les éditeurs, les abonnements, "
"les serveurs de service et les clients. Un profil QoS peut être appliqué "
"indépendamment à chaque instance des entités susmentionnées, mais si "
"différents profils sont utilisés, il est possible qu'ils soient "
"incompatibles, empêchant la livraison des messages."

#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:25
msgid "QoS policies"
msgstr "Politiques de qualité de service"

#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:27
msgid ""
"The base QoS profile currently includes settings for the following policies:"
msgstr ""
"Le profil QoS de base inclut actuellement des paramètres pour les stratégies"
" suivantes :"

#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:29
msgid "History"
msgstr "Histoire"

#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:31
msgid ""
"*Keep last*: only store up to N samples, configurable via the queue depth "
"option."
msgstr ""
"*Keep last* : ne stocke que jusqu'à N échantillons, configurable via "
"l'option de profondeur de file d'attente."

#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:32
msgid ""
"*Keep all*: store all samples, subject to the configured resource limits of "
"the underlying middleware."
msgstr ""
"*Tout conserver* : stocke tous les échantillons, sous réserve des limites de"
" ressources configurées du middleware sous-jacent."

#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:34
msgid "Depth"
msgstr "Profondeur"

#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:36
msgid ""
"*Queue size*: only honored if the “history” policy was set to “keep last”."
msgstr ""
"*Taille de la file d'attente* : honoré uniquement si la politique "
"\"historique\" a été définie sur \"conserver en dernier\"."

#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:38
msgid "Reliability"
msgstr "Fiabilité"

#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:40
msgid ""
"*Best effort*: attempt to deliver samples, but may lose them if the network "
"is not robust."
msgstr ""
"*Meilleur effort* : tentative de livraison d'échantillons, mais risque de "
"les perdre si le réseau n'est pas robuste."

#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:41
msgid ""
"*Reliable*: guarantee that samples are delivered, may retry multiple times."
msgstr ""
"*Fiable* : garantit que les échantillons sont livrés, peut réessayer "
"plusieurs fois."

#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:43
msgid "Durability"
msgstr "Durabilité"

#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:45
msgid ""
"*Transient local*: the publisher becomes responsible for persisting samples "
"for “late-joining” subscriptions."
msgstr ""
"*Transient local* : l'éditeur devient responsable de la persistance des "
"échantillons pour les abonnements \"tardifs\"."

#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:46
msgid "*Volatile*: no attempt is made to persist samples."
msgstr ""
"*Volatile* : aucune tentative n'est effectuée pour conserver les "
"échantillons."

#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:48
msgid "Deadline"
msgstr "Date limite"

#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:50
msgid ""
"*Duration*: the expected maximum amount of time between subsequent messages "
"being published to a topic"
msgstr ""
"*Durée* : la durée maximale prévue entre les messages suivants publiés sur "
"un sujet"

#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:52
msgid "Lifespan"
msgstr "Durée de vie"

#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:54
msgid ""
"*Duration*: the maximum amount of time between the publishing and the "
"reception of a message without the message being considered stale or expired"
" (expired messages are silently dropped and are effectively never received)."
msgstr ""
"*Durée* : la durée maximale entre la publication et la réception d'un "
"message sans que le message soit considéré comme obsolète ou expiré (les "
"messages expirés sont supprimés silencieusement et ne sont effectivement "
"jamais reçus)."

#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:56
msgid "Liveliness"
msgstr "Vivacité"

#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:58
msgid ""
"*Automatic*: the system will consider all of the node’s publishers to be "
"alive for another “lease duration” when any one of its publishers has "
"published a message."
msgstr ""
"*Automatique* : le système considérera que tous les éditeurs du nœud sont "
"actifs pour une autre \"durée de bail\" lorsque l'un de ses éditeurs a "
"publié un message."

#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:59
msgid ""
"*Manual by topic*: the system will consider the publisher to be alive for "
"another “lease duration” if it manually asserts that it is still alive (via "
"a call to the publisher API)."
msgstr ""
"*Manuel par sujet* : le système considérera que l'éditeur est en vie pour "
"une autre \"durée de bail\" s'il affirme manuellement qu'il est toujours en "
"vie (via un appel à l'API de l'éditeur)."

#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:61
msgid "Lease Duration"
msgstr "Durée du bail"

#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:63
msgid ""
"*Duration*: the maximum period of time a publisher has to indicate that it "
"is alive before the system considers it to have lost liveliness (losing "
"liveliness could be an indication of a failure)."
msgstr ""
"*Durée* : la période maximale pendant laquelle un éditeur doit indiquer "
"qu'il est actif avant que le système ne considère qu'il a perdu de "
"l'activité (la perte de l'activité peut être le signe d'un échec)."

#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:65
msgid ""
"For each of the policies that is not a duration, there is also the option of"
" “system default”, which uses the default of the underlying middleware. For "
"each of the policies that is a duration, there also exists a “default” "
"option that means the duration is unspecified, which the underlying "
"middleware will usually interpret as an infinitely long duration."
msgstr ""
"Pour chacune des politiques qui n'est pas une durée, il y a aussi l'option «"
" système par défaut », qui utilise la valeur par défaut du middleware sous-"
"jacent. Pour chacune des politiques qui est une durée, il existe également "
"une option \"par défaut\" qui signifie que la durée n'est pas spécifiée, ce "
"que le middleware sous-jacent interprétera généralement comme une durée "
"infiniment longue."

#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:69
#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:265
#: ../../source/Concepts/About-ROS-2-Client-Libraries.rst:118
#: ../../source/Concepts/About-Topic-Statistics.rst:75
msgid "Comparison to ROS 1"
msgstr "Comparaison avec ROS 1"

#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:71
msgid ""
"The “history” and “depth” policies in ROS 2 combine to provide functionality"
" akin to the queue size in ROS 1."
msgstr ""
"Les politiques \"historique\" et \"profondeur\" dans ROS 2 se combinent pour"
" fournir des fonctionnalités similaires à la taille de la file d'attente "
"dans ROS 1."

#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:73
msgid ""
"The “reliability” policy in ROS 2 is akin to the use of either UDPROS (only "
"in ``roscpp``) for “best effort”, or TCPROS (ROS 1 default) for “reliable”. "
"Note however that even the reliable policy in ROS 2 is implemented using "
"UDP, which allows for multicasting if appropriate."
msgstr ""
"La politique de « fiabilité » dans ROS 2 s'apparente à l'utilisation soit de"
" UDPROS (uniquement dans ``roscpp``) pour « meilleur effort », soit de "
"TCPROS (par défaut ROS 1) pour « fiable ». Notez cependant que même la "
"politique fiable dans ROS 2 est implémentée à l'aide d'UDP, ce qui permet la"
" multidiffusion si nécessaire."

#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:76
msgid ""
"The “durability” policy “transient local”, combined with any depth, provides"
" functionality similar to that of “latching” publishers. The remaining "
"policies in ROS 2 are not akin to anything that is available in ROS 1, "
"meaning that ROS 2 is more featureful than ROS 1 in this respect. It is "
"possible that in the future, even more QoS policies will be available in ROS"
" 2."
msgstr ""
"La politique de \"durabilité\" \"transitoire locale\", combinée à toute "
"profondeur, offre une fonctionnalité similaire à celle des éditeurs \"à "
"verrouillage\". Les politiques restantes dans ROS 2 ne s'apparentent à rien "
"de ce qui est disponible dans ROS 1, ce qui signifie que ROS 2 est plus "
"complet que ROS 1 à cet égard. Il est possible qu'à l'avenir, encore plus de"
" politiques QoS soient disponibles dans ROS 2."

#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:82
msgid "QoS profiles"
msgstr "Profils de qualité de service"

#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:84
msgid ""
"Profiles allow developers to focus on their applications without worrying "
"about every QoS setting possible. A QoS profile defines a set of policies "
"that are expected to go well together for a particular use case."
msgstr ""
"Les profils permettent aux développeurs de se concentrer sur leurs "
"applications sans se soucier de tous les paramètres QoS possibles. Un profil"
" QoS définit un ensemble de politiques censées aller bien ensemble pour un "
"cas d'utilisation particulier."

#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:87
msgid "The currently defined QoS profiles are:"
msgstr "Les profils QoS actuellement définis sont :"

#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:89
msgid "Default QoS settings for publishers and subscriptions"
msgstr "Paramètres QoS par défaut pour les éditeurs et les abonnements"

#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:91
msgid ""
"In order to make the transition from ROS 1 to ROS 2 easier, exercising a "
"similar network behavior is desirable. By default, publishers and "
"subscriptions in ROS 2 have “keep last” for history with a queue size of 10,"
" “reliable” for reliability, “volatile” for durability, and “system default”"
" for liveliness. Deadline, lifespan, and lease durations are also all set to"
" “default”."
msgstr ""
"Afin de faciliter la transition de ROS 1 à ROS 2, il est souhaitable "
"d'exercer un comportement de réseau similaire. Par défaut, les éditeurs et "
"les abonnements dans ROS 2 ont \"conserver en dernier\" pour l'historique "
"avec une taille de file d'attente de 10, \"fiable\" pour la fiabilité, "
"\"volatile\" pour la durabilité et \"système par défaut\" pour la vivacité. "
"La date limite, la durée de vie et la durée des baux sont également définies"
" sur \"par défaut\"."

#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:95
msgid "Services"
msgstr "Prestations de service"

#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:97
msgid ""
"In the same vein as publishers and subscriptions, services are reliable. It "
"is especially important for services to use volatile durability, as "
"otherwise service servers that re-start may receive outdated requests. While"
" the client is protected from receiving multiple responses, the server is "
"not protected from side-effects of receiving the outdated requests."
msgstr ""
"Dans la même veine que les éditeurs et les abonnements, les services sont "
"fiables. Il est particulièrement important que les services utilisent une "
"durabilité volatile, sinon les serveurs de service qui redémarrent peuvent "
"recevoir des demandes obsolètes. Alors que le client est protégé contre la "
"réception de plusieurs réponses, le serveur n'est pas protégé contre les "
"effets secondaires de la réception des demandes obsolètes."

#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:101
msgid "Sensor data"
msgstr "Données du capteur"

#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:103
msgid ""
"For sensor data, in most cases it’s more important to receive readings in a "
"timely fashion, rather than ensuring that all of them arrive. That is, "
"developers want the latest samples as soon as they are captured, at the "
"expense of maybe losing some. For that reason the sensor data profile uses "
"best effort reliability and a smaller queue size."
msgstr ""
"Pour les données des capteurs, dans la plupart des cas, il est plus "
"important de recevoir les lectures en temps opportun, plutôt que de "
"s'assurer qu'elles arrivent toutes. Autrement dit, les développeurs veulent "
"les derniers échantillons dès qu'ils sont capturés, au risque d'en perdre "
"peut-être certains. Pour cette raison, le profil de données du capteur "
"utilise la fiabilité du meilleur effort et une taille de file d'attente plus"
" petite."

#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:107
#: ../../source/Concepts/About-ROS-2-Client-Libraries.rst:31
msgid "Parameters"
msgstr "Paramètres"

#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:109
msgid ""
"Parameters in ROS 2 are based on services, and as such have a similar "
"profile. The difference is that parameters use a much larger queue depth so "
"that requests do not get lost when, for example, the parameter client is "
"unable to reach the parameter service server."
msgstr ""
"Les paramètres dans ROS 2 sont basés sur les services et, en tant que tels, "
"ont un profil similaire. La différence est que les paramètres utilisent une "
"profondeur de file d'attente beaucoup plus grande afin que les demandes ne "
"soient pas perdues lorsque, par exemple, le client de paramètres est "
"incapable d'atteindre le serveur de service de paramètres."

#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:112
msgid "System default"
msgstr "Défaillance du système"

#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:114
msgid ""
"This uses the RMW implementation’s default values for all of the policies. "
"Different RMW implementations may have different defaults."
msgstr ""
"Cela utilise les valeurs par défaut de l'implémentation RMW pour toutes les "
"stratégies. Différentes implémentations RMW peuvent avoir des valeurs par "
"défaut différentes."

#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:117
msgid ""
"`Click here "
"<https://github.com/ros2/rmw/blob/rolling/rmw/include/rmw/qos_profiles.h>`__"
" for the specific policies in use for the above profiles. The settings in "
"these profiles are subject to further tweaks, based on the feedback from the"
" community."
msgstr ""
"`Cliquez ici "
"<https://github.com/ros2/rmw/blob/rolling/rmw/include/rmw/qos_profiles.h>`__"
" pour les politiques spécifiques utilisées pour les profils ci-dessus. Les "
"paramètres de ces profils sont sujets à d'autres ajustements, en fonction "
"des commentaires de la communauté."

#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:122
msgid "QoS compatibilities"
msgstr "Compatibilités QoS"

#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:124
msgid ""
"**Note:** This section refers to publishers and subscriptions but the "
"content applies to service servers and clients in the same manner."
msgstr ""
"**Remarque :** Cette section fait référence aux éditeurs et aux abonnements,"
" mais le contenu s'applique aux serveurs de service et aux clients de la "
"même manière."

#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:126
msgid ""
"QoS profiles may be configured for publishers and subscriptions "
"independently. A connection between a publisher and a subscription is only "
"made if the pair has compatible QoS profiles."
msgstr ""
"Les profils QoS peuvent être configurés indépendamment pour les éditeurs et "
"les abonnements. Une connexion entre un éditeur et un abonnement n'est "
"établie que si la paire a des profils QoS compatibles."

#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:129
msgid ""
"QoS profile compatibility is determined based on a “Request vs Offered” "
"model. Subscriptions *request* a QoS profile that is the “minimum quality” "
"that it is willing to accept, and publishers *offer* a QoS profile that is "
"the “maximum quality” that it is able to provide. Connections are only made "
"if every policy of the requested QoS profile is not more stringent than that"
" of the offered QoS profile. Multiple subscriptions can be connected to a "
"single publisher simultaneously even if their requested QoS profiles are "
"different. The compatibility between a publisher and a subscription is "
"unaffected by the presence of other publishers and subscriptions."
msgstr ""
"La compatibilité du profil QoS est déterminée sur la base d'un modèle "
"\"Demande vs Offert\". Les abonnements *demandent* un profil QoS qui est la "
"\"qualité minimale\" qu'ils sont prêts à accepter, et les éditeurs *offrent*"
" un profil QoS qui est la \"qualité maximale\" qu'ils sont capables de "
"fournir. Les connexions ne sont établies que si chaque politique du profil "
"QoS demandé n'est pas plus stricte que celle du profil QoS proposé. "
"Plusieurs abonnements peuvent être connectés simultanément à un seul éditeur"
" même si leurs profils QoS demandés sont différents. La compatibilité entre "
"un éditeur et un abonnement n'est pas affectée par la présence d'autres "
"éditeurs et abonnements."

#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:135
msgid ""
"The following tables show the compatibility of the different policy settings"
" and the result:"
msgstr ""
"Les tableaux suivants montrent la compatibilité des différents paramètres de"
" stratégie et le résultat :"

#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:137
msgid "*Compatibility of reliability QoS policies:*"
msgstr "*Compatibilité des politiques de QoS de fiabilité :*"

#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:142
#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:163
#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:186
#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:213
#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:236
msgid "Publisher"
msgstr "Éditeur"

#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:143
#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:164
#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:187
#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:214
#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:237
msgid "Subscription"
msgstr "Abonnement"

#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:144
#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:165
#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:188
#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:215
#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:238
msgid "Compatible"
msgstr "Compatible"

#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:145
#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:146
#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:148
#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:152
msgid "Best effort"
msgstr "Meilleur effort"

#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:147
#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:153
#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:156
#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:168
#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:174
#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:177
#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:191
#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:197
#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:200
#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:203
#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:218
#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:224
#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:227
#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:241
#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:247
#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:250
#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:253
msgid "Yes"
msgstr "Oui"

#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:149
#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:151
#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:154
#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:155
msgid "Reliable"
msgstr "Fiable"

#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:150
#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:171
#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:194
#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:206
#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:221
#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:244
#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:256
msgid "No"
msgstr "Non"

#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:158
msgid "*Compatibility of durability QoS policies:*"
msgstr "*Compatibilité des politiques QoS de durabilité :*"

#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:166
#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:167
#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:169
#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:173
msgid "Volatile"
msgstr "Volatil"

#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:170
#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:172
#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:175
#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:176
msgid "Transient local"
msgstr "Transitoire locale"

#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:179
msgid "*Compatibility of deadline QoS policies:*"
msgstr "*Compatibilité des politiques de qualité de service des délais :*"

#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:181
#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:231
msgid "Assume *x* and *y* are arbitrary valid duration values."
msgstr ""
"Supposons que *x* et *y* sont des valeurs de durée valides arbitraires."

#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:189
#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:190
#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:192
#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:196
#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:239
#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:240
#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:242
#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:246
msgid "Default"
msgstr "Défaut"

#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:193
#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:195
#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:198
#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:199
#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:201
#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:204
#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:243
#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:245
#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:248
#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:249
#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:251
#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:254
msgid "*x*"
msgstr "*X*"

#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:202
#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:252
msgid "*y* (where *y* > *x*)"
msgstr "*y* (où *y* > *x*)"

#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:205
#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:255
msgid "*y* (where *y* < *x*)"
msgstr "*y* (où *y* < *x*)"

#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:208
msgid "*Compatibility of liveliness QoS policies:*"
msgstr "*Compatibilité des politiques QoS de vivacité :*"

#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:216
#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:217
#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:219
#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:223
msgid "Automatic"
msgstr "Automatique"

#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:220
#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:222
#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:225
#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:226
msgid "Manual by topic"
msgstr "Manuel par sujet"

#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:229
msgid "*Compatibility of lease duration QoS policies:*"
msgstr "*Compatibilité des politiques QoS de durée de location :*"

#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:258
msgid ""
"In order for a connection to be made, all of the policies that affect "
"compatibility must be compatible. For example, even if a requested and "
"offered QoS profile pair has compatible reliability QoS policies, but they "
"have incompatible durability QoS policies, a connection will still not be "
"made."
msgstr ""
"Pour qu'une connexion soit établie, toutes les stratégies qui affectent la "
"compatibilité doivent être compatibles. Par exemple, même si une paire de "
"profils QoS demandée et offerte a des politiques QoS de fiabilité "
"compatibles, mais qu'elles ont des politiques QoS de durabilité "
"incompatibles, une connexion ne sera toujours pas établie."

#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:261
msgid ""
"When connections are not made, no messages will be passed between the "
"publisher and subscription. There are mechanisms to detect this situation, "
"which will be covered in a later section."
msgstr ""
"Lorsque les connexions ne sont pas établies, aucun message ne sera transmis "
"entre l'éditeur et l'abonnement. Il existe des mécanismes pour détecter "
"cette situation, qui seront couverts dans une section ultérieure."

#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:267
msgid ""
"Historically in ROS 1, any publisher and subscriber with the same message "
"type on the same topic would be connected. The possibility of incompatible "
"requested and offered QoS profiles is something new to be aware of when "
"using ROS 2."
msgstr ""
"Historiquement, dans ROS 1, tout éditeur et abonné avec le même type de "
"message sur le même sujet serait connecté. La possibilité de profils QoS "
"demandés et proposés incompatibles est quelque chose de nouveau à prendre en"
" compte lors de l'utilisation de ROS 2."

#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:272
msgid "QoS events"
msgstr "Événements de qualité de service"

#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:274
msgid ""
"Some QoS policies have possible events related to them. Developers may "
"provide each publisher and subscription with callback functions that are "
"triggered by these QoS events and handle them in a way they see fit, similar"
" to how messages received on a topic are handled."
msgstr ""
"Certaines stratégies de QoS ont des événements possibles qui leur sont liés."
" Les développeurs peuvent fournir à chaque éditeur et abonnement des "
"fonctions de rappel déclenchées par ces événements QoS et les gérer comme "
"ils l'entendent, de la même manière que les messages reçus sur un sujet sont"
" traités."

#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:277
msgid ""
"Developers may subscribe to the following QoS events that are associated "
"with a publisher:"
msgstr ""
"Les développeurs peuvent s'abonner aux événements QoS suivants associés à un"
" éditeur :"

#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:279
msgid "Offered deadline missed"
msgstr "Délai proposé manqué"

#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:281
msgid ""
"The publisher has not published a message within the expected duration that "
"was set out by the deadline QoS policy."
msgstr ""
"L'éditeur n'a pas publié de message dans le délai prévu défini par la "
"politique de qualité de service des délais."

#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:283
msgid "Liveliness lost"
msgstr "La vivacité a perdu"

#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:285
msgid ""
"The publisher has failed to indicate its liveliness within the lease "
"duration."
msgstr "L'éditeur a omis d'indiquer sa vivacité dans la durée du bail."

#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:287
msgid "Offered incompatible QoS"
msgstr "Qualité de service incompatible offerte"

#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:289
msgid ""
"The publisher has encountered a subscription on the same topic that is "
"requesting a QoS profile that the offered QoS profile cannot satisfy, "
"resulting in no connection between the publisher and that subscription."
msgstr ""
"L'éditeur a rencontré un abonnement sur le même sujet qui demande un profil "
"QoS que le profil QoS proposé ne peut pas satisfaire, ce qui entraîne "
"l'absence de connexion entre l'éditeur et cet abonnement."

#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:291
msgid ""
"Developers may subscribe to the following QoS events that are associated "
"with a subscription:"
msgstr ""
"Les développeurs peuvent s'abonner aux événements QoS suivants associés à un"
" abonnement :"

#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:293
msgid "Requested deadline missed"
msgstr "Délai demandé dépassé"

#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:295
msgid ""
"The subscription has not received a message within the expected duration "
"that was set out by the deadline QoS policy."
msgstr ""
"L'abonnement n'a pas reçu de message dans le délai prévu défini par la "
"politique QoS d'échéance."

#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:297
msgid "Liveliness changed"
msgstr "La vivacité a changé"

#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:299
msgid ""
"The subscription has noticed that one or more publishers on the subscribed "
"topic has failed to indicate their liveliness within the lease duration."
msgstr ""
"L'abonnement a remarqué qu'un ou plusieurs éditeurs sur le sujet abonné "
"n'ont pas indiqué leur activité pendant la durée du bail."

#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:301
msgid "Requested incompatible QoS"
msgstr "QoS incompatible demandée"

#: ../../source/Concepts/About-Quality-of-Service-Settings.rst:303
msgid ""
"The subscription has encountered a publisher on the same topic that is "
"offering a QoS profile that does not satisfy the requested QoS profile, "
"resulting in no connection between the subscription and that publisher."
msgstr ""
"L'abonnement a rencontré un éditeur sur le même sujet qui propose un profil "
"QoS qui ne satisfait pas le profil QoS demandé, ce qui entraîne l'absence de"
" connexion entre l'abonnement et cet éditeur."

#: ../../source/Concepts/About-ROS-2-Client-Libraries.rst:10
msgid "About ROS 2 client libraries"
msgstr "À propos des bibliothèques clientes ROS 2"

#: ../../source/Concepts/About-ROS-2-Client-Libraries.rst:18
msgid ""
"Client libraries are the APIs that allow users to implement their ROS code. "
"Using client libraries, users gain access to ROS concepts such as nodes, "
"topics, services, etc. Client libraries come in a variety of programming "
"languages so that users may write ROS code in the language that is best-"
"suited for their application. For example, you might prefer to write "
"visualization tools in Python because it makes prototyping iterations "
"faster, while for parts of your system that are concerned with efficiency, "
"the nodes might be better implemented in C++."
msgstr ""
"Les bibliothèques clientes sont les API qui permettent aux utilisateurs "
"d'implémenter leur code ROS. À l'aide de bibliothèques clientes, les "
"utilisateurs ont accès aux concepts ROS tels que les nœuds, les sujets, les "
"services, etc. Les bibliothèques clientes sont disponibles dans une variété "
"de langages de programmation afin que les utilisateurs puissent écrire du "
"code ROS dans le langage le mieux adapté à leur application. Par exemple, "
"vous préférerez peut-être écrire des outils de visualisation en Python car "
"cela accélère les itérations de prototypage, tandis que pour les parties de "
"votre système qui sont concernées par l'efficacité, les nœuds pourraient "
"être mieux implémentés en C++."

#: ../../source/Concepts/About-ROS-2-Client-Libraries.rst:23
msgid ""
"Nodes written using different client libraries are able to share messages "
"with each other because all client libraries implement code generators that "
"provide users with the capability to interact with ROS interface files in "
"the respective language."
msgstr ""
"Les nœuds écrits à l'aide de différentes bibliothèques clientes peuvent "
"partager des messages entre eux car toutes les bibliothèques clientes "
"implémentent des générateurs de code qui permettent aux utilisateurs "
"d'interagir avec les fichiers d'interface ROS dans la langue respective."

#: ../../source/Concepts/About-ROS-2-Client-Libraries.rst:25
msgid ""
"In addition to the language-specific communication tools, client libraries "
"expose to users the core functionality that makes ROS “ROS”. For example, "
"here is a list of functionality that can typically be accessed through a "
"client library:"
msgstr ""
"En plus des outils de communication spécifiques au langage, les "
"bibliothèques clientes exposent aux utilisateurs les fonctionnalités de base"
" qui font de ROS « ROS ». Par exemple, voici une liste de fonctionnalités "
"généralement accessibles via une bibliothèque client :"

#: ../../source/Concepts/About-ROS-2-Client-Libraries.rst:29
msgid "Names and namespaces"
msgstr "Noms et espaces de noms"

#: ../../source/Concepts/About-ROS-2-Client-Libraries.rst:30
msgid "Time (real or simulated)"
msgstr "Temps (réel ou simulé)"

#: ../../source/Concepts/About-ROS-2-Client-Libraries.rst:32
msgid "Console logging"
msgstr "Journalisation de la console"

#: ../../source/Concepts/About-ROS-2-Client-Libraries.rst:33
msgid "Threading model"
msgstr "Modèle de filetage"

#: ../../source/Concepts/About-ROS-2-Client-Libraries.rst:34
msgid "Intra-process communication"
msgstr "Communication intra-processus"

#: ../../source/Concepts/About-ROS-2-Client-Libraries.rst:37
msgid "Supported client libraries"
msgstr "Bibliothèques clientes prises en charge"

#: ../../source/Concepts/About-ROS-2-Client-Libraries.rst:39
msgid ""
"The C++ client library (``rclcpp``) and the Python client library "
"(``rclpy``) are both client libraries which utilize common functionality in "
"the RCL."
msgstr ""
"La bibliothèque cliente C++ (``rclcpp``) et la bibliothèque cliente Python "
"(``rclpy``) sont toutes deux des bibliothèques clientes qui utilisent des "
"fonctionnalités communes dans la RCL."

#: ../../source/Concepts/About-ROS-2-Client-Libraries.rst:42
msgid "The ``rclcpp`` Package"
msgstr "Le paquet ``rclcpp``"

#: ../../source/Concepts/About-ROS-2-Client-Libraries.rst:44
msgid ""
"The ROS Client Library for C++ (``rclcpp``) is the user facing, C++ "
"idiomatic interface which provides all of the ROS client functionality like "
"creating nodes, publisher, and subscribers. ``rclcpp`` builds on top of "
"``rcl`` and the ``rosidl`` |API|, and it is designed to be used with the C++"
" messages generated by ``rosidl_generator_cpp``."
msgstr ""
"La bibliothèque cliente ROS pour C++ (``rclcpp``) est l'interface "
"idiomatique C++ orientée vers l'utilisateur qui fournit toutes les "
"fonctionnalités du client ROS telles que la création de nœuds, l'éditeur et "
"les abonnés. ``rclcpp`` se construit au-dessus de ``rcl`` et de ``rosidl`` "
"|API|, et il est conçu pour être utilisé avec les messages C++ générés par "
"``rosidl_generator_cpp``."

#: ../../source/Concepts/About-ROS-2-Client-Libraries.rst:47
msgid ""
"``rclcpp`` makes use of all the features of C++ and C++17 to make the "
"interface as easy to use as possible, but since it reuses the implementation"
" in ``rcl`` it is able maintain a consistent behavior with the other client "
"libraries that use the ``rcl`` |API|."
msgstr ""
"``rclcpp`` utilise toutes les fonctionnalités de C++ et C++17 pour rendre "
"l'interface aussi facile à utiliser que possible, mais puisqu'il réutilise "
"l'implémentation dans ``rcl``, il est capable de maintenir un comportement "
"cohérent avec le d'autres bibliothèques clientes qui utilisent l'|API| "
"``rcl``."

#: ../../source/Concepts/About-ROS-2-Client-Libraries.rst:49
msgid ""
"The ``rclcpp`` repository is located on GitHub at `ros2/rclcpp "
"<https://github.com/ros2/rclcpp>`_ and contains the |package| ``rclcpp``. "
"The generated |API| documentation is here:"
msgstr ""
"Le référentiel ``rclcpp`` est situé sur GitHub à `ros2/rclcpp "
"<https://github.com/ros2/rclcpp>`_ et contient le |package| ``rclcpp``. "
"L'|API| générée la documentation est ici :"

#: ../../source/Concepts/About-ROS-2-Client-Libraries.rst:52
msgid "`api/rclcpp/index.html <http://docs.ros.org/en/rolling/p/rclcpp>`_"
msgstr "`api/rclcpp/index.html <http://docs.ros.org/en/rolling/p/rclcpp>`_"

#: ../../source/Concepts/About-ROS-2-Client-Libraries.rst:55
msgid "The ``rclpy`` Package"
msgstr "Le paquet ``rclpy``"

#: ../../source/Concepts/About-ROS-2-Client-Libraries.rst:57
msgid ""
"The ROS Client Library for Python (``rclpy``) is the Python counterpart to "
"the C++ client library. Like the C++ client library, ``rclpy`` also builds "
"on top of the ``rcl`` C API for its implementation. The interface provides "
"an idiomatic Python experience which uses native Python types and patterns "
"like lists and context objects, but by using the ``rcl`` |API| in the "
"implementation it stays consistent with the other client libraries in terms "
"of feature parity and behavior. In addition to providing Python idiomatic "
"bindings around the ``rcl`` |API| and Python classes for each message, the "
"Python client library takes care of the execution model, using "
"``threading.Thread`` or similar to run the functions in the ``rcl`` |API|."
msgstr ""
"La bibliothèque cliente ROS pour Python (``rclpy``) est l'équivalent Python "
"de la bibliothèque cliente C++. Comme la bibliothèque cliente C++, ``rclpy``"
" s'appuie également sur l'API C ``rcl`` pour son implémentation. L'interface"
" fournit une expérience Python idiomatique qui utilise des types et des "
"modèles Python natifs comme des listes et des objets de contexte, mais en "
"utilisant l'API ``rcl`` |API| dans l'implémentation, il reste cohérent avec "
"les autres bibliothèques clientes en termes de parité des fonctionnalités et"
" de comportement. En plus de fournir des liaisons idiomatiques Python autour"
" de ``rcl`` |API| et Python pour chaque message, la bibliothèque cliente "
"Python s'occupe du modèle d'exécution, en utilisant ``threading.Thread`` ou "
"similaire pour exécuter les fonctions dans ``rcl`` |API|."

#: ../../source/Concepts/About-ROS-2-Client-Libraries.rst:62
msgid ""
"Like C++ it generates custom Python code for each ROS message that the user "
"interacts with, but unlike C++ it eventually converts the native Python "
"message object into the C version of the message. All operations happen on "
"the Python version of the messages until they need to be passed into the "
"``rcl`` layer, at which point they are converted into the plain C version of"
" the message so it can be passed into the ``rcl`` C |API|. This is avoided "
"if possible when communicating between publishers and subscribers in the "
"same process to cut down on the conversion into and out of Python."
msgstr ""
"Comme C++, il génère du code Python personnalisé pour chaque message ROS "
"avec lequel l'utilisateur interagit, mais contrairement à C++, il convertit "
"finalement l'objet de message Python natif dans la version C du message. "
"Toutes les opérations se produisent sur la version Python des messages "
"jusqu'à ce qu'elles aient besoin d'être passées dans la couche ``rcl``, à "
"quel point elles sont converties dans la version C ordinaire du message afin"
" qu'elle puisse être passée dans le ``rcl` ` C |API|. Ceci est évité si "
"possible lors de la communication entre les éditeurs et les abonnés dans le "
"même processus pour réduire la conversion vers et depuis Python."

#: ../../source/Concepts/About-ROS-2-Client-Libraries.rst:66
msgid ""
"The ``rclpy`` repository is located on GitHub at `ros2/rclpy "
"<https://github.com/ros2/rclpy>`_ and contains the |package| ``rclpy``. The "
"generated |API| documentation is here:"
msgstr ""
"Le référentiel ``rclpy`` est situé sur GitHub à `ros2/rclpy "
"<https://github.com/ros2/rclpy>`_ et contient le |package| ``rclpy``. "
"L'|API| générée la documentation est ici :"

#: ../../source/Concepts/About-ROS-2-Client-Libraries.rst:69
msgid ""
"`api/rclpy/index.html <http://docs.ros2.org/foxy/api/rclpy/index.html>`_"
msgstr ""
"`api/rclpy/index.html <http://docs.ros2.org/foxy/api/rclpy/index.html>`_"

#: ../../source/Concepts/About-ROS-2-Client-Libraries.rst:73
msgid "Community-maintained"
msgstr "Maintenu par la communauté"

#: ../../source/Concepts/About-ROS-2-Client-Libraries.rst:75
msgid ""
"While the C++ and Python client libraries are maintained by the core ROS 2 "
"team, members of the ROS 2 community maintain additional client libraries:"
msgstr ""
"Alors que les bibliothèques clientes C++ et Python sont gérées par l'équipe "
"principale de ROS 2, les membres de la communauté ROS 2 maintiennent des "
"bibliothèques clientes supplémentaires :"

#: ../../source/Concepts/About-ROS-2-Client-Libraries.rst:77
msgid ""
"`Ada <https://github.com/ada-ros/ada4ros2>`__ Ada binding and tools for ROS "
"2 - workspace overlay."
msgstr ""
"`Ada <https://github.com/ada-ros/ada4ros2>`__ Liaison Ada et outils pour ROS"
" 2 - superposition d'espace de travail."

#: ../../source/Concepts/About-ROS-2-Client-Libraries.rst:78
msgid ""
"`C <https://github.com/ros2/rclc>`__  ``rclc`` does not put a layer on top "
"of rcl but complements rcl to make rcl+rclc a feature-complete client "
"library in C. See `micro.ros.org <https://micro.ros.org/>`__ for tutorials."
msgstr ""
"`C <https://github.com/ros2/rclc>`__ ``rclc`` ne place pas de couche au-"
"dessus de rcl mais complète rcl pour faire de rcl+rclc une bibliothèque "
"client complète en C. Voir ` micro.ros.org <https://micro.ros.org/>`__ pour "
"les tutoriels."

#: ../../source/Concepts/About-ROS-2-Client-Libraries.rst:79
msgid ""
"`JVM and Android <https://github.com/ros2-java>`__ Java and Android bindings"
" for ROS 2."
msgstr ""
"`JVM et Android <https://github.com/ros2-java>`__ Liaisons Java et Android "
"pour ROS 2."

#: ../../source/Concepts/About-ROS-2-Client-Libraries.rst:80
msgid ""
"`_.NET Core, UWP and C# <https://github.com/esteve/ros2_dotnet>`__ This is a"
" collection of projects (bindings, code generator, examples and more) for "
"writing ROS 2 applications for .NET Core and .NET Standard."
msgstr ""
"`_.NET Core, UWP et C# <https://github.com/esteve/ros2_dotnet>`__ Ceci est "
"une collection de projets (liaisons, générateur de code, exemples et plus) "
"pour écrire des applications ROS 2 pour .NET Core et Norme .NET."

#: ../../source/Concepts/About-ROS-2-Client-Libraries.rst:81
msgid ""
"`Node.js <https://www.npmjs.com/package/rclnodejs>`__ rclnodejs is a Node.js"
" client for the Robot Operating System (ROS 2). It provides a simple and "
"easy JavaScript API for ROS 2 programming."
msgstr ""
"`Node.js <https://www.npmjs.com/package/rclnodejs>`__ rclnodejs est un "
"client Node.js pour le système d'exploitation Robot (ROS 2). Il fournit une "
"API JavaScript simple et facile pour la programmation ROS 2."

#: ../../source/Concepts/About-ROS-2-Client-Libraries.rst:82
msgid ""
"`Rust <https://github.com/ros2-rust/ros2_rust>`__ This is a set of projects "
"(the rclrs client library, code generator, examples and more) that enables "
"developers to write ROS 2 applications in Rust."
msgstr ""
"`Rust <https://github.com/ros2-rust/ros2_rust>`__ Il s'agit d'un ensemble de"
" projets (la bibliothèque cliente rclrs, le générateur de code, des "
"exemples, etc.) qui permet aux développeurs d'écrire des applications ROS 2 "
"dans Rust."

#: ../../source/Concepts/About-ROS-2-Client-Libraries.rst:84
msgid "Older, unmaintained client libraries are:"
msgstr "Les bibliothèques clientes plus anciennes et non maintenues sont :"

#: ../../source/Concepts/About-ROS-2-Client-Libraries.rst:86
msgid "`C# <https://github.com/firesurfer/rclcs>`__"
msgstr "`C# <https://github.com/firesurfer/rclcs>`__"

#: ../../source/Concepts/About-ROS-2-Client-Libraries.rst:87
msgid "`Objective C and iOS <https://github.com/esteve/ros2_objc>`__"
msgstr "`Objectif C et iOS <https://github.com/esteve/ros2_objc>`__"

#: ../../source/Concepts/About-ROS-2-Client-Libraries.rst:91
msgid "Common functionality: the RCL"
msgstr "Fonctionnalité commune : la RCL"

#: ../../source/Concepts/About-ROS-2-Client-Libraries.rst:93
msgid ""
"Most of the functionality found in a client library is not specific to the "
"programming language of the client library. For example, the behavior of "
"parameters and the logic of namespaces should ideally be the same across all"
" programming languages. Because of this, rather than implementing the common"
" functionality from scratch, client libraries make use of a common core ROS "
"Client Library (RCL) interface that implements logic and behavior of ROS "
"concepts that is not language-specific. As a result, client libraries only "
"need to wrap the common functionality in the RCL with foreign function "
"interfaces. This keeps client libraries thinner and easier to develop. For "
"this reason the common RCL functionality is exposed with C interfaces as the"
" C language is typically the easiest language for client libraries to wrap."
msgstr ""
"La plupart des fonctionnalités trouvées dans une bibliothèque cliente ne "
"sont pas spécifiques au langage de programmation de la bibliothèque cliente."
" Par exemple, le comportement des paramètres et la logique des espaces de "
"noms devraient idéalement être les mêmes dans tous les langages de "
"programmation. Pour cette raison, plutôt que d'implémenter la fonctionnalité"
" commune à partir de zéro, les bibliothèques clientes utilisent une "
"interface de bibliothèque cliente ROS (RCL) de base commune qui implémente "
"la logique et le comportement des concepts ROS qui ne sont pas spécifiques "
"au langage. Par conséquent, les bibliothèques clientes n'ont besoin que "
"d'encapsuler la fonctionnalité commune dans la RCL avec des interfaces de "
"fonctions étrangères. Cela permet de garder les bibliothèques clientes plus "
"fines et plus faciles à développer. Pour cette raison, la fonctionnalité RCL"
" commune est exposée avec les interfaces C car le langage C est généralement"
" le langage le plus facile à envelopper pour les bibliothèques clientes."

#: ../../source/Concepts/About-ROS-2-Client-Libraries.rst:100
msgid ""
"In addition to making the client libraries light-weight, an advantage of "
"having the common core is that the behavior between languages is more "
"consistent. If any changes are made to the logic/behavior of the "
"functionality in the core RCL -- namespaces, for example -- all client "
"libraries that use the RCL will have these changes reflected. Furthermore, "
"having the common core means that maintaining multiple client libraries "
"becomes less work when it comes to bug fixes."
msgstr ""
"En plus de rendre les bibliothèques clientes légères, un avantage d'avoir le"
" noyau commun est que le comportement entre les langages est plus cohérent. "
"Si des modifications sont apportées à la logique/au comportement de la "
"fonctionnalité dans la RCL principale - les espaces de noms, par exemple - "
"toutes les bibliothèques clientes qui utilisent la RCL verront ces "
"modifications reflétées. De plus, avoir le noyau commun signifie que la "
"maintenance de plusieurs bibliothèques clientes devient moins de travail "
"lorsqu'il s'agit de corrections de bogues."

#: ../../source/Concepts/About-ROS-2-Client-Libraries.rst:104
msgid ""
"`The API documentation for the RCL can be found here. "
"<https://docs.ros2.org/latest/api/rcl/>`__"
msgstr ""
"`La documentation de l'API pour la RCL peut être trouvée ici. "
"<https://docs.ros2.org/latest/api/rcl/>`__"

#: ../../source/Concepts/About-ROS-2-Client-Libraries.rst:107
msgid "Language-specific functionality"
msgstr "Fonctionnalité spécifique à la langue"

#: ../../source/Concepts/About-ROS-2-Client-Libraries.rst:109
msgid ""
"Client library concepts that require language-specific features/properties "
"are not implemented in the RCL but instead are implemented in each client "
"library. For example, threading models used by “spin” functions will have "
"implementations that are specific to the language of the client library."
msgstr ""
"Les concepts de bibliothèque client qui nécessitent des "
"fonctionnalités/propriétés spécifiques à la langue ne sont pas implémentés "
"dans la RCL mais sont implémentés dans chaque bibliothèque client. Par "
"exemple, les modèles de threading utilisés par les fonctions \"spin\" auront"
" des implémentations spécifiques au langage de la bibliothèque cliente."

#: ../../source/Concepts/About-ROS-2-Client-Libraries.rst:113
msgid "Demo"
msgstr "Démo"

#: ../../source/Concepts/About-ROS-2-Client-Libraries.rst:115
msgid ""
"For a walkthrough of the message exchange between a publisher using "
"``rclpy`` and a subscriber using ``rclcpp``\\ , we encourage you to watch "
"`this ROSCon talk <https://vimeo.com/187696091>`__ starting at 17:25 `(here "
"are the slides) "
"<https://roscon.ros.org/2016/presentations/ROSCon%202016%20-%20ROS%202%20Update.pdf>`__."
msgstr ""
"Pour une présentation de l'échange de messages entre un éditeur utilisant "
"``rclpy`` et un abonné utilisant ``rclcpp``\\ , nous vous encourageons à "
"regarder `cette conférence ROSCon <https://vimeo.com/187696091>`__ à partir "
"de à 17h25 `(voici les slides) "
"<https://roscon.ros.org/2016/presentations/ROSCon%202016%20-%20ROS%202%20Update.pdf>`__."

#: ../../source/Concepts/About-ROS-2-Client-Libraries.rst:120
msgid ""
"In ROS 1, all client libraries are developed \"from the ground up\". This "
"allows for the ROS 1 Python client library to be implemented purely in "
"Python, for example, which brings benefits of such as not needing to compile"
" code. However, naming conventions and behaviors are not always consistent "
"between client libraries, bug fixes have to be done in multiple places, and "
"there is a lot of functionality that has only ever been implemented in one "
"client library (e.g. UDPROS)."
msgstr ""
"Dans ROS 1, toutes les bibliothèques clientes sont développées \"à partir de"
" zéro\". Cela permet à la bibliothèque client Python ROS 1 d'être "
"implémentée uniquement en Python, par exemple, ce qui présente des avantages"
" tels que l'absence de compilation de code. Cependant, les conventions de "
"dénomination et les comportements ne sont pas toujours cohérents entre les "
"bibliothèques clientes, les corrections de bogues doivent être effectuées à "
"plusieurs endroits et de nombreuses fonctionnalités n'ont jamais été "
"implémentées que dans une seule bibliothèque cliente (par exemple, UDPROS)."

#: ../../source/Concepts/About-ROS-2-Client-Libraries.rst:125
msgid "Summary"
msgstr "Résumé"

#: ../../source/Concepts/About-ROS-2-Client-Libraries.rst:127
msgid ""
"By utilizing the common core ROS client library, client libraries written in"
" a variety of programming languages are easier to write and have more "
"consistent behavior."
msgstr ""
"En utilisant la bibliothèque client ROS de base commune, les bibliothèques "
"client écrites dans une variété de langages de programmation sont plus "
"faciles à écrire et ont un comportement plus cohérent."

#: ../../source/Concepts/About-ROS-2-Parameters.rst:8
msgid "About parameters in ROS 2"
msgstr "À propos des paramètres dans ROS 2"

#: ../../source/Concepts/About-ROS-2-Parameters.rst:16
msgid ""
"Parameters in ROS are associated with individual nodes. Parameters are used "
"to configure nodes at startup (and during runtime), without changing the "
"code. The lifetime of a parameter is tied to the lifetime of the node "
"(though the node could implement some sort of persistence to reload values "
"after restart)."
msgstr ""
"Les paramètres dans ROS sont associés à des nœuds individuels. Les "
"paramètres sont utilisés pour configurer les nœuds au démarrage (et pendant "
"l'exécution), sans changer le code. La durée de vie d'un paramètre est liée "
"à la durée de vie du nœud (bien que le nœud puisse implémenter une sorte de "
"persistance pour recharger les valeurs après le redémarrage)."

#: ../../source/Concepts/About-ROS-2-Parameters.rst:20
msgid ""
"Parameters are addressed by node name, node namespace, parameter name, and "
"parameter namespace. Providing a parameter namespace is optional."
msgstr ""
"Les paramètres sont adressés par nom de nœud, espace de noms de nœud, nom de"
" paramètre et espace de noms de paramètre. La fourniture d'un espace de noms"
" de paramètre est facultative."

#: ../../source/Concepts/About-ROS-2-Parameters.rst:23
msgid ""
"Each parameter consists of a key, a value, and a descriptor. The key is a "
"string and the value is one of the following types: bool, int64, float64, "
"string, byte[], bool[], int64[], float64[] or string[]. By default all "
"descriptors are empty, but can contain parameter descriptions, value ranges,"
" type information, and additional constraints."
msgstr ""
"Chaque paramètre se compose d'une clé, d'une valeur et d'un descripteur. La "
"clé est une chaîne et la valeur est l'un des types suivants : bool, int64, "
"float64, string, byte[], bool[], int64[], float64[] ou string[]. Par défaut,"
" tous les descripteurs sont vides, mais peuvent contenir des descriptions de"
" paramètres, des plages de valeurs, des informations de type et des "
"contraintes supplémentaires."

#: ../../source/Concepts/About-ROS-2-Parameters.rst:27
msgid ""
"For an hands-on tutorial with ROS parameters see "
":doc:`../Tutorials/Beginner-CLI-Tools/Understanding-"
"ROS2-Parameters/Understanding-ROS2-Parameters`."
msgstr ""
"Pour un tutoriel pratique avec les paramètres ROS, voir "
":doc:`../Tutorials/Beginner-CLI-Tools/Understanding-"
"ROS2-Parameters/Understanding-ROS2-Parameters`."

#: ../../source/Concepts/About-ROS-2-Parameters.rst:30
msgid "Parameters background"
msgstr "Contexte des paramètres"

#: ../../source/Concepts/About-ROS-2-Parameters.rst:33
msgid "Declaring parameters"
msgstr "Déclaration des paramètres"

#: ../../source/Concepts/About-ROS-2-Parameters.rst:35
msgid ""
"By default, a node needs to *declare* all of the parameters that it will "
"accept during its lifetime. This is so that the type and the name of the "
"parameter are well-defined at node startup time, which reduces the chances "
"of misconfiguration later on. See :doc:`../Tutorials/Beginner-Client-"
"Libraries/Using-Parameters-In-A-Class-CPP` or :doc:`../Tutorials/Beginner-"
"Client-Libraries/Using-Parameters-In-A-Class-Python` for tutorials on "
"declaring and using parameters from a node."
msgstr ""
"Par défaut, un nœud doit *déclarer* tous les paramètres qu'il acceptera "
"pendant sa durée de vie. Ainsi, le type et le nom du paramètre sont bien "
"définis au démarrage du nœud, ce qui réduit les risques de mauvaise "
"configuration par la suite. Voir :doc:`../Tutorials/Beginner-Client-"
"Libraries/Using-Parameters-In-A-Class-CPP` ou :doc:`../Tutorials/Beginner-"
"Client-Libraries/Using-Parameters-In- A-Class-Python` pour des tutoriels sur"
" la déclaration et l'utilisation des paramètres d'un nœud."

#: ../../source/Concepts/About-ROS-2-Parameters.rst:39
msgid ""
"For some types of nodes, not all of the parameters will be known ahead of "
"time. In these cases, the node can be instantiated with "
"``allow_undeclared_parameters`` set to ``true``, which will allow parameters"
" to be get and set on the node even if they haven't been declared."
msgstr ""
"Pour certains types de nœuds, tous les paramètres ne seront pas connus à "
"l'avance. Dans ces cas, le nœud peut être instancié avec "
"``allow_undeclared_parameters`` défini sur ``true``, ce qui permettra "
"d'obtenir et de définir des paramètres sur le nœud même s'ils n'ont pas été "
"déclarés."

#: ../../source/Concepts/About-ROS-2-Parameters.rst:43
msgid "Parameter types"
msgstr "Types de paramètres"

#: ../../source/Concepts/About-ROS-2-Parameters.rst:45
msgid ""
"Each parameter on a ROS 2 node has one of the pre-defined parameter types as"
" mentioned in the Overview. By default, attempts to change the type of a "
"declared parameter at runtime will fail. This prevents common mistakes, such"
" as putting a boolean value into an integer parameter."
msgstr ""
"Chaque paramètre d'un nœud ROS 2 possède l'un des types de paramètres "
"prédéfinis, comme mentionné dans la Présentation. Par défaut, les tentatives"
" de modification du type d'un paramètre déclaré lors de l'exécution "
"échoueront. Cela évite les erreurs courantes, telles que l'insertion d'une "
"valeur booléenne dans un paramètre entier."

#: ../../source/Concepts/About-ROS-2-Parameters.rst:49
msgid ""
"If a parameter needs to be multiple different types, and the code using the "
"parameter can handle it, this default behavior can be changed. When the "
"parameter is declared, it should be declared using a ``ParameterDescriptor``"
" with the ``dynamic_typing`` member variable set to ``true``."
msgstr ""
"Si un paramètre doit être de plusieurs types différents et que le code "
"utilisant le paramètre peut le gérer, ce comportement par défaut peut être "
"modifié. Lorsque le paramètre est déclaré, il doit être déclaré en utilisant"
" un ``ParameterDescriptor`` avec la variable membre ``dynamic_typing`` "
"définie sur ``true``."

#: ../../source/Concepts/About-ROS-2-Parameters.rst:53
msgid "Parameter callbacks"
msgstr "Rappels de paramètres"

#: ../../source/Concepts/About-ROS-2-Parameters.rst:55
msgid ""
"A ROS 2 node can register two different types of callbacks to be informed "
"when changes are happening to parameters. The reason that there are two "
"types of callbacks is to have a chance to intervene before the parameter "
"change happens, and to have a chance to react after the parameter change "
"happens. A node can register for both, either, or none of the callback "
"types. Both types are described below."
msgstr ""
"Un nœud ROS 2 peut enregistrer deux types de rappels différents pour être "
"informé lorsque des modifications sont apportées aux paramètres. La raison "
"pour laquelle il existe deux types de rappels est d'avoir une chance "
"d'intervenir avant que le changement de paramètre ne se produise et d'avoir "
"une chance de réagir après que le changement de paramètre se soit produit. "
"Un nœud peut s'enregistrer pour les deux, l'un ou l'autre des types de "
"rappel. Les deux types sont décrits ci-dessous."

#: ../../source/Concepts/About-ROS-2-Parameters.rst:60
msgid ""
"The first type is known as a \"set parameter\" callback, and can be "
"installed by calling ``add_on_set_parameters_callback``. The callback should"
" accept a list of ``Parameter`` objects, and return an "
"``rcl_interfaces/msg/SetParametersResult``. This callback will be called "
"before a parameter is declared or changed on a node. The main purpose of "
"this callback is to give the user the ability to inspect the upcoming change"
" to the parameter and explicitly reject the change."
msgstr ""
"Le premier type est connu sous le nom de callback \"set parameters\" et peut"
" être installé en appelant ``add_on_set_parameters_callback``. Le rappel "
"doit accepter une liste d'objets ``Parameter`` et renvoyer un "
"``rcl_interfaces/msg/SetParametersResult``. Ce rappel sera appelé avant "
"qu'un paramètre ne soit déclaré ou modifié sur un nœud. L'objectif principal"
" de ce rappel est de donner à l'utilisateur la possibilité d'inspecter la "
"modification à venir du paramètre et de rejeter explicitement la "
"modification."

#: ../../source/Concepts/About-ROS-2-Parameters.rst:66
msgid ""
"It is important that \"set parameter\" callbacks have no side-effects. Since"
" multiple \"set parameter\" callbacks can be chained, there is no way for an"
" individual callback to know if a later callback will reject the update. If "
"the individual callback were to make changes to the class it is in, for "
"instance, it may get out-of-sync with the actual parameter. To get a "
"callback *after* a parameter has been successfully changed, see the next "
"type of callback below."
msgstr ""
"Il est important que les rappels \"set parameters\" n'aient pas d'effets "
"secondaires. Étant donné que plusieurs rappels \"set parameters\" peuvent "
"être chaînés, il n'y a aucun moyen pour un rappel individuel de savoir si un"
" rappel ultérieur rejettera la mise à jour. Si le rappel individuel devait "
"apporter des modifications à la classe dans laquelle il se trouve, par "
"exemple, il peut se désynchroniser avec le paramètre réel. Pour obtenir un "
"rappel * après * qu'un paramètre a été modifié avec succès, voir le type de "
"rappel suivant ci-dessous."

#: ../../source/Concepts/About-ROS-2-Parameters.rst:71
msgid ""
"The second type of callback is known as an \"on parameter event\" callback, "
"and can be installed by calling ``on_parameter_event``. The callback should "
"accept an ``rcl_interfaces/msg/ParameterEvent`` object, and return nothing. "
"This callback will be called after all parameters have been declared, "
"changed, or deleted. The main purpose of this callback is to give the user "
"the ability to react to changes from parameters that have successfully been "
"accepted."
msgstr ""
"Le deuxième type de rappel est connu sous le nom de rappel \"événement sur "
"paramètre\" et peut être installé en appelant ``on_parameter_event``. Le "
"rappel doit accepter un objet ``rcl_interfaces/msg/ParameterEvent`` et ne "
"rien retourner. Ce rappel sera appelé après que tous les paramètres auront "
"été déclarés, modifiés ou supprimés. L'objectif principal de ce rappel est "
"de donner à l'utilisateur la possibilité de réagir aux modifications des "
"paramètres qui ont été acceptés avec succès."

#: ../../source/Concepts/About-ROS-2-Parameters.rst:77
msgid "Interacting with parameters"
msgstr "Interaction avec les paramètres"

#: ../../source/Concepts/About-ROS-2-Parameters.rst:79
msgid ""
"ROS 2 nodes can perform parameter operations through node APIs as described "
"in :doc:`../Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-"
"CPP` or :doc:`../Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-"
"Class-Python`. External processes can perform parameter operations via "
"parameter services that are created by default when a node is instantiated. "
"The services that are created by default are:"
msgstr ""
"Les nœuds ROS 2 peuvent effectuer des opérations sur les paramètres via les "
"API de nœud comme décrit dans :doc:`../Tutorials/Beginner-Client-"
"Libraries/Using-Parameters-In-A-Class-CPP` ou :doc:`../Tutorials/ Beginner-"
"Client-Libraries/Using-Parameters-In-A-Class-Python`. Les processus externes"
" peuvent effectuer des opérations sur les paramètres via des services de "
"paramètres qui sont créés par défaut lorsqu'un nœud est instancié. Les "
"services créés par défaut sont :"

#: ../../source/Concepts/About-ROS-2-Parameters.rst:83
msgid ""
"/node_name/describe_parameters: Uses a service type of "
"``rcl_interfaces/srv/DescribeParameters``. Given a list of parameter names, "
"returns a list of descriptors associated with the parameters."
msgstr ""
"/node_name/describe_parameters : utilise un type de service de "
"``rcl_interfaces/srv/DescribeParameters``. À partir d'une liste de noms de "
"paramètres, renvoie une liste de descripteurs associés aux paramètres."

#: ../../source/Concepts/About-ROS-2-Parameters.rst:85
msgid ""
"/node_name/get_parameter_types: Uses a service type of "
"``rcl_interfaces/srv/GetParameterTypes``. Given a list of parameter names, "
"returns a list of parameter types associated with the parameters."
msgstr ""
"/node_name/get_parameter_types : utilise un type de service de "
"``rcl_interfaces/srv/GetParameterTypes``. À partir d'une liste de noms de "
"paramètres, renvoie une liste de types de paramètres associés aux "
"paramètres."

#: ../../source/Concepts/About-ROS-2-Parameters.rst:87
msgid ""
"/node_name/get_parameters: Uses a service type of "
"``rcl_interfaces/srv/GetParameters``. Given a list of parameter names, "
"returns a list of parameter values associated with the parameters."
msgstr ""
"/node_name/get_parameters : utilise un type de service de "
"``rcl_interfaces/srv/GetParameters``. À partir d'une liste de noms de "
"paramètres, renvoie une liste de valeurs de paramètres associées aux "
"paramètres."

#: ../../source/Concepts/About-ROS-2-Parameters.rst:89
msgid ""
"/node_name/list_parameters: Uses a service type of "
"``rcl_interfaces/srv/ListParameters``. Given an optional list of parameter "
"prefixes, returns a list of the available parameters with that prefix.  If "
"the prefixes are empty, returns all parameters."
msgstr ""
"/node_name/list_parameters : utilise un type de service de "
"``rcl_interfaces/srv/ListParameters``. Étant donné une liste facultative de "
"préfixes de paramètres, renvoie une liste des paramètres disponibles avec ce"
" préfixe. Si les préfixes sont vides, renvoie tous les paramètres."

#: ../../source/Concepts/About-ROS-2-Parameters.rst:91
msgid ""
"/node_name/set_parameters: Uses a service type of "
"``rcl_interfaces/srv/SetParameters``. Given a list of parameter names and "
"values, attempts to set the parameters on the node.  Returns a list of "
"results from trying to set each parameter; some of them may have succeeded "
"and some may have failed."
msgstr ""
"/node_name/set_parameters : utilise un type de service de "
"``rcl_interfaces/srv/SetParameters``. À partir d'une liste de noms et de "
"valeurs de paramètres, tente de définir les paramètres sur le nœud. Renvoie "
"une liste des résultats de la tentative de définition de chaque paramètre ; "
"certains d'entre eux ont peut-être réussi et d'autres ont échoué."

#: ../../source/Concepts/About-ROS-2-Parameters.rst:93
msgid ""
"/node_name/set_parameters_atomically: Uses a service type of "
"``rcl_interfaces/srv/SetParametersAtomically``. Given a list of parameter "
"names and values, attempts to set the parameters on the node.  Returns a "
"single result from trying to set all parameters, so if one failed, all of "
"them failed."
msgstr ""
"/node_name/set_parameters_atomically : utilise un type de service de "
"``rcl_interfaces/srv/SetParametersAtomically``. À partir d'une liste de noms"
" et de valeurs de paramètres, tente de définir les paramètres sur le nœud. "
"Renvoie un seul résultat en essayant de définir tous les paramètres, donc si"
" l'un échoue, tous échouent."

#: ../../source/Concepts/About-ROS-2-Parameters.rst:97
msgid "Setting initial parameter values when running a node"
msgstr ""
"Définition des valeurs initiales des paramètres lors de l'exécution d'un "
"nœud"

#: ../../source/Concepts/About-ROS-2-Parameters.rst:99
msgid ""
"Initial parameter values can be set when running the node either through "
"individual command-line arguments, or through YAML files. See "
":ref:`NodeArgsParameters` for examples on how to set initial parameter "
"values."
msgstr ""
"Les valeurs initiales des paramètres peuvent être définies lors de "
"l'exécution du nœud via des arguments de ligne de commande individuels ou "
"via des fichiers YAML. Voir :ref:`NodeArgsParameters` pour des exemples sur "
"la façon de définir les valeurs initiales des paramètres."

#: ../../source/Concepts/About-ROS-2-Parameters.rst:103
msgid "Setting initial parameter values when launching nodes"
msgstr ""
"Définition des valeurs initiales des paramètres lors du lancement des nœuds"

#: ../../source/Concepts/About-ROS-2-Parameters.rst:105
msgid ""
"Initial parameter values can also be set when running the node through the "
"ROS 2 launch facility. See :doc:`this document "
"<../Tutorials/Intermediate/Launch/Using-ROS2-Launch-For-Large-Projects>` for"
" information on how to specify parameters via launch."
msgstr ""
"Les valeurs initiales des paramètres peuvent également être définies lors de"
" l'exécution du nœud via la fonction de lancement ROS 2. Voir :doc:`ce "
"document <../Tutorials/Intermediate/Launch/Using-ROS2-Launch-For-Large-"
"Projects>` pour plus d'informations sur la façon de spécifier les paramètres"
" via le lancement."

#: ../../source/Concepts/About-ROS-2-Parameters.rst:109
msgid "Manipulating parameter values at runtime"
msgstr "Manipulation des valeurs de paramètres lors de l'exécution"

#: ../../source/Concepts/About-ROS-2-Parameters.rst:111
msgid ""
"The ``ros2 param`` command is the general way to interact with parameters "
"for nodes that are already running. ``ros2 param`` uses the parameter "
"service API as described above to perform the various operations. See "
":doc:`the how-to guide <../How-To-Guides/Using-ros2-param>` for details on "
"how to use ``ros2 param``."
msgstr ""
"La commande ``ros2 param`` est le moyen général d'interagir avec les "
"paramètres des nœuds déjà en cours d'exécution. ``ros2 param`` utilise l'API"
" de service de paramètres comme décrit ci-dessus pour effectuer les "
"différentes opérations. Voir :doc:`the how-to guide <../How-To-Guides/Using-"
"ros2-param>` pour plus de détails sur l'utilisation de ``ros2 param``."

#: ../../source/Concepts/About-ROS-2-Parameters.rst:116
msgid "Migrating from ROS 1"
msgstr "Migration depuis ROS 1"

#: ../../source/Concepts/About-ROS-2-Parameters.rst:118
msgid ""
"The :doc:`Launch file migration guide <../How-To-Guides/Launch-files-"
"migration-guide>` explains how to migrate ``param`` and ``rosparam`` launch "
"tags from ROS 1 to ROS 2."
msgstr ""
"Le :doc:`Guide de migration des fichiers de lancement <../How-To-"
"Guides/Launch-files-migration-guide>` explique comment migrer les balises de"
" lancement ``param`` et ``rosparam`` de ROS 1 vers ROS 2."

#: ../../source/Concepts/About-ROS-2-Parameters.rst:120
msgid ""
"The :doc:`YAML parameter file migration guide <../How-To-Guides/Parameters-"
"YAML-files-migration-guide>` explains how to migrate parameter files from "
"ROS 1 to ROS 2."
msgstr ""
"Le :doc:`guide de migration des fichiers de paramètres YAML <../How-To-"
"Guides/Parameters-YAML-files-migration-guide>` explique comment migrer les "
"fichiers de paramètres de ROS 1 vers ROS 2."

#: ../../source/Concepts/About-ROS-2-Parameters.rst:122
msgid ""
"In ROS 1, the ``roscore`` acted like a global parameter blackboard where all"
" nodes could get and set parameters. Since there is no central ``roscore`` "
"in ROS 2, that functionality no longer exists. The recommended approach in "
"ROS 2 is to use per-node parameters that are closely tied to the nodes that "
"use them. If a global blackboard is still needed, it is possible to create a"
" dedicated node for this purpose. ROS 2 ships with one in in the ``ros-"
"rolling-demo-nodes-cpp`` package called ``parameter_blackboard``; it can be "
"run with:"
msgstr ""
"Dans ROS 1, le ``roscore`` agissait comme un tableau noir de paramètres "
"globaux où tous les nœuds pouvaient obtenir et définir des paramètres. "
"Puisqu'il n'y a pas de ``roscore`` central dans ROS 2, cette fonctionnalité "
"n'existe plus. L'approche recommandée dans ROS 2 consiste à utiliser des "
"paramètres par nœud étroitement liés aux nœuds qui les utilisent. Si un "
"tableau noir global est encore nécessaire, il est possible de créer un nœud "
"dédié à cet effet. ROS 2 est livré avec un dans le package ``ros-rolling-"
"demo-nodes-cpp`` appelé ``parameter_blackboard`` ; il peut être exécuté avec"
" :"

#: ../../source/Concepts/About-ROS-2-Parameters.rst:132
msgid ""
"The code for the ``parameter_blackboard`` is `here "
"<https://github.com/ros2/demos/blob/rolling/demo_nodes_cpp/src/parameters/parameter_blackboard.cpp>`__."
msgstr ""
"Le code pour le ``parameter_blackboard`` est `ici "
"<https://github.com/ros2/demos/blob/rolling/demo_nodes_cpp/src/parameters/parameter_blackboard.cpp>`__."

#: ../../source/Concepts/About-ROS-Interfaces.rst:8
msgid "About ROS 2 interfaces"
msgstr "À propos des interfaces ROS 2"

#: ../../source/Concepts/About-ROS-Interfaces.rst:14
msgid "1. Background"
msgstr "1. Origines"

#: ../../source/Concepts/About-ROS-Interfaces.rst:16
msgid ""
"ROS applications typically communicate through interfaces of one of three "
"types: messages, services and actions. ROS 2 uses a simplified description "
"language, the interface definition language (IDL), to describe these "
"interfaces. This description makes it easy for ROS tools to automatically "
"generate source code for the interface type in several target languages."
msgstr ""
"Les applications ROS communiquent généralement via des interfaces de l'un "
"des trois types suivants : messages, services et actions. ROS 2 utilise un "
"langage de description simplifié, le langage de définition d'interface "
"(IDL), pour décrire ces interfaces. Cette description permet aux outils ROS "
"de générer automatiquement le code source pour le type d'interface dans "
"plusieurs langages cibles."

#: ../../source/Concepts/About-ROS-Interfaces.rst:20
msgid "In this document we will describe the supported types."
msgstr "Dans ce document, nous décrirons les types pris en charge."

#: ../../source/Concepts/About-ROS-Interfaces.rst:22
msgid ""
"msg: ``.msg`` files are simple text files that describe the fields of a ROS "
"message. They are used to generate source code for messages in different "
"languages."
msgstr ""
"msg : les fichiers ``.msg`` sont de simples fichiers texte qui décrivent les"
" champs d'un message ROS. Ils sont utilisés pour générer le code source des "
"messages dans différentes langues."

#: ../../source/Concepts/About-ROS-Interfaces.rst:23
msgid ""
"srv: ``.srv`` files describe a service. They are composed of two parts: a "
"request and a response. The request and response are message declarations."
msgstr ""
"srv : les fichiers ``.srv`` décrivent un service. Ils sont composés de deux "
"parties : une requête et une réponse. La requête et la réponse sont des "
"déclarations de message."

#: ../../source/Concepts/About-ROS-Interfaces.rst:24
msgid ""
"action: ``.action`` files describe actions. They are composed of three "
"parts: a goal, a result, and feedback. Each part is a message declaration "
"itself."
msgstr ""
"action : les fichiers ``.action`` décrivent les actions. Ils sont composés "
"de trois parties : un objectif, un résultat et des commentaires. Chaque "
"partie est une déclaration de message elle-même."

#: ../../source/Concepts/About-ROS-Interfaces.rst:29
msgid "2. Message description specification"
msgstr "2. Spécification de la description des messages"

#: ../../source/Concepts/About-ROS-Interfaces.rst:31
msgid ""
"Messages are described and defined in ``.msg`` files in the ``msg/`` "
"directory of a ROS package. ``.msg`` files are composed of two parts: fields"
" and constants."
msgstr ""
"Les messages sont décrits et définis dans des fichiers ``.msg`` dans le "
"répertoire ``msg/`` d'un package ROS. Les fichiers ``.msg`` sont composés de"
" deux parties : des champs et des constantes."

#: ../../source/Concepts/About-ROS-Interfaces.rst:35
msgid "2.1 Fields"
msgstr "2.1 Champs"

#: ../../source/Concepts/About-ROS-Interfaces.rst:37
msgid "Each field consists of a type and a name, separated by a space, i.e:"
msgstr ""
"Chaque champ est composé d'un type et d'un nom, séparés par un espace, "
"c'est-à-dire :"

#: ../../source/Concepts/About-ROS-Interfaces.rst:45
#: ../../source/Concepts/About-ROS-Interfaces.rst:193
#: ../../source/Concepts/About-ROS-Interfaces.rst:217
msgid "For example:"
msgstr "Par exemple:"

#: ../../source/Concepts/About-ROS-Interfaces.rst:53
msgid "2.1.1 Field types"
msgstr "2.1.1 Types de champs"

#: ../../source/Concepts/About-ROS-Interfaces.rst:55
msgid "Field types can be:"
msgstr "Les types de champs peuvent être :"

#: ../../source/Concepts/About-ROS-Interfaces.rst:58
msgid "a built-in-type"
msgstr "un type intégré"

#: ../../source/Concepts/About-ROS-Interfaces.rst:59
msgid ""
"names of Message descriptions defined on their own, such as "
"\"geometry_msgs/PoseStamped\""
msgstr ""
"noms des descriptions de message définis par eux-mêmes, tels que "
"\"geometry_msgs/PoseStamped\""

#: ../../source/Concepts/About-ROS-Interfaces.rst:61
msgid "*Built-in-types currently supported:*"
msgstr "*Types intégrés actuellement pris en charge :*"

#: ../../source/Concepts/About-ROS-Interfaces.rst:66
#: ../../source/Concepts/About-ROS-Interfaces.rst:137
msgid "Type name"
msgstr "Tapez le nom"

#: ../../source/Concepts/About-ROS-Interfaces.rst:67
#: ../../source/Concepts/About-ROS-Interfaces.rst:138
msgid ""
"`C++ <https://design.ros2.org/articles/generated_interfaces_cpp.html>`__"
msgstr ""
"`C++ <https://design.ros2.org/articles/generated_interfaces_cpp.html>`__"

#: ../../source/Concepts/About-ROS-Interfaces.rst:68
#: ../../source/Concepts/About-ROS-Interfaces.rst:139
msgid ""
"`Python "
"<https://design.ros2.org/articles/generated_interfaces_python.html>`__"
msgstr ""
"`Python "
"<https://design.ros2.org/articles/generated_interfaces_python.html>`__"

#: ../../source/Concepts/About-ROS-Interfaces.rst:69
#: ../../source/Concepts/About-ROS-Interfaces.rst:140
msgid "`DDS type <https://design.ros2.org/articles/mapping_dds_types.html>`__"
msgstr ""
"`Type DDS <https://design.ros2.org/articles/mapping_dds_types.html>`__"

#: ../../source/Concepts/About-ROS-Interfaces.rst:70
#: ../../source/Concepts/About-ROS-Interfaces.rst:71
msgid "bool"
msgstr "bourdonner"

#: ../../source/Concepts/About-ROS-Interfaces.rst:72
msgid "builtins.bool"
msgstr "builtins.bool"

#: ../../source/Concepts/About-ROS-Interfaces.rst:73
msgid "boolean"
msgstr "booléen"

#: ../../source/Concepts/About-ROS-Interfaces.rst:74
msgid "byte"
msgstr "octet"

#: ../../source/Concepts/About-ROS-Interfaces.rst:75
#: ../../source/Concepts/About-ROS-Interfaces.rst:95
msgid "uint8_t"
msgstr "uint8_t"

#: ../../source/Concepts/About-ROS-Interfaces.rst:76
msgid "builtins.bytes*"
msgstr "builtins.octets*"

#: ../../source/Concepts/About-ROS-Interfaces.rst:77
#: ../../source/Concepts/About-ROS-Interfaces.rst:93
#: ../../source/Concepts/About-ROS-Interfaces.rst:97
msgid "octet"
msgstr "octuor"

#: ../../source/Concepts/About-ROS-Interfaces.rst:78
#: ../../source/Concepts/About-ROS-Interfaces.rst:79
#: ../../source/Concepts/About-ROS-Interfaces.rst:81
msgid "char"
msgstr "carboniser"

#: ../../source/Concepts/About-ROS-Interfaces.rst:80
#: ../../source/Concepts/About-ROS-Interfaces.rst:155
msgid "builtins.str*"
msgstr "builtins.str*"

#: ../../source/Concepts/About-ROS-Interfaces.rst:82
msgid "float32"
msgstr "float32"

#: ../../source/Concepts/About-ROS-Interfaces.rst:83
#: ../../source/Concepts/About-ROS-Interfaces.rst:85
msgid "float"
msgstr "flotter"

#: ../../source/Concepts/About-ROS-Interfaces.rst:84
#: ../../source/Concepts/About-ROS-Interfaces.rst:88
msgid "builtins.float*"
msgstr "builtins.float*"

#: ../../source/Concepts/About-ROS-Interfaces.rst:86
msgid "float64"
msgstr "float64"

#: ../../source/Concepts/About-ROS-Interfaces.rst:87
#: ../../source/Concepts/About-ROS-Interfaces.rst:89
msgid "double"
msgstr "double"

#: ../../source/Concepts/About-ROS-Interfaces.rst:90
msgid "int8"
msgstr "vous8"

#: ../../source/Concepts/About-ROS-Interfaces.rst:91
msgid "int8_t"
msgstr "int8_t"

#: ../../source/Concepts/About-ROS-Interfaces.rst:92
#: ../../source/Concepts/About-ROS-Interfaces.rst:96
#: ../../source/Concepts/About-ROS-Interfaces.rst:100
#: ../../source/Concepts/About-ROS-Interfaces.rst:104
#: ../../source/Concepts/About-ROS-Interfaces.rst:108
#: ../../source/Concepts/About-ROS-Interfaces.rst:112
#: ../../source/Concepts/About-ROS-Interfaces.rst:116
#: ../../source/Concepts/About-ROS-Interfaces.rst:120
msgid "builtins.int*"
msgstr "builtins.int*"

#: ../../source/Concepts/About-ROS-Interfaces.rst:94
msgid "uint8"
msgstr "win8"

#: ../../source/Concepts/About-ROS-Interfaces.rst:98
msgid "int16"
msgstr "int16"

#: ../../source/Concepts/About-ROS-Interfaces.rst:99
msgid "int16_t"
msgstr "int16_t"

#: ../../source/Concepts/About-ROS-Interfaces.rst:101
msgid "short"
msgstr "court"

#: ../../source/Concepts/About-ROS-Interfaces.rst:102
msgid "uint16"
msgstr "uint16"

#: ../../source/Concepts/About-ROS-Interfaces.rst:103
msgid "uint16_t"
msgstr "uint16_t"

#: ../../source/Concepts/About-ROS-Interfaces.rst:105
msgid "unsigned short"
msgstr "court non signé"

#: ../../source/Concepts/About-ROS-Interfaces.rst:106
msgid "int32"
msgstr "Récupérer"

#: ../../source/Concepts/About-ROS-Interfaces.rst:107
msgid "int32_t"
msgstr "int32_t"

#: ../../source/Concepts/About-ROS-Interfaces.rst:109
msgid "long"
msgstr "long"

#: ../../source/Concepts/About-ROS-Interfaces.rst:110
msgid "uint32"
msgstr "récupérer"

#: ../../source/Concepts/About-ROS-Interfaces.rst:111
msgid "uint32_t"
msgstr "uint32_t"

#: ../../source/Concepts/About-ROS-Interfaces.rst:113
msgid "unsigned long"
msgstr "long non signé"

#: ../../source/Concepts/About-ROS-Interfaces.rst:114
msgid "int64"
msgstr "int64"

#: ../../source/Concepts/About-ROS-Interfaces.rst:115
msgid "int64_t"
msgstr "int64_t"

#: ../../source/Concepts/About-ROS-Interfaces.rst:117
msgid "long long"
msgstr "longtemps longtemps"

#: ../../source/Concepts/About-ROS-Interfaces.rst:118
msgid "uint64"
msgstr "gagner t64"

#: ../../source/Concepts/About-ROS-Interfaces.rst:119
msgid "uint64_t"
msgstr "uint64_t"

#: ../../source/Concepts/About-ROS-Interfaces.rst:121
msgid "unsigned long long"
msgstr "non signé long long"

#: ../../source/Concepts/About-ROS-Interfaces.rst:122
#: ../../source/Concepts/About-ROS-Interfaces.rst:125
#: ../../source/Concepts/About-ROS-Interfaces.rst:156
msgid "string"
msgstr "chaîne"

#: ../../source/Concepts/About-ROS-Interfaces.rst:123
#: ../../source/Concepts/About-ROS-Interfaces.rst:154
msgid "std::string"
msgstr "std ::chaîne"

#: ../../source/Concepts/About-ROS-Interfaces.rst:124
#: ../../source/Concepts/About-ROS-Interfaces.rst:128
msgid "builtins.str"
msgstr "builtins.str"

#: ../../source/Concepts/About-ROS-Interfaces.rst:126
#: ../../source/Concepts/About-ROS-Interfaces.rst:129
msgid "wstring"
msgstr "ficelle"

#: ../../source/Concepts/About-ROS-Interfaces.rst:127
msgid "std::u16string"
msgstr "std :: chaîne u16"

#: ../../source/Concepts/About-ROS-Interfaces.rst:132
msgid "*Every built-in-type can be used to define arrays:*"
msgstr "*Chaque type intégré peut être utilisé pour définir des tableaux :*"

#: ../../source/Concepts/About-ROS-Interfaces.rst:141
msgid "static array"
msgstr "tableau statique"

#: ../../source/Concepts/About-ROS-Interfaces.rst:142
msgid "std::array<T, N>"
msgstr "std::array<T, N>"

#: ../../source/Concepts/About-ROS-Interfaces.rst:143
#: ../../source/Concepts/About-ROS-Interfaces.rst:151
msgid "builtins.list*"
msgstr "builtins.list*"

#: ../../source/Concepts/About-ROS-Interfaces.rst:144
msgid "T[N]"
msgstr "T[N]"

#: ../../source/Concepts/About-ROS-Interfaces.rst:145
msgid "unbounded dynamic array"
msgstr "tableau dynamique illimité"

#: ../../source/Concepts/About-ROS-Interfaces.rst:146
msgid "std::vector"
msgstr "std :: vecteur"

#: ../../source/Concepts/About-ROS-Interfaces.rst:147
msgid "builtins.list"
msgstr "builtins.list"

#: ../../source/Concepts/About-ROS-Interfaces.rst:148
msgid "sequence"
msgstr "séquence"

#: ../../source/Concepts/About-ROS-Interfaces.rst:149
msgid "bounded dynamic array"
msgstr "tableau dynamique borné"

#: ../../source/Concepts/About-ROS-Interfaces.rst:150
msgid "custom_class<T, N>"
msgstr "classe_personnalisée<T, N>"

#: ../../source/Concepts/About-ROS-Interfaces.rst:152
msgid "sequence<T, N>"
msgstr "séquence<T, N>"

#: ../../source/Concepts/About-ROS-Interfaces.rst:153
msgid "bounded string"
msgstr "chaîne délimitée"

#: ../../source/Concepts/About-ROS-Interfaces.rst:159
msgid ""
"All types that are more permissive than their ROS definition enforce the ROS"
" constraints in range and length by software"
msgstr ""
"Tous les types qui sont plus permissifs que leur définition ROS appliquent "
"les contraintes ROS de plage et de longueur par logiciel"

#: ../../source/Concepts/About-ROS-Interfaces.rst:161
msgid "*Example of message definition using arrays and bounded types:*"
msgstr ""
"*Exemple de définition de message utilisant des tableaux et des types "
"bornés :*"

#: ../../source/Concepts/About-ROS-Interfaces.rst:177
msgid "2.1.2 Field names"
msgstr "2.1.2 Noms de champs"

#: ../../source/Concepts/About-ROS-Interfaces.rst:179
msgid ""
"Field names must be lowercase alphanumeric characters with underscores for "
"separating words. They must start with an alphabetic character, they must "
"not end with an underscore and never have two consecutive underscores."
msgstr ""
"Les noms de champ doivent être des caractères alphanumériques minuscules "
"avec des traits de soulignement pour séparer les mots. Ils doivent commencer"
" par un caractère alphabétique, ils ne doivent pas se terminer par un trait "
"de soulignement et ne doivent jamais avoir deux traits de soulignement "
"consécutifs."

#: ../../source/Concepts/About-ROS-Interfaces.rst:182
msgid "2.1.3 Field default value"
msgstr "2.1.3 Valeur par défaut du champ"

#: ../../source/Concepts/About-ROS-Interfaces.rst:184
msgid ""
"Default values can be set to any field in the message type. Currently "
"default values are not supported for string arrays and complex types (i.e. "
"types not present in the built-in-types table above, that applies to all "
"nested messages)"
msgstr ""
"Les valeurs par défaut peuvent être définies sur n'importe quel champ du "
"type de message. Actuellement, les valeurs par défaut ne sont pas prises en "
"charge pour les tableaux de chaînes et les types complexes (c'est-à-dire les"
" types non présents dans le tableau des types intégrés ci-dessus, qui "
"s'applique à tous les messages imbriqués)"

#: ../../source/Concepts/About-ROS-Interfaces.rst:187
msgid ""
"Defining a default value is done by adding a third element to the field "
"definition line, i.e:"
msgstr ""
"La définition d'une valeur par défaut se fait en ajoutant un troisième "
"élément à la ligne de définition du champ, à savoir :"

#: ../../source/Concepts/About-ROS-Interfaces.rst:202
msgid "Note:"
msgstr "Note:"

#: ../../source/Concepts/About-ROS-Interfaces.rst:205
msgid "string values must be defined in single ``'`` or double quotes ``\"``"
msgstr ""
"les valeurs de chaîne doivent être définies entre des ``'`` simples ou des "
"guillemets doubles ``\"``"

#: ../../source/Concepts/About-ROS-Interfaces.rst:206
msgid "currently string values are not escaped"
msgstr "actuellement les valeurs de chaîne ne sont pas échappées"

#: ../../source/Concepts/About-ROS-Interfaces.rst:209
msgid "2.2 Constants"
msgstr "2.2 Constantes"

#: ../../source/Concepts/About-ROS-Interfaces.rst:211
msgid ""
"Each constant definition is like a field description with a default value, "
"except that this value can never be changed programatically. This value "
"assignment is indicated by use of an equal '=' sign, e.g."
msgstr ""
"Chaque définition de constante est comme une description de champ avec une "
"valeur par défaut, sauf que cette valeur ne peut jamais être modifiée par "
"programmation. Cette affectation de valeur est indiquée par l'utilisation "
"d'un signe égal '=', par ex."

#: ../../source/Concepts/About-ROS-Interfaces.rst:228
msgid "Constants names have to be UPPERCASE"
msgstr "Les noms des constantes doivent être en MAJUSCULES"

#: ../../source/Concepts/About-ROS-Interfaces.rst:231
msgid "3. Service description specification"
msgstr "3. Spécification de description de service"

#: ../../source/Concepts/About-ROS-Interfaces.rst:233
msgid ""
"Services are described and defined in ``.srv`` files in the ``srv/`` "
"directory of a ROS package."
msgstr ""
"Les services sont décrits et définis dans les fichiers ``.srv`` du "
"répertoire ``srv/`` d'un package ROS."

#: ../../source/Concepts/About-ROS-Interfaces.rst:235
msgid ""
"A service description file consists of a request and a response msg type, "
"separated by '---'. Any two ``.msg`` files concatenated with a '---' are a "
"legal service description."
msgstr ""
"Un fichier de description de service se compose d'une demande et d'un type "
"de message de réponse, séparés par '---'. Deux fichiers ``.msg`` concaténés "
"avec un '---' sont une description de service légale."

#: ../../source/Concepts/About-ROS-Interfaces.rst:237
msgid ""
"Here is a very simple example of a service that takes in a string and "
"returns a string:"
msgstr ""
"Voici un exemple très simple d'un service qui prend une chaîne et renvoie "
"une chaîne :"

#: ../../source/Concepts/About-ROS-Interfaces.rst:245
msgid ""
"We can of course get much more complicated (if you want to refer to a "
"message from the same package you must not mention the package name):"
msgstr ""
"On peut bien sûr faire beaucoup plus compliqué (si vous voulez faire "
"référence à un message du même paquet vous ne devez pas mentionner le nom du"
" paquet) :"

#: ../../source/Concepts/About-ROS-Interfaces.rst:263
msgid "You cannot embed another service inside of a service."
msgstr ""
"Vous ne pouvez pas intégrer un autre service à l'intérieur d'un service."

#: ../../source/Concepts/About-ROS-Interfaces.rst:266
msgid "4. New features in ROS 2 interfaces"
msgstr "4. Nouvelles fonctionnalités dans les interfaces ROS 2"

#: ../../source/Concepts/About-ROS-Interfaces.rst:268
msgid ""
"The ROS 2 IDL is closely related to the `ROS 1 IDL "
"<https://wiki.ros.org/msg>`__. Most existing ROS 1 ``.msg`` and ``.srv`` "
"files should be usable as-is with ROS 2. Atop ROS 1's existing feature set, "
"the ROS 2 IDL introduces some new features, namely:"
msgstr ""
"Le ROS 2 IDL est étroitement lié au `ROS 1 IDL "
"<https://wiki.ros.org/msg>`__. La plupart des fichiers ``.msg`` et ``.srv`` "
"de ROS 1 existants devraient être utilisables tels quels avec ROS 2. Au-"
"dessus de l'ensemble de fonctionnalités existant de ROS 1, le ROS 2 IDL "
"introduit de nouvelles fonctionnalités, à savoir :"

#: ../../source/Concepts/About-ROS-Interfaces.rst:273
msgid ""
"**bounded arrays**: Whereas the ROS 1 IDL allows unbounded arrays (e.g., "
"``int32[] foo``) and fixed-size arrays (e.g., ``int32[5] bar``), the ROS 2 "
"IDL further allows bounded arrays (e.g., ``int32[<=5] bat``). There are use "
"cases in which it's important to be able to place an upper bound on the size"
" of an array without committing to always using that much space (e.g., in a "
"real-time system in which you need to preallocate all memory that will be "
"used during execution)."
msgstr ""
"**tableaux délimités** : alors que l'IDL ROS 1 autorise les tableaux "
"illimités (par exemple, ``int32[] foo``) et les tableaux de taille fixe (par"
" exemple, ``int32[5] bar``), l'IDL ROS 2 autorise en outre les tableaux "
"délimités (par exemple, ``int32[<=5] bat``). Il existe des cas d'utilisation"
" dans lesquels il est important de pouvoir placer une limite supérieure sur "
"la taille d'un tableau sans s'engager à toujours utiliser autant d'espace "
"(par exemple, dans un système en temps réel dans lequel vous devez "
"préallouer toute la mémoire qui sera utilisé lors de l'exécution)."

#: ../../source/Concepts/About-ROS-Interfaces.rst:275
msgid ""
"**bounded strings**: Whereas the ROS 1 IDL allows unbounded strings (e.g., "
"``string foo``), the ROS 2 IDL further allows bounded strings (e.g., "
"``string<=5 bar``)."
msgstr ""
"**chaînes délimitées** : alors que l'IDL ROS 1 autorise les chaînes "
"illimitées (par exemple, ``string foo``), l'IDL ROS 2 autorise également les"
" chaînes délimitées (par exemple, ``string<=5 bar``)."

#: ../../source/Concepts/About-ROS-Interfaces.rst:276
msgid ""
"**default values**: Whereas the ROS 1 IDL allows constant fields (e.g., "
"``int32 X=123``), the ROS 2 IDL further allows default values to be "
"specified (e.g., ``int32 X 123``). The default value is used when "
"constructing a message/service object and can be subsequently overridden by "
"assigning to the field. You can also specify default values for action "
"parts."
msgstr ""
"**valeurs par défaut** : alors que l'IDL ROS 1 autorise des champs constants"
" (par exemple, ``int32 X=123``), l'IDL ROS 2 permet en outre de spécifier "
"des valeurs par défaut (par exemple, ``int32 X 123``) . La valeur par défaut"
" est utilisée lors de la construction d'un objet message/service et peut "
"être remplacée par la suite en l'attribuant au champ. Vous pouvez également "
"spécifier des valeurs par défaut pour les parties d'action."

#: ../../source/Concepts/About-RQt.rst:9
msgid "Overview and usage of RQt"
msgstr "Présentation et utilisation de RQt"

#: ../../source/Concepts/About-RQt.rst:18
msgid ""
"RQt is a graphical user interface framework that implements various tools "
"and interfaces in the form of plugins. One can run all the existing GUI "
"tools as dockable windows within RQt! The tools can still run in a "
"traditional standalone method, but RQt makes it easier to manage all the "
"various windows in a single screen layout."
msgstr ""
"RQt est un framework d'interface utilisateur graphique qui implémente divers"
" outils et interfaces sous la forme de plugins. On peut exécuter tous les "
"outils graphiques existants en tant que fenêtres ancrables dans RQt ! Les "
"outils peuvent toujours fonctionner dans une méthode autonome "
"traditionnelle, mais RQt facilite la gestion de toutes les différentes "
"fenêtres dans une disposition d'écran unique."

#: ../../source/Concepts/About-RQt.rst:22
msgid "You can run any RQt tools/plugins easily by:"
msgstr "Vous pouvez exécuter facilement tous les outils/plugins RQt en :"

#: ../../source/Concepts/About-RQt.rst:28
msgid ""
"This GUI allows you to choose any available plugins on your system. You can "
"also run plugins in standalone windows. For example, RQt Python Console:"
msgstr ""
"Cette interface graphique vous permet de choisir tous les plugins "
"disponibles sur votre système. Vous pouvez également exécuter des plugins "
"dans des fenêtres autonomes. Par exemple, la console Python RQt :"

#: ../../source/Concepts/About-RQt.rst:36
msgid ""
"Users can create their own plugins for RQt with either ``Python`` or "
"``C++``. To see what RQt plugins are available for your system, run:"
msgstr ""
"Les utilisateurs peuvent créer leurs propres plugins pour RQt avec "
"``Python`` ou ``C++``. Pour voir quels plugins RQt sont disponibles pour "
"votre système, exécutez :"

#: ../../source/Concepts/About-RQt.rst:43
msgid "And then look for packages that start with ``rqt_``."
msgstr "Ensuite, recherchez les packages commençant par ``rqt_``."

#: ../../source/Concepts/About-RQt.rst:46
msgid "System setup"
msgstr "Installation du système"

#: ../../source/Concepts/About-RQt.rst:49
msgid "Installing From Debian"
msgstr "Installation à partir de Debian"

#: ../../source/Concepts/About-RQt.rst:57
msgid "Building From Source"
msgstr "Construire à partir de la source"

#: ../../source/Concepts/About-RQt.rst:59
msgid ""
"See :doc:`Building RQt from Source <../How-To-Guides/RQt-Source-Install>`."
msgstr ""
"Voir :doc:`Building RQt from Source <../How-To-Guides/RQt-Source-Install>`."

#: ../../source/Concepts/About-RQt.rst:62
msgid "RQt Components Structure"
msgstr "Structure des composants RQt"

#: ../../source/Concepts/About-RQt.rst:64
msgid "RQt consists of two metapackages:"
msgstr "RQt se compose de deux métapaquets :"

#: ../../source/Concepts/About-RQt.rst:66
msgid "*rqt* - core infrastucture modules."
msgstr "*rqt* - modules d'infrastructure de base."

#: ../../source/Concepts/About-RQt.rst:67
msgid "*rqt_common_plugins* - Commonly useful debugging tools."
msgstr "*rqt_common_plugins* - Outils de débogage couramment utiles."

#: ../../source/Concepts/About-RQt.rst:70
msgid "Advantage of RQt framework"
msgstr "Avantage du framework RQt"

#: ../../source/Concepts/About-RQt.rst:72
msgid "Compared to building your own GUIs from scratch:"
msgstr ""
"Par rapport à la création de vos propres interfaces graphiques à partir de "
"rien :"

#: ../../source/Concepts/About-RQt.rst:74
msgid ""
"Standardized common procedures for GUI (start-shutdown hook, restore "
"previous states)."
msgstr ""
"Procédures communes standardisées pour l'interface graphique (crochet de "
"démarrage-arrêt, restauration des états précédents)."

#: ../../source/Concepts/About-RQt.rst:75
msgid "Multiple widgets can be docked in a single window."
msgstr "Plusieurs widgets peuvent être ancrés dans une seule fenêtre."

#: ../../source/Concepts/About-RQt.rst:76
msgid "Easily turn your existing Qt widgets into RQt plugins."
msgstr "Transformez facilement vos widgets Qt existants en plugins RQt."

#: ../../source/Concepts/About-RQt.rst:77
msgid ""
"Expect support at `ROS Answers <https://answers.ros.org>`__ (ROS community "
"website for the questions)."
msgstr ""
"Attendez-vous à une assistance sur `ROS Answers <https://answers.ros.org>`__"
" (site Web de la communauté ROS pour les questions)."

#: ../../source/Concepts/About-RQt.rst:79
msgid "From system architecture's perspective:"
msgstr "Du point de vue de l'architecture système :"

#: ../../source/Concepts/About-RQt.rst:81
msgid ""
"Support multi-platform (basically wherever `QT <http://qt-project.org/>`__ "
"and ROS run) and multi-language (``Python``, ``C++``)."
msgstr ""
"Prise en charge multi-plateforme (essentiellement partout où `QT <http://qt-"
"project.org/>`__ et ROS s'exécutent) et multi-langage (``Python``, ``C++``)."

#: ../../source/Concepts/About-RQt.rst:82
msgid ""
"Manageable lifecycle: RQt plugins using common API makes maintainance & "
"reuse easier."
msgstr ""
"Cycle de vie gérable : les plugins RQt utilisant une API commune facilitent "
"la maintenance et la réutilisation."

#: ../../source/Concepts/About-RQt.rst:86
msgid "Further Reading"
msgstr "Lectures complémentaires"

#: ../../source/Concepts/About-RQt.rst:88
msgid ""
"ROS 2 Discourse `announcment of porting to ROS 2 "
"<https://discourse.ros.org/t/rqt-in-ros2/6428>`__)."
msgstr ""
"ROS 2 Discourse `annonce de portage vers ROS 2 "
"<https://discourse.ros.org/t/rqt-in-ros2/6428>`__)."

#: ../../source/Concepts/About-RQt.rst:89
msgid "`RQt for ROS 1 documentation <https://wiki.ros.org/rqt>`__."
msgstr "`Documentation RQt pour ROS 1 <https://wiki.ros.org/rqt>`__."

#: ../../source/Concepts/About-RQt.rst:90
msgid ""
"Brief overview of RQt (from `a Willow Garage intern blog post "
"<http://web.archive.org/web/20130518142837/http://www.willowgarage.com/blog/2012/10/21/ros-"
"gui>`__)."
msgstr ""
"Bref aperçu de RQt (tiré d'un article de blog d'un stagiaire de Willow "
"Garage "
"<http://web.archive.org/web/20130518142837/http://www.willowgarage.com/blog/2012/10/21/ros-"
"gui> `__)."

#: ../../source/Concepts/About-Security.rst:4
msgid "About ROS 2 Security"
msgstr "À propos de la sécurité ROS 2"

#: ../../source/Concepts/About-Security.rst:13
msgid ""
"Built-in ROS 2 security features enable control over communications "
"throughout the ROS graph. This not only allows for encrypting data in "
"transit between ROS domain participants, but also enables authentication of "
"participants sending data, ensures the integrity of data being sent, and "
"enables domain-wide access controls."
msgstr ""
"Les fonctionnalités de sécurité ROS 2 intégrées permettent de contrôler les "
"communications dans tout le graphe ROS. Cela permet non seulement de "
"chiffrer les données en transit entre les participants du domaine ROS, mais "
"également d'authentifier les participants qui envoient des données, de "
"garantir l'intégrité des données envoyées et d'activer les contrôles d'accès"
" à l'échelle du domaine."

#: ../../source/Concepts/About-Security.rst:16
msgid ""
"ROS 2 security services are provided by the underlying `Data Distribution "
"Service (DDS) <https://www.omg.org/spec/DDS/>`_ which is used for "
"communications between nodes. DDS vendors provide open source and commercial"
" DDS implementations that work with ROS. However, in order to create a "
"specification-compliant implementation of DDS, all vendors must include "
"security plugins as outlined in the `DDS Security Specification "
"<https://www.omg.org/spec/DDS-SECURITY/About-DDS-SECURITY/>`_. ROS security "
"features take advantage of these DDS security plugins to provide policy-"
"based encryption, authentication and access control. DDS and ROS security is"
" enabled through predefined configuration files and environment variables."
msgstr ""
"Les services de sécurité ROS 2 sont fournis par le `Data Distribution "
"Service (DDS) <https://www.omg.org/spec/DDS/>`_ sous-jacent qui est utilisé "
"pour les communications entre les nœuds. Les fournisseurs de DDS fournissent"
" des implémentations DDS open source et commerciales qui fonctionnent avec "
"ROS. Cependant, afin de créer une implémentation de DDS conforme aux "
"spécifications, tous les fournisseurs doivent inclure des plugins de "
"sécurité comme indiqué dans la `Spécification de sécurité DDS "
"<https://www.omg.org/spec/DDS-SECURITY/About-DDS-SECURITY />`_. Les "
"fonctionnalités de sécurité ROS tirent parti de ces plugins de sécurité DDS "
"pour fournir un chiffrement, une authentification et un contrôle d'accès "
"basés sur des politiques. La sécurité DDS et ROS est activée via des "
"fichiers de configuration prédéfinis et des variables d'environnement."

#: ../../source/Concepts/About-Security.rst:24
msgid "The Security Enclave"
msgstr "L'enclave de sécurité"

#: ../../source/Concepts/About-Security.rst:26
msgid ""
"A security enclave encapsulates a single policy for protecting ROS "
"communications. The enclave may set policy for multiple nodes, for an entire"
" ROS graph, or any combination of protected ROS processes and devices. "
"Security enclaves can be flexibly mapped to processes, users, or devices at "
"deployment. Adjusting this default behavior becomes important for optimizing"
" communications and for complex systems. See the ROS 2 Security Enclaves "
"`design document "
"<https://design.ros2.org/articles/ros2_security_enclaves.html>`_ for "
"additional details."
msgstr ""
"Une enclave de sécurité encapsule une politique unique pour protéger les "
"communications ROS. L'enclave peut définir une politique pour plusieurs "
"nœuds, pour un graphe ROS entier ou pour toute combinaison de processus et "
"d'appareils ROS protégés. Les enclaves de sécurité peuvent être mappées de "
"manière flexible aux processus, utilisateurs ou appareils lors du "
"déploiement. L'ajustement de ce comportement par défaut devient important "
"pour optimiser les communications et pour les systèmes complexes. Consultez "
"le `document de conception des enclaves de sécurité ROS 2 "
"<https://design.ros2.org/articles/ros2_security_enclaves.html>`_ pour plus "
"de détails."

#: ../../source/Concepts/About-Security.rst:34
msgid "Security Files"
msgstr "Fichiers de sécurité"

#: ../../source/Concepts/About-Security.rst:36
msgid ""
"A `ROS 2 security enclave "
"<https://design.ros2.org/articles/ros2_security_enclaves.html>`_ is "
"established with six files as outlined by the DDS specification. Three of "
"these files define an enclave's identity, while three other files define the"
" permissions to be granted to the enclave. All six files reside in a single "
"directory, and nodes launched without a qualified enclave path use files in "
"the default root level enclave."
msgstr ""
"Une `enclave de sécurité ROS 2 "
"<https://design.ros2.org/articles/ros2_security_enclaves.html>`_ est établie"
" avec six fichiers, comme indiqué par la spécification DDS. Trois de ces "
"fichiers définissent l'identité d'une enclave, tandis que trois autres "
"fichiers définissent les autorisations à accorder à l'enclave. Les six "
"fichiers résident dans un seul répertoire et les nœuds lancés sans chemin "
"d'accès d'enclave qualifié utilisent des fichiers dans l'enclave de niveau "
"racine par défaut."

#: ../../source/Concepts/About-Security.rst:41
msgid "Enclave Identity"
msgstr "Identité de l'enclave"

#: ../../source/Concepts/About-Security.rst:43
msgid ""
"The Identity Certificate Authority file ``identity_ca.cert.pem`` acts as the"
" trust anchor used to identify participants. Each enclave also holds its "
"unique identifying certificate in the file ``cert.pem``, and the associated "
"private key in the file ``key.pem``. Because the ``cert.pem`` certificate "
"has been signed by identity certificate, when a participant presents this "
"certificate to other domain members, they are able to validate the "
"participant's identity using their own copy of the identity certificate. "
"This valid certificate exchange allows the enclave to securely establish "
"trusted communications with other participants. The enclave does not not "
"share the ``key.pem`` private key, but only uses it for decryption and "
"message signing."
msgstr ""
"Le fichier Identity Certificate Authority ``identity_ca.cert.pem`` agit "
"comme l'ancre de confiance utilisée pour identifier les participants. Chaque"
" enclave détient également son certificat d'identification unique dans le "
"fichier ``cert.pem``, et la clé privée associée dans le fichier ``key.pem``."
" Étant donné que le certificat ``cert.pem`` a été signé par un certificat "
"d'identité, lorsqu'un participant présente ce certificat à d'autres membres "
"du domaine, il est en mesure de valider l'identité du participant en "
"utilisant sa propre copie du certificat d'identité. Cet échange de "
"certificat valide permet à l'enclave d'établir en toute sécurité des "
"communications de confiance avec d'autres participants. L'enclave ne partage"
" pas la clé privée ``key.pem``, mais l'utilise uniquement pour le "
"déchiffrement et la signature des messages."

#: ../../source/Concepts/About-Security.rst:50
msgid "Enclave Permissions"
msgstr "Autorisations d'enclave"

#: ../../source/Concepts/About-Security.rst:52
msgid ""
"The Permissions Certificate Authority file ``permissions_ca.cert.pem`` "
"serves as the trust anchor to grant permissions to security enclaves. This "
"certificate is used to create the signed file ``governance.p7s``, an XML "
"document which defines domain-wide protection policies. Similarly the XML "
"file ``permissions.p7s`` outlines permissions of this particular enclave and"
" has been signed by the Permissions CA. Domain members use a copy of the "
"permissions CA to validate these signed files and grant the requested "
"access."
msgstr ""
"Le fichier Permissions Certificate Authority ``permissions_ca.cert.pem`` "
"sert d'ancre de confiance pour accorder des autorisations aux enclaves de "
"sécurité. Ce certificat est utilisé pour créer le fichier signé "
"``governance.p7s``, un document XML qui définit les politiques de protection"
" à l'échelle du domaine. De même, le fichier XML ``permissions.p7s`` décrit "
"les autorisations de cette enclave particulière et a été signé par "
"l'autorité de certification des autorisations. Les membres du domaine "
"utilisent une copie des autorisations CA pour valider ces fichiers signés et"
" accorder l'accès demandé."

#: ../../source/Concepts/About-Security.rst:57
msgid ""
"Although these two certificate authorities enable separate workflows for "
"identity and permissions, often the same certificate serves as both the "
"identity and the permissions authority."
msgstr ""
"Bien que ces deux autorités de certification permettent des workflows "
"distincts pour l'identité et les autorisations, le même certificat sert "
"souvent à la fois d'identité et d'autorité d'autorisation."

#: ../../source/Concepts/About-Security.rst:60
msgid "Private Keys"
msgstr "Clés privées"

#: ../../source/Concepts/About-Security.rst:62
msgid ""
"The identity and permissions certificates also have associated private key "
"files. Add new enclaves to the domain by signing their Certificate Signing "
"Request (CSR) with the identity certificate's private key. Similarly, grant "
"permissions for a new enclave by signing a permissions XML document with the"
" permission certificate's private key."
msgstr ""
"Les certificats d'identité et d'autorisations sont également associés à des "
"fichiers de clé privée. Ajoutez de nouvelles enclaves au domaine en signant "
"leur demande de signature de certificat (CSR) avec la clé privée du "
"certificat d'identité. De même, accordez des autorisations pour une nouvelle"
" enclave en signant un document XML d'autorisations avec la clé privée du "
"certificat d'autorisation."

#: ../../source/Concepts/About-Security.rst:68
msgid "Security Environment Variables"
msgstr "Variables d'environnement de sécurité"

#: ../../source/Concepts/About-Security.rst:70
msgid ""
"The environment variable ``ROS_SECURITY_ENABLE`` acts as the enclave's "
"master \"on/off\" switch for ROS 2 security features. Security has been "
"turned off by default, so security features will not be enabled even when "
"the proper security files are present. In order to enable ROS 2 security, "
"set this environment variable to ``true`` (case sensitive)."
msgstr ""
"La variable d'environnement ``ROS_SECURITY_ENABLE`` agit comme "
"l'interrupteur principal \"marche/arrêt\" de l'enclave pour les "
"fonctionnalités de sécurité ROS 2. La sécurité a été désactivée par défaut, "
"de sorte que les fonctionnalités de sécurité ne seront pas activées même si "
"les fichiers de sécurité appropriés sont présents. Afin d'activer la "
"sécurité ROS 2, définissez cette variable d'environnement sur ``true`` "
"(sensible à la casse)."

#: ../../source/Concepts/About-Security.rst:74
msgid ""
"Once security has been enabled, the environment variable "
"``ROS_SECURITY_STRATEGY`` defines how domain participants handle problems "
"when launching participants. Security features depend on certificates and "
"properly signed configuration files, yet by default, an improperly "
"configured participant will still launch successfully but without security "
"features. In order to enforce strict compliance with security settings and "
"fail to launch non-compliant enclaves, set this environment variable to "
"``Enforce`` (case sensitive)."
msgstr ""
"Une fois la sécurité activée, la variable d'environnement "
"``ROS_SECURITY_STRATEGY`` définit comment les participants du domaine gèrent"
" les problèmes lors du lancement des participants. Les fonctionnalités de "
"sécurité dépendent des certificats et des fichiers de configuration "
"correctement signés, mais par défaut, un participant mal configuré se "
"lancera toujours avec succès, mais sans fonctionnalités de sécurité. Afin "
"d'appliquer une stricte conformité avec les paramètres de sécurité et de ne "
"pas lancer d'enclaves non conformes, définissez cette variable "
"d'environnement sur ``Enforce`` (sensible à la casse)."

#: ../../source/Concepts/About-Security.rst:78
msgid ""
"Additional security-related environment variables can be found in the `ROS 2"
" DDS-Security Integration design document "
"<https://design.ros2.org/articles/ros2_dds_security.html>`_. These variables"
" generally assist ROS in managing enclaves and locating the security files."
msgstr ""
"Des variables d'environnement supplémentaires liées à la sécurité peuvent "
"être trouvées dans le `document de conception de l'intégration de sécurité "
"ROS 2 DDS <https://design.ros2.org/articles/ros2_dds_security.html>`_. Ces "
"variables aident généralement ROS à gérer les enclaves et à localiser les "
"fichiers de sécurité."

#: ../../source/Concepts/About-Security.rst:83
msgid "Learn More"
msgstr "Apprendre encore plus"

#: ../../source/Concepts/About-Security.rst:85
msgid ""
"For more information and hands-on exercises enabling ROS 2 communications "
"security, see the :doc:`../Tutorials/Advanced/Security/Introducing-"
"ros2-security`."
msgstr ""
"Pour plus d'informations et des exercices pratiques permettant la sécurité "
"des communications ROS 2, consultez le "
":doc:`../Tutorials/Advanced/Security/Introducing-ros2-security`."

#: ../../source/Concepts/About-Tf2.rst:4
msgid "About tf2"
msgstr "À propos de TF2"

#: ../../source/Concepts/About-Tf2.rst:13
msgid ""
"tf2 is the transform library, which lets the user keep track of multiple "
"coordinate frames over time. tf2 maintains the relationship between "
"coordinate frames in a tree structure buffered in time and lets the user "
"transform points, vectors, etc. between any two coordinate frames at any "
"desired point in time."
msgstr ""
"tf2 est la bibliothèque de transformation, qui permet à l'utilisateur de "
"suivre plusieurs cadres de coordonnées au fil du temps. tf2 maintient la "
"relation entre les cadres de coordonnées dans une structure arborescente "
"tamponnée dans le temps et permet à l'utilisateur de transformer des points,"
" des vecteurs, etc. entre deux cadres de coordonnées à n'importe quel moment"
" souhaité."

#: ../../source/Concepts/About-Tf2.rst:19
msgid "Properties of tf2"
msgstr "Propriétés de TF2"

#: ../../source/Concepts/About-Tf2.rst:21
msgid ""
"A robotic system typically has many 3D coordinate frames that change over "
"time, such as a world frame, base frame, gripper frame, head frame, etc. tf2"
" keeps track of all these frames over time, and allows you to ask questions "
"like:"
msgstr ""
"Un système robotique possède généralement de nombreux cadres de coordonnées "
"3D qui changent au fil du temps, tels qu'un cadre universel, un cadre de "
"base, un cadre de préhension, un cadre de tête, etc. tf2 garde une trace de "
"tous ces cadres au fil du temps et vous permet de poser des questions telles"
" que :"

#: ../../source/Concepts/About-Tf2.rst:24
msgid "Where was the head frame relative to the world frame 5 seconds ago?"
msgstr ""
"Où était l'image principale par rapport à l'image mondiale il y a "
"5 secondes ?"

#: ../../source/Concepts/About-Tf2.rst:25
msgid "What is the pose of the object in my gripper relative to my base?"
msgstr "Quelle est la pose de l'objet dans ma pince par rapport à ma base ?"

#: ../../source/Concepts/About-Tf2.rst:26
msgid "What is the current pose of the base frame in the map frame?"
msgstr ""
"Quelle est la pose actuelle du cadre de base dans le cadre cartographique ?"

#: ../../source/Concepts/About-Tf2.rst:28
msgid ""
"tf2 can operate in a distributed system. This means all the information "
"about the coordinate frames of a robot is available to all ROS 2 components "
"on any computer in the system. tf2 can have every component in your "
"distributed system build its own transform information database or have a "
"central node that gathers and stores all transform information."
msgstr ""
"tf2 peut fonctionner dans un système distribué. Cela signifie que toutes les"
" informations sur les cadres de coordonnées d'un robot sont disponibles pour"
" tous les composants ROS 2 sur n'importe quel ordinateur du système. tf2 "
"peut faire en sorte que chaque composant de votre système distribué crée sa "
"propre base de données d'informations de transformation ou ait un nœud "
"central qui rassemble et stocke toutes les informations de transformation."

#: ../../source/Concepts/About-Tf2.rst:33
msgid "Tutorials"
msgstr "Tutoriels"

#: ../../source/Concepts/About-Tf2.rst:35
msgid ""
"We created a set of :doc:`tutorials "
"<../Tutorials/Intermediate/Tf2/Tf2-Main>` that walks you through using tf2, "
"step by step. You can get started on the :doc:`introduction to tf2 "
"<../Tutorials/Intermediate/Tf2/Introduction-To-Tf2>` tutorial. For a "
"complete list of all tf2 and tf2-related tutorials check out the "
":doc:`tutorials <../Tutorials/Intermediate/Tf2/Tf2-Main>` page."
msgstr ""
"Nous avons créé un ensemble de :doc:`tutoriels "
"<../Tutorials/Intermediate/Tf2/Tf2-Main>` qui vous guide pas à pas dans "
"l'utilisation de tf2. Vous pouvez commencer avec le didacticiel "
":doc:`introduction to tf2 <../Tutorials/Intermediate/Tf2/Introduction-To-"
"Tf2>`. Pour une liste complète de tous les tutoriels liés à tf2 et tf2, "
"consultez la page :doc:`tutorials <../Tutorials/Intermediate/Tf2/Tf2-Main>`."

#: ../../source/Concepts/About-Tf2.rst:39
msgid ""
"There are essentially two main tasks that any user would use tf2 for, "
"listening for transforms and broadcasting transforms."
msgstr ""
"Il y a essentiellement deux tâches principales pour lesquelles tout "
"utilisateur utiliserait tf2, écouter les transformations et diffuser les "
"transformations."

#: ../../source/Concepts/About-Tf2.rst:41
msgid ""
"If you want to use tf2 to transform between coordinate frames, your nodes "
"will need to listen for transforms. What you will do is to receive and "
"buffer all coordinate frames that are broadcasted in the system, and query "
"for specific transforms between frames. Check out the writing a tf2 listener"
" tutorial :doc:`(Python) <../Tutorials/Intermediate/Tf2/Writing-A-"
"Tf2-Listener-Py>` :doc:`(C++) <../Tutorials/Intermediate/Tf2/Writing-A-"
"Tf2-Listener-Cpp>` to learn more."
msgstr ""
"Si vous souhaitez utiliser tf2 pour transformer entre les cadres de "
"coordonnées, vos nœuds devront écouter les transformations. Ce que vous "
"allez faire est de recevoir et de mettre en mémoire tampon toutes les trames"
" de coordonnées diffusées dans le système, et de rechercher des "
"transformations spécifiques entre les trames. Consultez le tutoriel "
"d'écriture d'un écouteur tf2 :doc:`(Python) "
"<../Tutorials/Intermediate/Tf2/Writing-A-Tf2-Listener-Py>` :doc:`(C++) "
"<../Tutorials/Intermediate /Tf2/Writing-A-Tf2-Listener-Cpp>` pour en savoir "
"plus."

#: ../../source/Concepts/About-Tf2.rst:45
msgid ""
"To extend the capabilities of a robot you will need to start broadcasting "
"transforms. Broadcasting transforms means to send out the relative pose of "
"coordinate frames to the rest of the system. A system can have many "
"broadcasters that each provide information about a different part of the "
"robot. Check out the writing a tf2 broadcaster tutorial :doc:`(Python) "
"<../Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Py>` :doc:`(C++) "
"<../Tutorials/Intermediate/Tf2/Writing-A-Tf2-Broadcaster-Cpp>` to learn "
"more."
msgstr ""
"Pour étendre les capacités d'un robot, vous devrez commencer à diffuser des "
"transformations. La diffusion des transformations signifie envoyer la pose "
"relative des trames de coordonnées au reste du système. Un système peut "
"avoir de nombreux diffuseurs qui fournissent chacun des informations sur une"
" partie différente du robot. Découvrez le tutoriel d'écriture d'un diffuseur"
" tf2 :doc:`(Python) <../Tutorials/Intermediate/Tf2/Writing-A-"
"Tf2-Broadcaster-Py>` :doc:`(C++) <../Tutorials/Intermediate /Tf2/Writing-A-"
"Tf2-Broadcaster-Cpp>` pour en savoir plus."

#: ../../source/Concepts/About-Tf2.rst:50
msgid ""
"In addition to that, tf2 can broadcast static transforms that do not change "
"over time. This mainly saves storage and lookup time, though the publishing "
"overhead is also improved. You should note that static transforms are "
"published once and assumed to be not changing and therefore no time history "
"stored. If you want to define static transforms in your tf2 tree, take a "
"look at the writing static tf2 broadcaster :doc:`(Python) "
"<../Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Py>` "
":doc:`(C++) <../Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-"
"Cpp>` tutorial."
msgstr ""
"En plus de cela, tf2 peut diffuser des transformations statiques qui ne "
"changent pas dans le temps. Cela permet principalement d'économiser du temps"
" de stockage et de recherche, bien que la surcharge de publication soit "
"également améliorée. Vous devez noter que les transformations statiques sont"
" publiées une seule fois et supposées ne pas changer et donc aucun "
"historique de temps n'est stocké. Si vous souhaitez définir des "
"transformations statiques dans votre arborescence tf2, jetez un œil à "
"l'écriture statique tf2 broadcaster :doc:`(Python) "
"<../Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-Py> ` "
":doc:`(C++) <../Tutorials/Intermediate/Tf2/Writing-A-Tf2-Static-Broadcaster-"
"Cpp>` tutoriel."

#: ../../source/Concepts/About-Tf2.rst:55
msgid ""
"You can also learn how to add fixed and dynamic frames to your tf2 tree in "
"adding a frame :doc:`(Python) <../Tutorials/Intermediate/Tf2/Adding-A-Frame-"
"Py>` :doc:`(C++) <../Tutorials/Intermediate/Tf2/Adding-A-Frame-Cpp>` "
"tutorial."
msgstr ""
"Vous pouvez également apprendre à ajouter des cadres fixes et dynamiques à "
"votre arbre tf2 en ajoutant un cadre :doc:`(Python) "
"<../Tutorials/Intermediate/Tf2/Adding-A-Frame-Py>` :doc:`( C++) "
"<../Tutorials/Intermediate/Tf2/Adding-A-Frame-Cpp>` tutoriel."

#: ../../source/Concepts/About-Tf2.rst:57
msgid ""
"Once you are finished with the basic tutorials, you can move on to learn "
"about tf2 and time. The tf2 and time tutorial :doc:`(Python) "
"<../Tutorials/Intermediate/Tf2/Learning-About-Tf2-And-Time-Py>` :doc:`(C++) "
"<../Tutorials/Intermediate/Tf2/Learning-About-Tf2-And-Time-Cpp>` teaches the"
" basic principles of tf2 and time. The advanced tutorial about tf2 and time "
":doc:`(Python) <../Tutorials/Intermediate/Tf2/Time-Travel-With-Tf2-Py>` "
":doc:`(C++) <../Tutorials/Intermediate/Tf2/Time-Travel-With-Tf2-Cpp>` "
"teaches the principles of time traveling with tf2."
msgstr ""
"Une fois que vous avez terminé avec les didacticiels de base, vous pouvez "
"passer à l'apprentissage de tf2 et du temps. Le tutoriel tf2 et time "
":doc:`(Python) <../Tutorials/Intermediate/Tf2/Learning-About-Tf2-And-Time-"
"Py>` :doc:`(C++) <../Tutorials/Intermediate/ Tf2/Learning-About-Tf2-And-"
"Time-Cpp>` enseigne les principes de base de tf2 et du temps. Le tutoriel "
"avancé sur tf2 et le temps :doc:`(Python) "
"<../Tutorials/Intermediate/Tf2/Time-Travel-With-Tf2-Py>` :doc:`(C++) "
"<../Tutorials/Intermediate/ Tf2/Time-Travel-With-Tf2-Cpp>` enseigne les "
"principes du voyage dans le temps avec tf2."

#: ../../source/Concepts/About-Tf2.rst:62
msgid "Paper"
msgstr "Papier"

#: ../../source/Concepts/About-Tf2.rst:64
msgid ""
"There is a paper on tf2 presented at TePRA 2013: `tf: The transform library "
"<https://ieeexplore.ieee.org/abstract/document/6556373>`_."
msgstr ""
"Il existe un article sur tf2 présenté à TePRA 2013 : `tf: The transform "
"library <https://ieeexplore.ieee.org/abstract/document/6556373>`_."

#: ../../source/Concepts/About-Topic-Statistics.rst:8
msgid "About topic statistics"
msgstr "À propos des statistiques de sujet"

#: ../../source/Concepts/About-Topic-Statistics.rst:16
msgid ""
"ROS 2 provides the integrated measurement of statistics for messages "
"received by any subscription. Allowing a user to collect subscription "
"statistics enables them to characterize the performance of their system or "
"aid in diagnosis of any present issues."
msgstr ""
"ROS 2 fournit la mesure intégrée des statistiques pour les messages reçus "
"par n'importe quel abonnement. Permettre à un utilisateur de collecter des "
"statistiques d'abonnement lui permet de caractériser les performances de son"
" système ou d'aider au diagnostic de tout problème actuel."

#: ../../source/Concepts/About-Topic-Statistics.rst:21
msgid ""
"The measurements provided are the received message age and received message "
"period. For each measurement the statistics provided are the average, "
"maximum, minimum, standard deviation, and sample count. These statistics are"
" calculated in a moving window."
msgstr ""
"Les mesures fournies sont l'âge du message reçu et la période du message "
"reçu. Pour chaque mesure, les statistiques fournies sont la moyenne, le "
"maximum, le minimum, l'écart type et le nombre d'échantillons. Ces "
"statistiques sont calculées dans une fenêtre mobile."

#: ../../source/Concepts/About-Topic-Statistics.rst:26
msgid "How statistics are calculated"
msgstr "Comment les statistiques sont calculées"

#: ../../source/Concepts/About-Topic-Statistics.rst:28
msgid ""
"Each statistic set is calculated in constant time and constant memory by "
"using the utilities implemented in the `libstatistics_collector "
"<https://github.com/ros-tooling/libstatistics_collector>`__ package. When a "
"new message is received by a subscription, this is a new sample for "
"calculation in the current measurement window. The average calculated is "
"simply a `moving average <https://en.wikipedia.org/wiki/Moving_average>`__. "
"The maximum, minimum,and sample count are updated upon receipt of each new "
"sample, whereas the standard deviation is calculated using `Welford's online"
" algorithm "
"<https://en.wikipedia.org/wiki/Algorithms_for_calculating_variance#Welford's_online_algorithm>`__."
msgstr ""
"Chaque ensemble de statistiques est calculé en temps constant et en mémoire "
"constante à l'aide des utilitaires implémentés dans le package "
"`libstatistics_collector <https://github.com/ros-"
"tooling/libstatistics_collector>`__. Lorsqu'un nouveau message est reçu par "
"un abonnement, il s'agit d'un nouvel échantillon à calculer dans la fenêtre "
"de mesure en cours. La moyenne calculée est simplement une `moyenne mobile "
"<https://en.wikipedia.org/wiki/Moving_average>`__. Le maximum, le minimum et"
" le nombre d'échantillons sont mis à jour à la réception de chaque nouvel "
"échantillon, tandis que l'écart type est calculé à l'aide de l'algorithme en"
" ligne de Welford "
"<https://en.wikipedia.org/wiki/Algorithms_for_calculating_variance#Welford's_online_algorithm>`__."

#: ../../source/Concepts/About-Topic-Statistics.rst:41
msgid "Types of statistics calculated"
msgstr "Types de statistiques calculées"

#: ../../source/Concepts/About-Topic-Statistics.rst:43
msgid "Received message period"
msgstr "Période de message reçu"

#: ../../source/Concepts/About-Topic-Statistics.rst:45
#: ../../source/Concepts/About-Topic-Statistics.rst:50
msgid "Units: milliseconds"
msgstr "Unités : millisecondes"

#: ../../source/Concepts/About-Topic-Statistics.rst:46
msgid "Uses the system clock to measure the period between received messages"
msgstr ""
"Utilise l'horloge système pour mesurer la période entre les messages reçus"

#: ../../source/Concepts/About-Topic-Statistics.rst:48
msgid "Received message age"
msgstr "Âge du message reçu"

#: ../../source/Concepts/About-Topic-Statistics.rst:51
msgid ""
"Requires a message to have a timestamp populated in the header field in "
"order to calculate the age of the message as sent from a publisher."
msgstr ""
"Nécessite qu'un message ait un horodatage rempli dans le champ d'en-tête "
"afin de calculer l'âge du message tel qu'il a été envoyé par un éditeur."

#: ../../source/Concepts/About-Topic-Statistics.rst:54
msgid "Behavior"
msgstr "Comportement"

#: ../../source/Concepts/About-Topic-Statistics.rst:56
msgid ""
"By default, Topic Statistics measurements are not enabled. After enabling "
"this feature for a specific node via the subscription configuration options,"
" both received message age and received message period measurements are "
"enabled for that specific subscription."
msgstr ""
"Par défaut, les mesures des statistiques de sujet ne sont pas activées. "
"Après avoir activé cette fonctionnalité pour un nœud spécifique via les "
"options de configuration de l'abonnement, les mesures de l'âge des messages "
"reçus et de la période des messages reçus sont activées pour cet abonnement "
"spécifique."

#: ../../source/Concepts/About-Topic-Statistics.rst:60
msgid ""
"The data is published as a `statistics_msg/msg/MetricsMessage "
"<https://github.com/ros2/rcl_interfaces/blob/rolling/statistics_msgs/msg/MetricsMessage.msg>`__"
" at a configurable period (default 1 second) to a configurable topic "
"(default ``/statistics``). Note that the publishing period also serves as "
"the sample collection window period."
msgstr ""
"Les données sont publiées sous la forme d'un "
"`statistics_msg/msg/MetricsMessage "
"<https://github.com/ros2/rcl_interfaces/blob/rolling/statistics_msgs/msg/MetricsMessage.msg>`__"
" à une période configurable (par défaut 1 seconde) à un sujet configurable "
"(par défaut ``/statistiques``). Notez que la période de publication sert "
"également de période de fenêtre de collecte d'échantillons."

#: ../../source/Concepts/About-Topic-Statistics.rst:65
msgid ""
"Since received message period requires a message timestamp in a header "
"field, empty data is published. That is, all statistics values are NaN if no"
" timestamp is found. Publishing NaN values instead of not publishing at all "
"avoids the absence of a signal problem and is meant to explicitly show that "
"a measurement could not be made."
msgstr ""
"Étant donné que la période de message reçu nécessite un horodatage de "
"message dans un champ d'en-tête, des données vides sont publiées. Autrement "
"dit, toutes les valeurs statistiques sont NaN si aucun horodatage n'est "
"trouvé. La publication des valeurs NaN au lieu de ne pas publier du tout "
"évite l'absence de problème de signal et vise à montrer explicitement qu'une"
" mesure n'a pas pu être effectuée."

#: ../../source/Concepts/About-Topic-Statistics.rst:70
msgid ""
"The first sample of each window for the received message period statistic "
"does not yield a measurement. This is because calculating this statistic "
"requires knowing the time the previous message arrived, so subsequent "
"samples in the window yield measurements."
msgstr ""
"Le premier échantillon de chaque fenêtre pour la statistique de période de "
"message reçu ne produit pas de mesure. En effet, le calcul de cette "
"statistique nécessite de connaître l'heure à laquelle le message précédent "
"est arrivé, de sorte que les échantillons suivants dans la fenêtre "
"produisent des mesures."

#: ../../source/Concepts/About-Topic-Statistics.rst:77
msgid ""
"Similar to ROS 1 `Topic Statistics "
"<https://wiki.ros.org/Topics#Topic_statistics>`__, both message age and "
"message period are calculated, albeit from the subscription side. Other ROS "
"1 metrics, e.g., the number of dropped messages or traffic volume, are "
"currently not provided."
msgstr ""
"Semblable à ROS 1 `Topic Statistics "
"<https://wiki.ros.org/Topics#Topic_statistics>`__, l'âge et la période des "
"messages sont calculés, mais du côté de l'abonnement. D'autres mesures ROS "
"1, par exemple le nombre de messages abandonnés ou le volume de trafic, ne "
"sont actuellement pas fournies."

#: ../../source/Concepts/About-Topic-Statistics.rst:82
msgid "Support"
msgstr "Soutien"

#: ../../source/Concepts/About-Topic-Statistics.rst:84
msgid ""
"This feature is currently supported in ROS 2 Foxy for C++ only (rclcpp). "
"Future work and improvements, such as Python support, can be found `here "
"<https://github.com/ros2/ros2/issues/917>`__."
msgstr ""
"Cette fonctionnalité est actuellement prise en charge dans ROS 2 Foxy pour "
"C++ uniquement (rclcpp). Les travaux et améliorations futurs, tels que la "
"prise en charge de Python, peuvent être trouvés `ici "
"<https://github.com/ros2/ros2/issues/917>`__."
