# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2023, Open Robotics
# This file is distributed under the same license as the ROS 2 documentation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: ROS 2 documentation\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-01-07 08:44+0100\n"
"PO-Revision-Date: 2023-02-09 11:56:54.516597\n"
"Last-Translator: potranslator 1.1.5\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: fr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Translated-By: potranslator 1.1.5\n"

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Service-And-Client.rst:8
msgid "Writing a simple service and client (Python)"
msgstr "Écrire un service et un client simples (Python)"

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Service-And-Client.rst:10
msgid "**Goal:** Create and run service and client nodes using Python."
msgstr ""
"**Objectif :** créer et exécuter des nœuds de service et de client à l'aide "
"de Python."

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Service-And-Client.rst:12
msgid "**Tutorial level:** Beginner"
msgstr "**Niveau du tutoriel :** Débutant"

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Service-And-Client.rst:14
msgid "**Time:** 20 minutes"
msgstr "**Durée :** 20 minutes"

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Service-And-Client.rst:18
msgid "Contents"
msgstr "Contenu"

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Service-And-Client.rst:21
msgid "Background"
msgstr "Arrière-plan"

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Service-And-Client.rst:23
msgid ""
"When :doc:`nodes <../Beginner-CLI-Tools/Understanding-"
"ROS2-Nodes/Understanding-ROS2-Nodes>` communicate using :doc:`services "
"<../Beginner-CLI-Tools/Understanding-ROS2-Services/Understanding-"
"ROS2-Services>`, the node that sends a request for data is called the client"
" node, and the one that responds to the request is the service node. The "
"structure of the request and response is determined by a ``.srv`` file."
msgstr ""
"Lorsque :doc:`nodes <../Beginner-CLI-Tools/Understanding-"
"ROS2-Nodes/Understanding-ROS2-Nodes>` communiquent en utilisant "
":doc:`services <../Beginner-CLI-Tools/Understanding-ROS2- "
"Services/Compréhension-ROS2-Services>`, le nœud qui envoie une demande de "
"données est appelé le nœud client, et celui qui répond à la demande est le "
"nœud de service. La structure de la requête et de la réponse est déterminée "
"par un fichier ``.srv``."

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Service-And-Client.rst:26
msgid ""
"The example used here is a simple integer addition system; one node requests"
" the sum of two integers, and the other responds with the result."
msgstr ""
"L'exemple utilisé ici est un simple système d'addition d'entiers ; un nœud "
"demande la somme de deux entiers et l'autre répond avec le résultat."

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Service-And-Client.rst:29
msgid "Prerequisites"
msgstr "Conditions préalables"

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Service-And-Client.rst:31
msgid ""
"In previous tutorials, you learned how to :doc:`create a workspace "
"<./Creating-A-Workspace/Creating-A-Workspace>` and :doc:`create a package "
"<./Creating-Your-First-ROS2-Package>`."
msgstr ""
"Dans les tutoriels précédents, vous avez appris à :doc:`créer un espace de "
"travail <./Creating-A-Workspace/Creating-A-Workspace>` et :doc:`créer un "
"package <./Creating-Your-First-ROS2- Forfait>`."

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Service-And-Client.rst:34
msgid "Tasks"
msgstr "Tâches"

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Service-And-Client.rst:37
msgid "1 Create a package"
msgstr "1 Créer un package"

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Service-And-Client.rst:39
msgid ""
"Open a new terminal and :doc:`source your ROS 2 installation <../Beginner-"
"CLI-Tools/Configuring-ROS2-Environment>` so that ``ros2`` commands will "
"work."
msgstr ""
"Ouvrez un nouveau terminal et :doc:`sourcez votre installation ROS 2 "
"<../Beginner-CLI-Tools/Configuring-ROS2-Environment>` pour que les commandes"
" ``ros2`` fonctionnent."

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Service-And-Client.rst:41
msgid ""
"Navigate into the ``ros2_ws`` directory created in a :ref:`previous tutorial"
" <new-directory>`."
msgstr ""
"Naviguez dans le répertoire ``ros2_ws`` créé dans un :ref:`tutoriel "
"précédent <nouveau-répertoire>`."

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Service-And-Client.rst:43
msgid ""
"Recall that packages should be created in the ``src`` directory, not the "
"root of the workspace. Navigate into ``ros2_ws/src`` and create a new "
"package:"
msgstr ""
"Rappelez-vous que les packages doivent être créés dans le répertoire "
"``src``, et non à la racine de l'espace de travail. Accédez à "
"``ros2_ws/src`` et créez un nouveau package :"

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Service-And-Client.rst:50
msgid ""
"Your terminal will return a message verifying the creation of your package "
"``py_srvcli`` and all its necessary files and folders."
msgstr ""
"Votre terminal renverra un message vérifiant la création de votre package "
"``py_srvcli`` et de tous ses fichiers et dossiers nécessaires."

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Service-And-Client.rst:52
msgid ""
"The ``--dependencies`` argument will automatically add the necessary "
"dependency lines to ``package.xml``. ``example_interfaces`` is the package "
"that includes `the .srv file "
"<https://github.com/ros2/example_interfaces/blob/rolling/srv/AddTwoInts.srv>`__"
" you will need to structure your requests and responses:"
msgstr ""
"L'argument ``--dependencies`` ajoutera automatiquement les lignes de "
"dépendance nécessaires à ``package.xml``. ``example_interfaces`` est le "
"package qui inclut `le fichier .srv "
"<https://github.com/ros2/example_interfaces/blob/rolling/srv/AddTwoInts.srv>`__"
" dont vous aurez besoin pour structurer vos requêtes et réponses :"

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Service-And-Client.rst:62
msgid ""
"The first two lines are the parameters of the request, and below the dashes "
"is the response."
msgstr ""
"Les deux premières lignes sont les paramètres de la requête, et sous les "
"tirets se trouve la réponse."

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Service-And-Client.rst:65
msgid "1.1 Update ``package.xml``"
msgstr "1.1 Mettre à jour ``package.xml``"

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Service-And-Client.rst:67
msgid ""
"Because you used the ``--dependencies`` option during package creation, you "
"don’t have to manually add dependencies to ``package.xml``."
msgstr ""
"Comme vous avez utilisé l'option ``--dependencies`` lors de la création du "
"package, vous n'avez pas besoin d'ajouter manuellement des dépendances à "
"``package.xml``."

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Service-And-Client.rst:69
msgid ""
"As always, though, make sure to add the description, maintainer email and "
"name, and license information to ``package.xml``."
msgstr ""
"Comme toujours, assurez-vous d'ajouter la description, l'adresse e-mail et "
"le nom du responsable, ainsi que les informations de licence à "
"``package.xml``."

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Service-And-Client.rst:78
msgid "1.2 Update ``setup.py``"
msgstr "1.2 Mettre à jour ``setup.py``"

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Service-And-Client.rst:80
msgid ""
"Add the same information to the ``setup.py`` file for the ``maintainer``, "
"``maintainer_email``, ``description`` and ``license`` fields:"
msgstr ""
"Ajoutez les mêmes informations au fichier ``setup.py`` pour les champs "
"``maintainer``, ``maintainer_email``, ``description`` et ``license`` :"

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Service-And-Client.rst:90
msgid "2 Write the service node"
msgstr "2 Écrivez le nœud de service"

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Service-And-Client.rst:92
msgid ""
"Inside the ``ros2_ws/src/py_srvcli/py_srvcli`` directory, create a new file "
"called ``service_member_function.py`` and paste the following code within:"
msgstr ""
"Dans le répertoire ``ros2_ws/src/py_srvcli/py_srvcli``, créez un nouveau "
"fichier appelé ``service_member_function.py`` et collez le code suivant à "
"l'intérieur :"

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Service-And-Client.rst:129
msgid "2.1 Examine the code"
msgstr "2.1 Examiner le code"

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Service-And-Client.rst:131
msgid ""
"The first ``import`` statement imports the ``AddTwoInts`` service type from "
"the ``example_interfaces`` package. The following ``import`` statement "
"imports the ROS 2 Python client library, and specifically the ``Node`` "
"class."
msgstr ""
"La première instruction ``import`` importe le type de service ``AddTwoInts``"
" du paquet ``example_interfaces``. L'instruction ``import`` suivante importe"
" la bibliothèque client ROS 2 Python, et plus particulièrement la classe "
"``Node``."

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Service-And-Client.rst:141
msgid ""
"The ``MinimalService`` class constructor initializes the node with the name "
"``minimal_service``. Then, it creates a service and defines the type, name, "
"and callback."
msgstr ""
"Le constructeur de la classe ``MinimalService`` initialise le nœud avec le "
"nom ``minimal_service``. Ensuite, il crée un service et définit le type, le "
"nom et le rappel."

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Service-And-Client.rst:150
msgid ""
"The definition of the service callback receives the request data, sums it, "
"and returns the sum as a response."
msgstr ""
"La définition du rappel de service reçoit les données de la demande, les "
"additionne et renvoie la somme en réponse."

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Service-And-Client.rst:160
msgid ""
"Finally, the main class initializes the ROS 2 Python client library, "
"instantiates the ``MinimalService`` class to create the service node and "
"spins the node to handle callbacks."
msgstr ""
"Enfin, la classe principale initialise la bibliothèque client Python ROS 2, "
"instancie la classe ``MinimalService`` pour créer le nœud de service et fait"
" tourner le nœud pour gérer les rappels."

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Service-And-Client.rst:163
msgid "2.2 Add an entry point"
msgstr "2.2 Ajouter un point d'entrée"

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Service-And-Client.rst:165
msgid ""
"To allow the ``ros2 run`` command to run your node, you must add the entry "
"point to ``setup.py`` (located in the ``ros2_ws/src/py_srvcli`` directory)."
msgstr ""
"Pour permettre à la commande ``ros2 run`` d'exécuter votre nœud, vous devez "
"ajouter le point d'entrée à ``setup.py`` (situé dans le répertoire "
"``ros2_ws/src/py_srvcli``)."

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Service-And-Client.rst:167
msgid "Add the following line between the ``'console_scripts':`` brackets:"
msgstr "Ajoutez la ligne suivante entre les crochets ``'console_scripts':`` :"

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Service-And-Client.rst:174
msgid "3 Write the client node"
msgstr "3 Écrivez le nœud client"

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Service-And-Client.rst:176
msgid ""
"Inside the ``ros2_ws/src/py_srvcli/py_srvcli`` directory, create a new file "
"called ``client_member_function.py`` and paste the following code within:"
msgstr ""
"Dans le répertoire ``ros2_ws/src/py_srvcli/py_srvcli``, créez un nouveau "
"fichier appelé ``client_member_function.py`` et collez le code suivant à "
"l'intérieur :"

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Service-And-Client.rst:222
msgid "3.1 Examine the code"
msgstr "3.1 Examiner le code"

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Service-And-Client.rst:224
msgid ""
"The only different ``import`` statement for the client is ``import sys``. "
"The client node code uses `sys.argv "
"<https://docs.python.org/3/library/sys.html#sys.argv>`__ to get access to "
"command line input arguments for the request."
msgstr ""
"La seule instruction ``import`` différente pour le client est ``import "
"sys``. Le code du nœud client utilise `sys.argv "
"<https://docs.python.org/3/library/sys.html#sys.argv>`__ pour accéder aux "
"arguments d'entrée de la ligne de commande pour la requête."

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Service-And-Client.rst:227
msgid ""
"The constructor definition creates a client with the same type and name as "
"the service node. The type and name must match for the client and service to"
" be able to communicate."
msgstr ""
"La définition du constructeur crée un client avec le même type et le même "
"nom que le nœud de service. Le type et le nom doivent correspondre pour que "
"le client et le service puissent communiquer."

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Service-And-Client.rst:230
msgid ""
"The ``while`` loop in the constructor checks if a service matching the type "
"and name of the client is available once a second."
msgstr ""
"La boucle ``while`` dans le constructeur vérifie si un service correspondant"
" au type et au nom du client est disponible une fois par seconde."

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Service-And-Client.rst:232
msgid "Below the constructor is the request definition, followed by ``main``."
msgstr ""
"Sous le constructeur se trouve la définition de la requête, suivie de "
"``main``."

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Service-And-Client.rst:234
msgid ""
"The only significant difference in the client’s ``main`` is the ``while`` "
"loop. The loop checks the ``future`` to see if there is a response from the "
"service, as long as the system is running. If the service has sent a "
"response, the result will be written in a log message."
msgstr ""
"La seule différence significative dans le ``main`` du client est la boucle "
"``while``. La boucle vérifie le ``futur`` pour voir s'il y a une réponse du "
"service, tant que le système est en cours d'exécution. Si le service a "
"envoyé une réponse, le résultat sera écrit dans un message de journal."

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Service-And-Client.rst:240
msgid "3.2 Add an entry point"
msgstr "3.2 Ajouter un point d'entrée"

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Service-And-Client.rst:242
msgid ""
"Like the service node, you also have to add an entry point to be able to run"
" the client node."
msgstr ""
"Comme le nœud de service, vous devez également ajouter un point d'entrée "
"pour pouvoir exécuter le nœud client."

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Service-And-Client.rst:244
msgid ""
"The ``entry_points`` field of your ``setup.py`` file should look like this:"
msgstr ""
"Le champ ``entry_points`` de votre fichier ``setup.py`` devrait ressembler à"
" ceci :"

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Service-And-Client.rst:256
msgid "4 Build and run"
msgstr "4 Construire et exécuter"

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Service-And-Client.rst:258
msgid ""
"It's good practice to run ``rosdep`` in the root of your workspace "
"(``ros2_ws``) to check for missing dependencies before building:"
msgstr ""
"Il est recommandé d'exécuter ``rosdep`` à la racine de votre espace de "
"travail (``ros2_ws``) pour vérifier les dépendances manquantes avant de "
"compiler :"

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Service-And-Client.rst:262
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Service-And-Client.rst:287
msgid "Linux"
msgstr "Linux"

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Service-And-Client.rst:268
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Service-And-Client.rst:293
msgid "macOS"
msgstr "macOS"

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Service-And-Client.rst:270
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Service-And-Client.rst:274
msgid "rosdep only runs on Linux, so you can skip ahead to next step."
msgstr ""
"rosdep ne fonctionne que sous Linux, vous pouvez donc passer à l'étape "
"suivante."

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Service-And-Client.rst:272
#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Service-And-Client.rst:299
msgid "Windows"
msgstr "les fenêtres"

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Service-And-Client.rst:277
msgid ""
"Navigate back to the root of your workspace, ``ros2_ws``, and build your new"
" package:"
msgstr ""
"Revenez à la racine de votre espace de travail, ``ros2_ws``, et créez votre "
"nouveau package :"

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Service-And-Client.rst:283
msgid ""
"Open a new terminal, navigate to ``ros2_ws``, and source the setup files:"
msgstr ""
"Ouvrez un nouveau terminal, accédez à ``ros2_ws`` et sourcez les fichiers "
"d'installation :"

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Service-And-Client.rst:305
msgid "Now run the service node:"
msgstr "Exécutez maintenant le nœud de service :"

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Service-And-Client.rst:311
msgid "The node will wait for the client’s request."
msgstr "Le nœud attendra la demande du client."

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Service-And-Client.rst:313
msgid ""
"Open another terminal and source the setup files from inside ``ros2_ws`` "
"again. Start the client node, followed by any two integers separated by a "
"space:"
msgstr ""
"Ouvrez un autre terminal et sourcez à nouveau les fichiers de configuration "
"depuis ``ros2_ws``. Démarrez le nœud client, suivi de deux nombres entiers "
"séparés par un espace :"

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Service-And-Client.rst:320
msgid ""
"If you chose ``2`` and ``3``, for example, the client would receive a "
"response like this:"
msgstr ""
"Si vous choisissez ``2`` et ``3``, par exemple, le client recevra une "
"réponse comme celle-ci :"

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Service-And-Client.rst:326
msgid ""
"Return to the terminal where your service node is running. You will see that"
" it published log messages when it received the request:"
msgstr ""
"Revenez au terminal sur lequel votre nœud de service est en cours "
"d'exécution. Vous verrez qu'il a publié des messages de journal lorsqu'il a "
"reçu la demande :"

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Service-And-Client.rst:334
msgid ""
"Enter ``Ctrl+C`` in the server terminal to stop the node from spinning."
msgstr ""
"Entrez ``Ctrl+C`` dans le terminal du serveur pour empêcher le nœud de "
"tourner."

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Service-And-Client.rst:338
msgid "Summary"
msgstr "Résumé"

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Service-And-Client.rst:340
msgid ""
"You created two nodes to request and respond to data over a service. You "
"added their dependencies and executables to the package configuration files "
"so that you could build and run them, allowing you to see a service/client "
"system at work."
msgstr ""
"Vous avez créé deux nœuds pour demander et répondre aux données sur un "
"service. Vous avez ajouté leurs dépendances et leurs exécutables aux "
"fichiers de configuration du package afin de pouvoir les créer et les "
"exécuter, ce qui vous permet de voir un système service/client au travail."

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Service-And-Client.rst:344
msgid "Next steps"
msgstr "Prochaines étapes"

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Service-And-Client.rst:346
msgid ""
"In the last few tutorials you've been utilizing interfaces to pass data "
"across topics and services. Next, you'll learn how to :doc:`create custom "
"interfaces <./Custom-ROS2-Interfaces>`."
msgstr ""
"Dans les derniers didacticiels, vous avez utilisé des interfaces pour "
"transmettre des données entre des sujets et des services. Ensuite, vous "
"apprendrez à :doc:`créer des interfaces personnalisées <./Custom-"
"ROS2-Interfaces>`."

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Service-And-Client.rst:350
msgid "Related content"
msgstr "Contenu connexe"

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Service-And-Client.rst:352
msgid ""
"There are several ways you could write a service and client in Python; check"
" out the ``minimal_client`` and ``minimal_service`` packages in the "
"`ros2/examples "
"<https://github.com/ros2/examples/tree/rolling/rclpy/services>`_ repo."
msgstr ""
"Il existe plusieurs façons d'écrire un service et un client en Python ; "
"consultez les packages ``minimal_client`` et ``minimal_service`` dans le "
"dépôt `ros2/examples "
"<https://github.com/ros2/examples/tree/rolling/rclpy/services>`_."

#: ../../source/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Service-And-Client.rst:354
msgid ""
"In this tutorial, you used the ``call_async()`` API in your client node to "
"call the service. There is another service call API available for Python "
"called synchronous calls. We do not recommend using synchronous calls, but "
"if you'd like to learn more about them, read the guide to :doc:`Synchronous "
"vs. asynchronous clients <../../How-To-Guides/Sync-Vs-Async>`."
msgstr ""
"Dans ce tutoriel, vous avez utilisé l'API ``call_async()`` dans votre nœud "
"client pour appeler le service. Il existe une autre API d'appel de service "
"disponible pour Python appelée appels synchrones. Nous vous déconseillons "
"d'utiliser les appels synchrones, mais si vous souhaitez en savoir plus à "
"leur sujet, lisez le guide :doc:`Clients synchrones vs asynchrones "
"<../../How-To-Guides/Sync-Vs- Asynchrone>`."
