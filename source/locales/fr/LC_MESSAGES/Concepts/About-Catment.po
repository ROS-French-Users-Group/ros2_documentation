# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2023, Open Robotics
# This file is distributed under the same license as the ROS 2 documentation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: ROS 2 documentation\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-01-07 08:44+0100\n"
"PO-Revision-Date: 2023-01-07 14:06:23.378228\n"
"Last-Translator: potranslator 1.1.5\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: fr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Translated-By: potranslator 1.1.5\n"

#: ../../source/Concepts/About-Catment.rst:6
msgid "On the mixing of ament and catkin (catment)"
msgstr "Sur le mélange d'ament et de chaton (catment)"

#: ../../source/Concepts/About-Catment.rst:8
msgid "**All that follows is experimental and speculative.**"
msgstr "**Tout ce qui suit est expérimental et spéculatif.**"

#: ../../source/Concepts/About-Catment.rst:12
msgid "Table of Contents"
msgstr "Table des matières"

#: ../../source/Concepts/About-Catment.rst:15
msgid "Background"
msgstr "Fond"

#: ../../source/Concepts/About-Catment.rst:17
msgid ""
"There once was a thing called ``rosbuild``. Then came a thing called "
"``catkin``, which largely replaced ``rosbuild``. Recently introduced is a "
"thing called ``ament``, which may one day replace ``catkin``."
msgstr ""
"Il était une fois une chose appelée ``rosbuild``. Puis vint une chose "
"appelée ``catkin``, qui remplaça largement ``rosbuild``. Récemment introduit"
" est une chose appelée ``ament``, qui pourrait un jour remplacer ``catkin``."

#: ../../source/Concepts/About-Catment.rst:21
msgid ""
"All three tools can be considered \"meta-build systems.\" They sit atop "
"other build systems (e.g., CMake, Python setuptools) and provide extra "
"functionality that's intended to make those build systems easier to use, "
"especially when managing dependencies across multiple packages and when "
"building multiple packages in a single workspace."
msgstr ""
"Les trois outils peuvent être considérés comme des \"systèmes de méta-"
"construction\". Ils reposent sur d'autres systèmes de construction (par "
"exemple, CMake, Python setuptools) et fournissent des fonctionnalités "
"supplémentaires destinées à faciliter l'utilisation de ces systèmes de "
"construction, en particulier lors de la gestion des dépendances entre "
"plusieurs packages et lors de la création de plusieurs packages dans un seul"
" espace de travail."

#: ../../source/Concepts/About-Catment.rst:24
msgid "Each of these meta-build systems does two things:"
msgstr "Chacun de ces systèmes de méta-construction fait deux choses :"

#: ../../source/Concepts/About-Catment.rst:28
msgid ""
"Add API to the underlying build system (e.g,. CMake) that can be used to "
"simplify common tasks (e.g., supplying all the flags exported by depended-"
"upon packages when building an executable). There are usually hooks to allow"
" injection of extra API by packages outside of the core meta-build system."
msgstr ""
"Ajoutez une API au système de construction sous-jacent (par exemple, CMake) "
"qui peut être utilisée pour simplifier les tâches courantes (par exemple, "
"fournir tous les indicateurs exportés par les packages dépendants lors de la"
" construction d'un exécutable). Il existe généralement des crochets pour "
"permettre l'injection d'API supplémentaires par des packages en dehors du "
"système de méta-construction principal."

#: ../../source/Concepts/About-Catment.rst:32
msgid ""
"``rosbuild``: ``mk/cmake.mk``, ``rosbuild_init()``, "
"``rosbuild_add_executable()``, etc."
msgstr ""
"``rosbuild`` : ``mk/cmake.mk``, ``rosbuild_init()``, "
"``rosbuild_add_executable()``, etc."

#: ../../source/Concepts/About-Catment.rst:33
msgid "``catkin``: ``catkin_package()``, ``catkin_install_python()``, etc."
msgstr "``catkin`` : ``catkin_package()``, ``catkin_install_python()``, etc."

#: ../../source/Concepts/About-Catment.rst:34
msgid ""
"``ament``: ``ament_target_dependencies()``, ``ament_export_dependencies()``,"
" ``ament_package()``, etc."
msgstr ""
"``ament'' : ``ament_target_dependencies()'', "
"``ament_export_dependencies()'', ``ament_package()'', etc."

#: ../../source/Concepts/About-Catment.rst:37
msgid ""
"Provide a tool that can be used to iterate in dependency order over a "
"workspace full of packages, building and perhaps installing each one."
msgstr ""
"Fournir un outil qui peut être utilisé pour itérer dans l'ordre des "
"dépendances sur un espace de travail rempli de packages, en créant et peut-"
"être en installant chacun d'eux."

#: ../../source/Concepts/About-Catment.rst:40
msgid "``rosbuild``: ``rosmake``"
msgstr "``rosbuild`` : ``rosmake``"

#: ../../source/Concepts/About-Catment.rst:41
msgid ""
"``catkin``: ``catkin build``, ``catkin_make``, ``catkin_make_isolated``, "
"etc."
msgstr ""
"``catkin`` : ``catkin build``, ``catkin_make``, ``catkin_make_isolated``, "
"etc."

#: ../../source/Concepts/About-Catment.rst:42
msgid "``ament``: ``ament build``"
msgstr "``ament'' : ``ament build''"

#: ../../source/Concepts/About-Catment.rst:44
msgid ""
"The common thread that ties all of these systems together is the division of"
" the code into **packages**\\ , with each package containing a manifest file"
" (``manifest.xml`` or ``package.xml``). This manifest is required (with some"
" exceptions) for both parts of the meta-build system (API and building tool)"
" to function."
msgstr ""
"Le fil conducteur qui relie tous ces systèmes est la division du code en "
"**packages**\\ , chaque paquet contenant un fichier manifeste "
"(``manifest.xml`` ou ``package.xml``). Ce manifeste est requis (à quelques "
"exceptions près) pour que les deux parties du système de méta-construction "
"(API et outil de construction) fonctionnent."

#: ../../source/Concepts/About-Catment.rst:48
msgid "Postulates"
msgstr "Postulats"

#: ../../source/Concepts/About-Catment.rst:51
msgid ""
"**While we usually consider the two aspects of a meta-build system to be "
"coupled, they needn't be.** The API used inside a package and the tool that "
"iterates over the packages can be considered largely independent, with the "
"package manifest forming the interface between them. There's no reason in "
"principle why, for example, ``rosmake`` couldn't be modified to iterate over"
" a workspace filled with ``catkin`` packages, stepping into them in "
"dependency order and doing the usual ``mkdir build; cd build; cmake ..; make"
" install`` routine for each one (with appropriate flags passed to ``cmake`` "
"and ``make``)."
msgstr ""
"**Alors que nous considérons généralement que les deux aspects d'un système "
"de méta-construction sont couplés, ils ne doivent pas l'être.** L'API "
"utilisée à l'intérieur d'un package et l'outil qui itère sur les packages "
"peuvent être considérés comme largement indépendants, avec le package "
"manifeste formant l'interface entre eux. Il n'y a aucune raison en principe "
"pour laquelle, par exemple, ``rosmake`` ne pourrait pas être modifié pour "
"itérer sur un espace de travail rempli de packages ``catkin``, en y entrant "
"dans l'ordre des dépendances et en faisant l'habituel ``mkdir build ; "
"construction de cd ; cmake ..; make install`` routine pour chacun (avec les "
"drapeaux appropriés passés à ``cmake`` et ``make``)."

#: ../../source/Concepts/About-Catment.rst:55
msgid ""
"**The effort required to migrate from one meta-build system to another "
"should be minimized.** The mass migration from ``rosbuild`` to ``catkin`` "
"was difficult and remains a sore point for many in the community. While it's"
" reasonable to ask developers to make changes in exchange for getting access"
" to new functionality, the changes that are required should be as small as "
"possible without sacrificing the effectiveness of the new system. This is "
"especially true when the old system is in widespread use."
msgstr ""
"**L'effort requis pour migrer d'un système de méta-construction à un autre "
"doit être minimisé.** La migration massive de ``rosbuild`` à ``catkin`` a "
"été difficile et reste un point sensible pour de nombreux membres de la "
"communauté. Bien qu'il soit raisonnable de demander aux développeurs "
"d'apporter des modifications en échange de l'accès à de nouvelles "
"fonctionnalités, les modifications requises doivent être aussi minimes que "
"possible sans sacrifier l'efficacité du nouveau système. Cela est "
"particulièrement vrai lorsque l'ancien système est largement utilisé."

#: ../../source/Concepts/About-Catment.rst:61
msgid ""
"Corollary: **Migration to a new meta-build system should not be required "
"without a very good reason.** If a developer doesn't want the functionality "
"offered by the new system, then she shouldn't be coerced into migrating from"
" the old system unless there's something irrevocably broken about the old "
"system (e.g., ``rosbuild``\\ 's in-source build pattern and lack of an "
"\"install\" step)."
msgstr ""
"Corollaire : **La migration vers un nouveau système de méta-construction ne "
"devrait pas être requise sans une très bonne raison.** Si un développeur ne "
"souhaite pas les fonctionnalités offertes par le nouveau système, il ne doit"
" pas être contraint de migrer depuis le ancien système à moins qu'il y ait "
"quelque chose de irrévocablement cassé sur l'ancien système (par exemple, le"
" modèle de construction dans la source de ``rosbuild``\\ et l'absence d'une "
"étape \"d'installation\")."

#: ../../source/Concepts/About-Catment.rst:65
msgid ""
"**Interoperability is a good thing.** Whenever possible (not all "
"combinations will be practical), developers should be able to mix and match "
"meta-build systems, including mixing their different aspects (i.e., use the "
"building tool from one system and the API from another). Such mixing and "
"matching is especially important when developers want to combine a large "
"existing code base using one meta-build system (e.g., ROS with ``catkin``) "
"with new libraries and tools offered by a code base using another meta-build"
" system (e.g., ROS 2 with ``ament``). Ideally that kind of combination can "
"be done without requiring changes to the API used by either code base and "
"without telling the developer which builder tool to use."
msgstr ""
"**L'interopérabilité est une bonne chose.** Dans la mesure du possible "
"(toutes les combinaisons ne seront pas pratiques), les développeurs doivent "
"pouvoir mélanger et assortir les systèmes de méta-construction, y compris en"
" mélangeant leurs différents aspects (c'est-à-dire utiliser l'outil de "
"construction d'un système et l'API d'un autre). Un tel mélange et "
"correspondance est particulièrement important lorsque les développeurs "
"veulent combiner une grande base de code existante en utilisant un système "
"de méta-construction (par exemple, ROS avec ``catkin``) avec de nouvelles "
"bibliothèques et outils offerts par une base de code en utilisant un autre "
"système de méta-construction (par exemple, ROS 2 avec ``ament``). "
"Idéalement, ce type de combinaison peut être effectué sans nécessiter de "
"modifications de l'API utilisée par l'une ou l'autre des bases de code et "
"sans dire au développeur quel outil de création utiliser."

#: ../../source/Concepts/About-Catment.rst:71
msgid ""
"Corollary: **Workspaces needn't be homogeneous.** There's no reason that we "
"shouldn't be able to freely mix, say, ``catkin`` and ``ament`` packages in "
"one workspace, with dependencies going in both directions, so long as the "
"builder tool in use knows how to build them both. The primary interface "
"between packages (at least, CMake-controlled packages) is their CMake "
"configuration file. So long as that configuration file follows the standard "
"protocol (setting ``foo_LIBRARIES``, etc.), then it shouldn't matter who "
"wrote the file. It could be auto-generated by ``catkin`` or ``ament``, or "
"even manually crafted by a developer who wants to use plain CMake in her "
"package, but still have that package depended-upon by ``catkin`` or "
"``ament`` packages."
msgstr ""
"Corollaire : **Les espaces de travail n'ont pas besoin d'être homogènes.** "
"Il n'y a aucune raison pour que nous ne soyons pas en mesure de mélanger "
"librement, disons, les packages ``catkin`` et ``ament`` dans un espace de "
"travail, avec des dépendances dans les deux directions, tant que l'outil de "
"construction utilisé sait comment les construire tous les deux. L'interface "
"principale entre les packages (au moins, les packages contrôlés par CMake) "
"est leur fichier de configuration CMake. Tant que ce fichier de "
"configuration suit le protocole standard (configuration ``foo_LIBRARIES``, "
"etc.), alors peu importe qui a écrit le fichier. Il peut être généré "
"automatiquement par ``catkin`` ou ``ament``, ou même créé manuellement par "
"un développeur qui souhaite utiliser CMake dans son package, mais dont le "
"package dépend toujours de ``catkin`` ou ``ament`` packages."

#: ../../source/Concepts/About-Catment.rst:78
msgid "Use cases, with experimental implementations"
msgstr "Cas d'utilisation, avec implémentations expérimentales"

#: ../../source/Concepts/About-Catment.rst:81
msgid ""
"Adding ROS packages to a ROS 2 workspace and building with ``ament build``"
msgstr ""
"Ajout de packages ROS à un espace de travail ROS 2 et construction avec "
"``ament build``"

#: ../../source/Concepts/About-Catment.rst:83
msgid ""
"Let's say that you want to add some existing ROS packages to your ROS 2 "
"workspace and don't want to migrate the ROS packages from ``catkin`` to "
"``ament`` (or vice versa). Here are two patches that let you do that:"
msgstr ""
"Supposons que vous souhaitiez ajouter des packages ROS existants à votre "
"espace de travail ROS 2 et que vous ne souhaitiez pas migrer les packages "
"ROS de ``catkin`` vers ``ament`` (ou vice versa). Voici deux patchs qui vous"
" permettent de faire cela :"

#: ../../source/Concepts/About-Catment.rst:86
msgid ""
"`ament_package "
"<https://github.com/ament/ament_package/compare/catkin?expand=1>`__: Add "
"support for format 1 package manifests, instead of requiring format 2. This "
"change isn't strictly related to ``catkin`` vs. ``ament``, because format 2 "
"has been around for a while and ``catkin`` supports it, so developers could "
"already update their manifests to format 2. But there's a ton of ROS code "
"out there that uses format 1, so we should support it. This implementation "
"could be improved, e.g., by reasoning over the various flavors of depend "
"tags and how they differ between formats 1 and 2."
msgstr ""
"`ament_package "
"<https://github.com/ament/ament_package/compare/catkin?expand=1>`__ : ajout "
"de la prise en charge des manifestes de package de format 1, au lieu "
"d'exiger le format 2. Cette modification n'est pas strictement liée à `` "
"catkin`` contre ``ament``, car le format 2 existe depuis un certain temps et"
" ``catkin`` le prend en charge, donc les développeurs pourraient déjà mettre"
" à jour leurs manifestes au format 2. Mais il y a une tonne de code ROS là-"
"bas qui utilise le format 1, nous devons donc le prendre en charge. Cette "
"implémentation pourrait être améliorée, par exemple, en raisonnant sur les "
"différentes saveurs des balises depend et comment elles diffèrent entre les "
"formats 1 et 2."

#: ../../source/Concepts/About-Catment.rst:91
msgid ""
"`ament_tools "
"<https://github.com/ament/ament_tools/compare/catkin?expand=1>`__: Add a new"
" ``catkin`` build type to ``ament``. This implementation just treats "
"``catkin`` packages the same as plain ``cmake`` packages, which seems to "
"work fine. It could be made more sophisticated."
msgstr ""
"`ament_tools "
"<https://github.com/ament/ament_tools/compare/catkin?expand=1>`__ : ajoutez "
"un nouveau type de construction ``catkin`` à ``ament``. Cette implémentation"
" traite simplement les packages ``catkin`` de la même manière que les "
"packages ``cmake`` simples, ce qui semble fonctionner correctement. Il "
"pourrait être rendu plus sophistiqué."

#: ../../source/Concepts/About-Catment.rst:96
msgid "Example usage:"
msgstr "Example usage:"

#: ../../source/Concepts/About-Catment.rst:99
msgid "Get the ROS 2 code as usual, using the branches mentioned above."
msgstr ""
"Obtenez le code ROS 2 comme d'habitude, en utilisant les branches "
"mentionnées ci-dessus."

#: ../../source/Concepts/About-Catment.rst:100
msgid ""
"Add to your workspace some ``catkin`` ROS packages, ensuring that all of "
"their dependencies are satisfied (either also present in the workspace or "
"installed elsewhere with appropriate setup shell files sourced)."
msgstr ""
"Ajoutez à votre espace de travail des packages ``catkin`` ROS, en vous "
"assurant que toutes leurs dépendances sont satisfaites (soit également "
"présentes dans l'espace de travail, soit installées ailleurs avec les "
"fichiers shell de configuration appropriés)."

#: ../../source/Concepts/About-Catment.rst:101
msgid ""
"Build as usual (e.g., ``./src/ament/ament_tools/scripts/ament.by build``)."
msgstr ""
"Construisez comme d'habitude (par exemple, "
"``./src/ament/ament_tools/scripts/ament.by build``)."

#: ../../source/Concepts/About-Catment.rst:103
msgid ""
"Voila: your existing code isn't suddenly broken just because there's a new "
"builder tool in use."
msgstr ""
"Voila : votre code existant n'est pas soudainement cassé simplement parce "
"qu'un nouvel outil de création est utilisé."

#: ../../source/Concepts/About-Catment.rst:106
msgid "Variation: Building ROS packages with ``ament build``"
msgstr "Variante : Construire des packages ROS avec ``ament build``"

#: ../../source/Concepts/About-Catment.rst:108
msgid ""
"Let's say that you love the new ``ament`` tool and want to use it to build "
"your existing ROS packages that use ``catkin`` internally. Here's an example"
" of how to do that, by doing a minimal installation of ``ament`` and then "
"using it to build a workspace full of ROS ``catkin`` packages:"
msgstr ""
"Disons que vous aimez le nouvel outil ``ament`` et que vous souhaitez "
"l'utiliser pour construire vos packages ROS existants qui utilisent "
"``catkin`` en interne. Voici un exemple de la façon de procéder, en "
"effectuant une installation minimale de ``ament``, puis en l'utilisant pour "
"créer un espace de travail rempli de packages ROS ``catkin`` :"

#: ../../source/Concepts/About-Catment.rst:126
msgid "Now build the ROS packages:"
msgstr "Construisez maintenant les packages ROS :"

#: ../../source/Concepts/About-Catment.rst:134
msgid ""
"Voila: you used the ``ament`` build tool to build your ``catkin`` packages, "
"without having to migrate them."
msgstr ""
"Voilà : vous avez utilisé l'outil de compilation ``ament`` pour créer vos "
"packages ``catkin``, sans avoir à les migrer."

#: ../../source/Concepts/About-Catment.rst:137
msgid "Variation: Using the ``catkin`` API in a ROS 2 package"
msgstr "Variante : Utilisation de l'API ``catkin`` dans un package ROS 2"

#: ../../source/Concepts/About-Catment.rst:139
msgid ""
"Let's say that you're building on top of ROS 2, which internally uses the "
"``ament`` API, and you want to add a new package using the ``catkin`` API."
msgstr ""
"Supposons que vous construisiez au-dessus de ROS 2, qui utilise en interne "
"l'API ``ament``, et que vous souhaitiez ajouter un nouveau package à l'aide "
"de l'API ``catkin``."

#: ../../source/Concepts/About-Catment.rst:141
msgid ""
"To make this work, we need a Python3 installation of ``catkin`` (the binary "
"debians use Python2.7). Here's an example of doing that, installing to "
"``$HOME/catkin``:"
msgstr ""
"Pour que cela fonctionne, nous avons besoin d'une installation Python3 de "
"``catkin`` (les binaires debian utilisent Python2.7). Voici un exemple "
"d'installation dans ``$HOME/catkin`` :"

#: ../../source/Concepts/About-Catment.rst:160
msgid ""
"To use that version of catkin, you just need to source the "
"``$HOME/catkin/setup.bash`` file."
msgstr ""
"Pour utiliser cette version de catkin, il vous suffit de sourcer le fichier "
"``$HOME/catkin/setup.bash``."

#: ../../source/Concepts/About-Catment.rst:162
msgid ""
"Let's assume that you have the usual ROS 2 workspace in ``~/ros2_ws``, and "
"that you're on the ``catkin`` branches in ``ament_package`` and "
"``ament_tools``. Add to that workspace the ``image_tools_catkin`` package "
"from https://github.com/gerkey/catment. It's a simple port of the ROS 2 "
"``image_tools`` package, taking it from the ``ament`` API to the ``catkin`` "
"API. To build it:"
msgstr ""
"Supposons que vous ayez l'espace de travail habituel de ROS 2 dans "
"``~/ros2_ws``, et que vous soyez sur les branches ``catkin`` dans "
"``ament_package`` et ``ament_tools``. Ajoutez à cet espace de travail le "
"package ``image_tools_catkin`` de https://github.com/gerkey/catment. C'est "
"un simple portage du package ``image_tools`` de ROS 2, le prenant de l'API "
"``ament`` à l'API ``catkin``. Pour le construire :"

#: ../../source/Concepts/About-Catment.rst:173
msgid ""
"Voila: when adding new packages atop ROS 2, you're free to choose which "
"CMake API you prefer inside your package."
msgstr ""
"Voilà : lors de l'ajout de nouveaux packages sur ROS 2, vous êtes libre de "
"choisir l'API CMake que vous préférez dans votre package."

#: ../../source/Concepts/About-Catment.rst:176
msgid ""
"**Caveat**: Requires commenting out the use of ``CATKIN_DEPENDS`` inside "
"``catkin_package()``, because somewhere somebody was getting upset that "
"things like ``rclcpp`` aren't ``catkin`` packages. That constraint needs to "
"be relaxed somehow."
msgstr ""
"**Mise en garde** : Nécessite de commenter l'utilisation de "
"``CATKIN_DEPENDS`` dans ``catkin_package()``, car quelque part quelqu'un "
"s'énervait que des choses comme ``rclcpp`` ne soient pas des packages "
"``catkin``. Cette contrainte doit être assouplie d'une manière ou d'une "
"autre."

#: ../../source/Concepts/About-Catment.rst:178
msgid ""
"**TODO**: The same demo but with a ``ament`` package that depends on a "
"``catkin`` package (this is easy)."
msgstr ""
"**TODO** : La même démo mais avec un package ``ament`` qui dépend d'un "
"package ``catkin`` (c'est facile)."

#: ../../source/Concepts/About-Catment.rst:179
msgid ""
"**TODO**: The same demo but with a package that has a vanilla "
"``CMakeLists.txt`` that uses neither ``ament`` nor ``catkin``, and provides "
"a manually generated ``fooConfig.cmake`` file that exports the right stuff "
"to make it look the same to outsiders."
msgstr ""
"**TODO** : La même démo mais avec un paquet qui a un ``CMakeLists.txt`` "
"vanille qui n'utilise ni ``ament`` ni ``catkin``, et fournit un "
"``fooConfig.cmake` généré manuellement ` qui exporte les bons éléments pour "
"les rendre identiques aux étrangers."

#: ../../source/Concepts/About-Catment.rst:182
msgid "Building ROS 2 packages with ``catkin_make_isolated``"
msgstr "Construire des packages ROS 2 avec ``catkin_make_isolated``"

#: ../../source/Concepts/About-Catment.rst:184
msgid ""
"Let's say that you're already familiar with ROS and ``catkin`` and that "
"you're excited to try ROS 2, but that you're not in the mood to learn about "
"``ament``. You'd rather stick to what you know, such as using "
"``catkin_make_isolated`` to build everything. Here is a patch that allows "
"you to do that:"
msgstr ""
"Disons que vous connaissez déjà ROS et ``catkin`` et que vous êtes impatient"
" d'essayer ROS 2, mais que vous n'êtes pas d'humeur à en savoir plus sur "
"``ament``. Vous préférez vous en tenir à ce que vous savez, comme utiliser "
"``catkin_make_isolated`` pour tout construire. Voici un patch qui vous "
"permet de faire cela :"

#: ../../source/Concepts/About-Catment.rst:189
msgid ""
"`catkin <https://github.com/ros/catkin/compare/ament?expand=1>`__: Add "
"support for packages that declare themselves to have a build type of "
"``ament_*``. This implementation calls out to ``ament`` to build each such "
"package. While ``ament_cmake`` packages can be treated as plain ``cmake`` "
"packages (as we did when adding ``catkin`` support to ``ament``), "
"``ament_python`` packages require some gnarly invocations of Python. Instead"
" of trying to replicate that logic in ``catkin``, it's easier to just let "
"``ament`` handle it. Also in this patch, we add the "
"``buildtool_export_depend`` packages to the set that are considered when "
"building."
msgstr ""
"`catkin <https://github.com/ros/catkin/compare/ament?expand=1>`__ : ajout de"
" la prise en charge des packages qui se déclarent avoir un type de "
"construction ``ament_*``. Cette implémentation appelle ``ament`` pour "
"construire chacun de ces packages. Alors que les packages ``ament_cmake`` "
"peuvent être traités comme des packages ``cmake`` simples (comme nous "
"l'avons fait lors de l'ajout de la prise en charge de ``catkin`` à "
"``ament``), les packages ``ament_python`` nécessitent des invocations gnarly"
" de Python . Au lieu d'essayer de reproduire cette logique dans ``catkin``, "
"il est plus simple de laisser ``ament`` s'en occuper. Toujours dans ce "
"patch, nous ajoutons les packages ``buildtool_export_depend`` à l'ensemble "
"qui sont pris en compte lors de la construction."

#: ../../source/Concepts/About-Catment.rst:195
msgid ""
"`catkin_pkg <https://github.com/ros-"
"infrastructure/catkin_pkg/compare/ament?expand=1>`__: Also in this patch, we"
" add the ``buildtool_export_depend`` packages to the set that are considered"
" when computing the topological order."
msgstr ""
"`catkin_pkg <https://github.com/ros-"
"infrastructure/catkin_pkg/compare/ament?expand=1>`__ : également dans ce "
"correctif, nous ajoutons les packages ``buildtool_export_depend`` à "
"l'ensemble qui sont pris en compte lors du calcul l'ordre topologique."

#: ../../source/Concepts/About-Catment.rst:198
msgid ""
"Because we're going to call out to ``ament build``, we will also need a "
"minimal installation of ``ament``, as done in a previous example:"
msgstr ""
"Comme nous allons appeler ``ament build``, nous aurons également besoin "
"d'une installation minimale de ``ament``, comme dans un exemple précédent :"

#: ../../source/Concepts/About-Catment.rst:215
msgid "Then we need to install the modified version of catkin somewhere:"
msgstr ""
"Ensuite, nous devons installer la version modifiée de catkin quelque part :"

#: ../../source/Concepts/About-Catment.rst:233
msgid "Now build the ROS 2 packages:"
msgstr "Compilez maintenant les packages ROS 2 :"

#: ../../source/Concepts/About-Catment.rst:243
msgid "Voila: you've built ROS 2 using the tools that you're familiar with."
msgstr ""
"Voilà : vous avez créé ROS 2 à l'aide des outils que vous connaissez bien."

#: ../../source/Concepts/About-Catment.rst:246
msgid ""
"**Caveat**: we're ignoring the ``eProsima`` packages in the workspace "
"because they lack ``package.xml`` files, which means that ``catkin`` can't "
"see them. ``ament`` has some heuristics for handling such packages. Options:"
" backport those heuristics to ``catkin``; switch to installing "
"non-``package.xml``-containing packages outside of the workspace; or just "
"add a ``package.xml`` to each of those packages (e.g., in our own fork)."
msgstr ""
"**Mise en garde** : nous ignorons les packages ``eProsima`` dans l'espace de"
" travail car ils manquent de fichiers ``package.xml``, ce qui signifie que "
"``catkin`` ne peut pas les voir. ``ament`` a quelques heuristiques pour "
"gérer de tels paquets. Options : rétroportez ces heuristiques vers "
"``catkin`` ; passer à l'installation de packages ne contenant pas "
"``package.xml`` en dehors de l'espace de travail ; ou ajoutez simplement un "
"``package.xml`` à chacun de ces packages (par exemple, dans notre propre "
"fork)."

#: ../../source/Concepts/About-Catment.rst:251
msgid "Combining all of ROS and ROS 2 in one workspace and building it (TODO)"
msgstr ""
"Combiner tout ROS et ROS 2 dans un seul espace de travail et le construire "
"(TODO)"

#: ../../source/Concepts/About-Catment.rst:253
msgid "This step will require sorting out some things, including at least:"
msgstr ""
"Cette étape nécessitera de trier certaines choses, y compris au moins :"

#: ../../source/Concepts/About-Catment.rst:255
msgid ""
"Package name conflicts. We currently have ROS 2 versions of ROS message "
"packages, as well as some stuff in ``geometry2``. Either the functionality "
"needs to be merged into one package that can support both systems, or the "
"new versions need different names."
msgstr ""
"Conflits de nom de package. Nous avons actuellement des versions ROS 2 des "
"packages de messages ROS, ainsi que des éléments dans ``geometry2``. Soit la"
" fonctionnalité doit être fusionnée dans un package qui peut prendre en "
"charge les deux systèmes, soit les nouvelles versions nécessitent des noms "
"différents."

#: ../../source/Concepts/About-Catment.rst:258
msgid ""
"Message generation. ROS and ROS 2 have different message generation steps, "
"the output of which might or not might conflict. Something sort of "
"sophisticated needs to be done to allow generation of all the right "
"artifacts from a single message package (or, as indicated above, the new "
"message packages need different name)."
msgstr ""
"Génération de messages. ROS et ROS 2 ont des étapes de génération de message"
" différentes, dont la sortie peut ou non entrer en conflit. Quelque chose de"
" sophistiqué doit être fait pour permettre la génération de tous les bons "
"artefacts à partir d'un seul paquet de messages (ou, comme indiqué ci-"
"dessus, les nouveaux paquets de messages ont besoin d'un nom différent)."

#: ../../source/Concepts/About-Catment.rst:263
msgid "Using ``bloom`` to release ``ament`` packages (TODO)"
msgstr "Utiliser ``bloom`` pour publier les packages ``ament`` (TODO)"

#: ../../source/Concepts/About-Catment.rst:265
msgid ""
"It seems like ``bloom`` ought be able to release packages that use the "
"``ament`` CMake API, and that the resulting releases should be able to be "
"built on the farm. We can make changes to ``bloom`` and ``ros_buildfarm`` as"
" needed to enable this use case."
msgstr ""
"Il semble que ``bloom`` devrait pouvoir publier des packages qui utilisent "
"l'API CMake ``ament``, et que les versions résultantes devraient pouvoir "
"être construites sur la ferme. Nous pouvons apporter des modifications à "
"``bloom`` et ``ros_buildfarm`` selon les besoins pour activer ce cas "
"d'utilisation."
