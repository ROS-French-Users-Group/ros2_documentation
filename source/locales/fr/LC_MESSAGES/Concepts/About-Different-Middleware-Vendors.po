# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2023, Open Robotics
# This file is distributed under the same license as the ROS 2 documentation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: ROS 2 documentation\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-01-07 08:44+0100\n"
"PO-Revision-Date: 2023-01-07 14:08:02.689539\n"
"Last-Translator: potranslator 1.1.5\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: fr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Translated-By: potranslator 1.1.5\n"

#: ../../source/Concepts/About-Different-Middleware-Vendors.rst:6
msgid "About different ROS 2 DDS/RTPS vendors"
msgstr "À propos des différents fournisseurs ROS 2 DDS/RTPS"

#: ../../source/Concepts/About-Different-Middleware-Vendors.rst:8
msgid ""
"ROS 2 is built on top of DDS/RTPS as its middleware, which provides "
"discovery, serialization and transportation. `This article "
"<https://design.ros2.org/articles/ros_on_dds.html>`__ explains the "
"motivation behind using DDS implementations, and/or the RTPS wire protocol "
"of DDS, in detail. In summary, DDS is an end-to-end middleware that provides"
" features which are relevant to ROS systems, such as distributed discovery "
"(not centralized like in ROS 1) and control over different \"Quality of "
"Service\" options for the transportation."
msgstr ""
"ROS 2 est construit sur DDS/RTPS en tant que middleware, qui fournit la "
"découverte, la sérialisation et le transport. `Cet article "
"<https://design.ros2.org/articles/ros_on_dds.html>`__ explique en détail la "
"motivation derrière l'utilisation des implémentations DDS et/ou du protocole"
" filaire RTPS de DDS. En résumé, DDS est un middleware de bout en bout qui "
"fournit des fonctionnalités pertinentes pour les systèmes ROS, telles que la"
" découverte distribuée (non centralisée comme dans ROS 1) et le contrôle de "
"différentes options de « qualité de service » pour le transport."

#: ../../source/Concepts/About-Different-Middleware-Vendors.rst:12
msgid ""
"`DDS <https://www.omg.org/omg-dds-portal>`__ is an industry standard which "
"is implemented by a range of vendors, such as RTI's `Connext DDS "
"<https://www.rti.com/products/>`__, eProsima's `Fast DDS <https://fast-"
"dds.docs.eprosima.com/>`__, Eclipse's `Cyclone DDS "
"<https://projects.eclipse.org/projects/iot.cyclonedds>`__, or "
"GurumNetworks's `GurumDDS <https://gurum.cc/index_eng>`__. RTPS (a.k.a. "
"`DDSI-RTPS <https://www.omg.org/spec/DDSI-RTPS/About-DDSI-RTPS/>`__\\ ) is "
"the wire protocol used by DDS to communicate over the network."
msgstr ""
"`DDS <https://www.omg.org/omg-dds-portal>`__ est une norme de l'industrie "
"qui est mise en œuvre par une gamme de fournisseurs, tels que `Connext DDS "
"<https://www.rti.com de RTI /products/>`__, `Fast DDS d'eProsima "
"<https://fast-dds.docs.eprosima.com/>`__, `Cyclone DDS d'Eclipse "
"<https://projects.eclipse.org/projects/iot.cyclonedds >`__, ou `GurumDDS "
"<https://gurum.cc/index_eng>`__ de GurumNetworks. RTPS (alias `DDSI-RTPS "
"<https://www.omg.org/spec/DDSI-RTPS/About-DDSI-RTPS/>`__\\ ) est le "
"protocole filaire utilisé par DDS pour communiquer sur le réseau."

#: ../../source/Concepts/About-Different-Middleware-Vendors.rst:15
msgid ""
"ROS 2 supports multiple DDS/RTPS implementations because it is not "
"necessarily \"one size fits all\" when it comes to choosing a "
"vendor/implementation. There are many factors you might consider while "
"choosing a middleware implementation: logistical considerations like the "
"license, or technical considerations like platform availability, or "
"computation footprint. Vendors may provide more than one DDS or RTPS "
"implementation targeted at meeting different needs. For example, RTI has a "
"few variations of their Connext implementation that vary in purpose, like "
"one that specifically targets microcontrollers and another which targets "
"applications requiring special safety certifications (we only support their "
"standard desktop version at this time)."
msgstr ""
"ROS 2 prend en charge plusieurs implémentations DDS/RTPS car il n'est pas "
"nécessairement \"taille unique\" lorsqu'il s'agit de choisir un "
"fournisseur/une implémentation. De nombreux facteurs peuvent être pris en "
"compte lors du choix d'une implémentation de middleware : des considérations"
" logistiques telles que la licence ou des considérations techniques telles "
"que la disponibilité de la plate-forme ou l'empreinte de calcul. Les "
"fournisseurs peuvent proposer plusieurs implémentations DDS ou RTPS visant à"
" répondre à différents besoins. Par exemple, RTI a quelques variantes de "
"leur implémentation Connext qui varient dans leur objectif, comme une qui "
"cible spécifiquement les microcontrôleurs et une autre qui cible les "
"applications nécessitant des certifications de sécurité spéciales (nous ne "
"prenons en charge que leur version de bureau standard pour le moment)."

#: ../../source/Concepts/About-Different-Middleware-Vendors.rst:20
msgid ""
"In order to use a DDS/RTPS implementation with ROS 2, a \"\\ **R**\\ OS "
"**M**\\ iddle\\ **w**\\ are interface\" (a.k.a. ``rmw`` interface or just "
"``rmw``\\ ) package needs to be created that implements the abstract ROS "
"middleware interface using the DDS or RTPS implementation's API and tools. "
"It's a lot of work to implement and maintain RMW packages for supporting DDS"
" implementations, but supporting at least a few implementations is important"
" for ensuring that the ROS 2 codebase is not tied to any one particular "
"implementation, as users may wish to switch out implementations depending on"
" their project's needs."
msgstr ""
"Afin d'utiliser une implémentation DDS/RTPS avec ROS 2, une interface \"\\ "
"**R**\\ OS **M**\\ iddle\\ **w**\\ are\" (a.k.a. ``rmw`` interface ou "
"simplement ``rmw``\\ ) doit être créé pour implémenter l'interface abstraite"
" du middleware ROS à l'aide de l'API et des outils de l'implémentation DDS "
"ou RTPS. L'implémentation et la maintenance des packages RMW pour la prise "
"en charge des implémentations DDS demandent beaucoup de travail, mais la "
"prise en charge d'au moins quelques implémentations est importante pour "
"garantir que la base de code ROS 2 n'est pas liée à une implémentation "
"particulière, car les utilisateurs peuvent souhaiter changer "
"d'implémentation. sur les besoins de leur projet."

#: ../../source/Concepts/About-Different-Middleware-Vendors.rst:24
msgid "Supported RMW implementations"
msgstr "Implémentations RMW prises en charge"

#: ../../source/Concepts/About-Different-Middleware-Vendors.rst:29
msgid "Product name"
msgstr "Nom du produit"

#: ../../source/Concepts/About-Different-Middleware-Vendors.rst:30
msgid "License"
msgstr "Licence"

#: ../../source/Concepts/About-Different-Middleware-Vendors.rst:31
msgid "RMW implementation"
msgstr "Mise en œuvre de la RMW"

#: ../../source/Concepts/About-Different-Middleware-Vendors.rst:32
msgid "Status"
msgstr "Statut"

#: ../../source/Concepts/About-Different-Middleware-Vendors.rst:33
msgid "eProsima *Fast DDS*"
msgstr "eProsima *Fast DDS*"

#: ../../source/Concepts/About-Different-Middleware-Vendors.rst:34
msgid "Apache 2"
msgstr "Apache 2"

#: ../../source/Concepts/About-Different-Middleware-Vendors.rst:35
msgid "``rmw_fastrtps_cpp``"
msgstr "``rmw_fastrtps_cpp``"

#: ../../source/Concepts/About-Different-Middleware-Vendors.rst:36
msgid "Full support. Default RMW. Packaged with binary releases."
msgstr "Plein soutien. RMW par défaut. Emballé avec des versions binaires."

#: ../../source/Concepts/About-Different-Middleware-Vendors.rst:37
msgid "Eclipse *Cyclone DDS*"
msgstr "Éclipse *Cyclone DDS*"

#: ../../source/Concepts/About-Different-Middleware-Vendors.rst:38
msgid "Eclipse Public License v2.0"
msgstr "Licence publique Eclipse v2.0"

#: ../../source/Concepts/About-Different-Middleware-Vendors.rst:39
msgid "``rmw_cyclonedds_cpp``"
msgstr "``rmw_cyclonedds_cpp``"

#: ../../source/Concepts/About-Different-Middleware-Vendors.rst:40
msgid "Full support. Packaged with binary releases."
msgstr "Plein soutien. Emballé avec des versions binaires."

#: ../../source/Concepts/About-Different-Middleware-Vendors.rst:41
msgid "RTI *Connext DDS*"
msgstr "RTI *Connecter DDS*"

#: ../../source/Concepts/About-Different-Middleware-Vendors.rst:42
msgid "commercial, research"
msgstr "commerciale, de recherche"

#: ../../source/Concepts/About-Different-Middleware-Vendors.rst:43
msgid "``rmw_connextdds``"
msgstr "``rmw_connextdds``"

#: ../../source/Concepts/About-Different-Middleware-Vendors.rst:44
msgid ""
"Full support. Support included in binaries, but Connext installed "
"separately."
msgstr ""
"Plein soutien. Prise en charge incluse dans les fichiers binaires, mais "
"Connext installé séparément."

#: ../../source/Concepts/About-Different-Middleware-Vendors.rst:45
msgid "GurumNetworks *GurumDDS*"
msgstr "GurumNetworks *GurumDDS*"

#: ../../source/Concepts/About-Different-Middleware-Vendors.rst:46
msgid "commercial"
msgstr "commercial"

#: ../../source/Concepts/About-Different-Middleware-Vendors.rst:47
msgid "``rmw_gurumdds_cpp``"
msgstr "``rmw_gurumds_cp''"

#: ../../source/Concepts/About-Different-Middleware-Vendors.rst:48
msgid ""
"Community support. Support included in binaries, but GurumDDS installed "
"separately."
msgstr ""
"Soutien communautaire. Prise en charge incluse dans les fichiers binaires, "
"mais GurumDDS installé séparément."

#: ../../source/Concepts/About-Different-Middleware-Vendors.rst:50
msgid ""
"For practical information on working with multiple RMW implementations, see "
"the :doc:`\"Working with multiple RMW implementations\" <../How-To-"
"Guides/Working-with-multiple-RMW-implementations>` tutorial."
msgstr ""
"Pour des informations pratiques sur l'utilisation de plusieurs "
"implémentations RMW, consultez le didacticiel :doc:`\"Working with multiple "
"RMW implementations\" <../How-To-Guides/Working-with-multiple-RMW-"
"implementations>`."

#: ../../source/Concepts/About-Different-Middleware-Vendors.rst:53
msgid "Multiple RMW implementations"
msgstr "Plusieurs implémentations RMW"

#: ../../source/Concepts/About-Different-Middleware-Vendors.rst:55
msgid ""
"The ROS 2 binary releases for currently active distros have built-in support"
" for several RMW implementations out of the box (Fast DDS, RTI Connext Pro, "
"Eclipse Cyclone DDS, GurumNetworks GurumDDS). The default is Fast DDS, which"
" works without any additional installation steps because we distribute it "
"with our binary packages."
msgstr ""
"Les versions binaires ROS 2 pour les distributions actuellement actives ont "
"un support intégré pour plusieurs implémentations RMW prêtes à l'emploi "
"(Fast DDS, RTI Connext Pro, Eclipse Cyclone DDS, GurumNetworks GurumDDS). La"
" valeur par défaut est Fast DDS, qui fonctionne sans aucune étape "
"d'installation supplémentaire car nous la distribuons avec nos packages "
"binaires."

#: ../../source/Concepts/About-Different-Middleware-Vendors.rst:58
msgid ""
"Other RMWs like Cyclone DDS, Connext or GurumDDS can be enabled by "
":doc:`installing additional packages <../Installation/DDS-Implementations>`,"
" but without having to rebuild anything or replace any existing packages."
msgstr ""
"D'autres RMW comme Cyclone DDS, Connext ou GurumDDS peuvent être activés en "
":doc:`installant des packages supplémentaires <../Installation/DDS-"
"Implementations>`, mais sans avoir à reconstruire quoi que ce soit ou à "
"remplacer les packages existants."

#: ../../source/Concepts/About-Different-Middleware-Vendors.rst:60
msgid ""
"A ROS 2 workspace that has been built from source may build and install "
"multiple RMW implementations simultaneously. While the core ROS 2 code is "
"being compiled, any RMW implementation that is found will be built if the "
"relevant DDS/RTPS implementation has been installed properly and the "
"relevant environment variables have been configured. For example, if the "
"code for the `RMW package for RTI Connext DDS "
"<https://github.com/ros2/rmw_connextdds>`__ is in the workspace, it will be "
"built if an installation of RTI's Connext Pro can also be found."
msgstr ""
"Un espace de travail ROS 2 créé à partir de la source peut créer et "
"installer plusieurs implémentations RMW simultanément. Pendant la "
"compilation du code ROS 2 principal, toute implémentation RMW trouvée sera "
"construite si l'implémentation DDS/RTPS appropriée a été installée "
"correctement et si les variables d'environnement appropriées ont été "
"configurées. Par exemple, si le code du `package RMW pour RTI Connext DDS "
"<https://github.com/ros2/rmw_connextdds>`__ est dans l'espace de travail, il"
" sera construit si une installation de Connext Pro de RTI peut également "
"être trouvée ."

#: ../../source/Concepts/About-Different-Middleware-Vendors.rst:64
msgid ""
"For many cases you will find that nodes using different RMW implementations "
"are able to communicate, however this is not true under all circumstances. "
"Here is a list of inter-vendor communication configurations that are not "
"supported:"
msgstr ""
"Dans de nombreux cas, vous constaterez que les nœuds utilisant différentes "
"implémentations RMW sont capables de communiquer, mais ce n'est pas vrai "
"dans toutes les circonstances. Voici une liste des configurations de "
"communication inter-fournisseurs qui ne sont pas prises en charge :"

#: ../../source/Concepts/About-Different-Middleware-Vendors.rst:67
msgid "Fast DDS <-> Connext"
msgstr "DDS rapide <-> Connexion"

#: ../../source/Concepts/About-Different-Middleware-Vendors.rst:68
msgid ""
"``WString`` published by Fast DDS can't be received correctly by Connext on "
"macOS"
msgstr ""
"``WString`` publié par Fast DDS ne peut pas être reçu correctement par "
"Connext sur macOS"

#: ../../source/Concepts/About-Different-Middleware-Vendors.rst:70
msgid "Connext <-> Cyclone DDS"
msgstr "Connext <-> Cyclone DDS"

#: ../../source/Concepts/About-Different-Middleware-Vendors.rst:70
msgid "does not support pub/sub communication for ``WString``"
msgstr "ne prend pas en charge la communication pub/sub pour ``WString``"

#: ../../source/Concepts/About-Different-Middleware-Vendors.rst:73
msgid "Default RMW implementation"
msgstr "Implémentation RMW par défaut"

#: ../../source/Concepts/About-Different-Middleware-Vendors.rst:75
msgid ""
"If a ROS 2 workspace has multiple RMW implementations, Fast DDS is selected "
"as the default RMW implementation if it is available. If the Fast DDS RMW "
"implementation is not installed, the RMW implementation with the first RMW "
"implementation identifier in alphabetical order will be used. The "
"implementation identifier is the name of the ROS package that provides the "
"RMW implementation, e.g. ``rmw_cyclonedds_cpp``. For example, if both "
"``rmw_cyclonedds_cpp`` and ``rmw_connextdds`` ROS packages are installed, "
"``rmw_connextdds`` would be the default. If ``rmw_fastrtps_cpp`` is ever "
"installed, it would be the default."
msgstr ""
"Si un espace de travail ROS 2 a plusieurs implémentations RMW, Fast DDS est "
"sélectionné comme implémentation RMW par défaut si elle est disponible. Si "
"l'implémentation Fast DDS RMW n'est pas installée, l'implémentation RMW avec"
" le premier identifiant d'implémentation RMW dans l'ordre alphabétique sera "
"utilisée. L'identifiant d'implémentation est le nom du package ROS qui "
"fournit l'implémentation RMW, par ex. ``rmw_cyclonedds_cpp``. Par exemple, "
"si les deux packages ROS ``rmw_cyclonedds_cpp`` et ``rmw_connextdds`` sont "
"installés, ``rmw_connextdds`` serait la valeur par défaut. Si "
"``rmw_fastrtps_cpp`` est installé, ce serait la valeur par défaut."

#: ../../source/Concepts/About-Different-Middleware-Vendors.rst:81
msgid ""
"See the :doc:`guide <../How-To-Guides/Working-with-multiple-RMW-"
"implementations>` for how to specify which RMW implementation is to be used "
"when running the ROS 2 examples."
msgstr ""
"Consultez le :doc:`guide <../How-To-Guides/Working-with-multiple-RMW-"
"implementations>` pour savoir comment spécifier quelle implémentation RMW "
"doit être utilisée lors de l'exécution des exemples ROS 2."
